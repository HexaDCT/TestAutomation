<ManuScript>
  <properties manuscriptID="Marketplace_PersonalHome_1_0_0_0" versionID="Marketplace_PersonalHome" versionDate="2011-01-01" version="3" boolean="1" fieldCache="1" caption="DCT Product Base Personal Home (1.0.0.0)" inherited="Carrier_ProductBase_PersonalLines_1_0_0_0" image="" dataSchema="" shortCircuitCond="1" cultureCode="en-US" cultureName="United States [english]" usePersistedState="0">
    <notes />
    <writtenConfig round="1" roundType="round">
      <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
      <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorTermPath" type="string" infoType="priorTerm" useXPath="1" />
      <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
      <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
      <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
      <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
      <writtenRef idref="CurrentTransaction.EffectiveDate" type="date" infoType="transDate" />
      <writtenRef idref="ConstantsPolicyAdminProcessing.IsCancel" type="boolean" infoType="cancel" />
      <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
      <writtenInfo idref="WrittenPremiumSharedConfiguration.ShortRateFactor" type="float" infoType="shortRate" />
      <writtenInfo type="int" value="4" infoType="precision" />
    </writtenConfig>
    <resourceState status="Deployed" protected="1" />
    <keys>
      <keyInfo name="family" value="Marketplace" />
      <keyInfo name="lob" value="PersonalHome" />
      <keyInfo name="state" value="Base" />
      <keyInfo name="version" value="1.0.0.0" />
      <keyInfo name="effectiveDateNew" value="2011-01-01" />
      <keyInfo name="effectiveDateRenewal" value="2011-01-01" />
      <keyInfo name="masterID" value="None" />
      <keyInfo name="productCode" value="Pages" />
    </keys>
    <contexts />
  </properties>
  <model defaultValue="data.SubmissionExecute">
    <object id="data" path="data" override="1">
      <object id="Policy" abstract="1">
        <object id="Line" path="line[Type=&quot;PersonalHome&quot;]" override="1">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="Risk" path="risk" override="1">
            <object id="RiskInput" abstract="1">
              <public id="RiskInput.Description" path="Description" type="string">
                <definition>
                  <caption value="Description" />
                </definition>
                <rules>
                  <default>
                    <calculation>
                      <argument op="eq" type="string" value="Residence " />
                      <argument op="add" idref="RiskPrivate.CurrentIteration" type="int" />
                    </calculation>
                  </default>
                </rules>
              </public>
            </object>
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="RiskOutput" abstract="1">
              <object id="RiskOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
              </object>
              <object id="RiskPremiumTotals" abstract="1">
                <object id="RiskPurePremiums" abstract="1">
                  <public id="RiskPurePremiums.Premium" path="PurePremium" type="float" comment="This should include all annual premiums for the coverages that are NOT including in the policy distribution." class="excludeInChangeSummary" override="1">
                    <definition>
                      <caption value="Risk Pure Premium" />
                      <maxLength idref="MaxLength.fValue" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <readOnly idref="True" />
                    </definition>
                    <rules>
                      <value>
                        <calculation>
                          <argument op="eq" idref="RiskPrivate.Premium" type="float" />
                          <argument op="add" idref="AutoHomeDiscountOutput.Premium" type="float" />
                        </calculation>
                      </value>
                    </rules>
                    <worksheet>
                      <comparison idref="True" type="int" />
                      <caption value="Premium" />
                    </worksheet>
                  </public>
                  <public id="RiskPurePremiums.PremiumChange" path="PurePremium/@change" type="float" comment="This should include all change premiums for the coverages that are NOT including in the policy distribution." class="excludeInChangeSummary" override="1">
                    <definition>
                      <caption value="Risk Pure Premiums Pure Premium Change" />
                      <maxLength idref="MaxLength.fValue" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <readOnly idref="True" />
                    </definition>
                    <rules>
                      <value>
                        <calculation>
                          <argument op="eq" idref="RiskPrivate.PremiumChange" type="float" />
                          <argument op="add" idref="AutoHomeDiscountOutput.PremiumChange" type="float" />
                        </calculation>
                      </value>
                    </rules>
                  </public>
                  <public id="RiskPurePremiums.PremiumWritten" path="PurePremium/@written" type="float" comment="This should include all written premiums for the coverages that are NOT including in the policy distribution." class="excludeInChangeSummary" override="1">
                    <definition>
                      <caption value="Risk Pure Premiums Pure Premium Written" />
                      <maxLength idref="MaxLength.fValue" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <readOnly idref="True" />
                    </definition>
                    <rules>
                      <value>
                        <calculation>
                          <argument op="eq" idref="RiskPrivate.PremiumWritten" type="float" />
                          <argument op="add" idref="AutoHomeDiscountOutput.PremiumWritten" type="float" />
                        </calculation>
                      </value>
                    </rules>
                  </public>
                </object>
                <object id="RiskPremiums" abstract="1">
                </object>
              </object>
              <public id="RiskOutput.SPPMessage" path="SPPMessage" type="string">
                <definition>
                  <caption value="SPP Message" />
                </definition>
                <rules>
                  <value value="Note:  All SPP items are not included in the residence calculations and will be reported on the Pricing page." />
                </rules>
              </public>
            </object>
            <object id="RiskPrivate" abstract="1">
              <private id="RiskPrivate.Premium" type="float" comment="This should include all annual premiums for the coverages that are NOT including in the policy distribution." path="PremiumCalc">
                <value>
                  <calculation>
                    <argument op="eq" idref="DwellingOutput.AdjustedBasePremium" type="float" />
                    <argument op="add" idref="CoverageBOtherStructuresOutput.Premium" type="float" />
                    <argument op="add" idref="CoverageDLossOfUseOutput.Premium" type="float" />
                    <argument op="add" idref="CoverageELiabilityOutput.Premium" type="float" />
                    <argument op="add" idref="CoverageFMedicalOutput.Premium" type="float" />
                    <argument op="add" idref="SectionICoveragesOutput.SectionIPremium" type="float" />
                    <argument op="add" idref="SectionIICoveragesOutput.SectionIIPremium" type="float" />
                  </calculation>
                </value>
                <worksheet />
              </private>
              <private id="RiskPrivate.PremiumChange" type="float" comment="This should include all change premiums for the coverages that are NOT including in the policy distribution." path="PremiumChangeCalc">
                <value>
                  <calculation>
                    <argument op="eq" idref="DwellingOutput.AdjustedBasePremiumChange" type="float" />
                    <argument op="add" idref="CoverageBOtherStructuresOutput.PremiumChange" type="float" />
                    <argument op="add" idref="CoverageDLossOfUseOutput.PremiumChange" type="float" />
                    <argument op="add" idref="CoverageELiabilityOutput.PremiumChange" type="float" />
                    <argument op="add" idref="CoverageFMedicalOutput.PremiumChange" type="float" />
                    <argument op="add" idref="SectionICoveragesOutput.SectionIPremiumChange" type="float" />
                    <argument op="add" idref="SectionIICoveragesOutput.SectionIIPremiumChange" type="float" />
                  </calculation>
                </value>
              </private>
              <private id="RiskPrivate.PremiumWritten" type="float" comment="This should include all written premiums for the coverages that are NOT including in the policy distribution." path="PremiumWrittenCalc">
                <value>
                  <calculation>
                    <argument op="eq" idref="DwellingOutput.AdjustedBasePremiumWritten" type="float" />
                    <argument op="add" idref="CoverageBOtherStructuresOutput.PremiumWritten" type="float" />
                    <argument op="add" idref="CoverageDLossOfUseOutput.PremiumWritten" type="float" />
                    <argument op="add" idref="CoverageELiabilityOutput.PremiumWritten" type="float" />
                    <argument op="add" idref="CoverageFMedicalOutput.PremiumWritten" type="float" />
                    <argument op="add" idref="SectionICoveragesOutput.SectionIPremiumWritten" type="float" />
                    <argument op="add" idref="SectionIICoveragesOutput.SectionIIPremiumWritten" type="float" />
                  </calculation>
                </value>
              </private>
              <object id="FormsInformation">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="FormsInformation.CheckBox" caption="" type="string">
                  <value value="X" />
                </private>
                <private id="FormsInformation.IsPhoneTypeWork" caption="" type="string">
                  <value>
                    <comparison compare="eq">
                      <operand idref="AccountInput.PrimaryPhoneType" type="string" />
                      <operand type="string" value="Work" />
                    </comparison>
                  </value>
                </private>
                <private id="FormsInformation.IsPhoneTypeMobile" caption="" type="string">
                  <value>
                    <comparison compare="eq">
                      <operand idref="AccountInput.PrimaryPhoneType" type="string" />
                      <operand type="string" value="Mobile" />
                    </comparison>
                  </value>
                </private>
                <private id="FormsInformation.IsPhoneTypeHome" caption="" type="string">
                  <value>
                    <comparison compare="eq">
                      <operand idref="AccountInput.PrimaryPhoneType" type="string" />
                      <operand type="string" value="Home" />
                    </comparison>
                  </value>
                </private>
                <private id="FormsInformation.PaymentPlan" caption="" type="string" alwaysRun="1">
                  <value idref="BillingKeys.BillClass" />
                </private>
                <private id="FormsInformation.BilledTo" caption="" type="string" alwaysRun="1">
                  <value idref="BillingKeys.AccountSetupSelection" />
                </private>
                <private id="FormsInformation.IsWindDedGreaterThanZero" caption="" type="string">
                  <value>
                    <comparison compare="or">
                      <comparison compare="or">
                        <comparison compare="or">
                          <comparison compare="eq">
                            <operand idref="DwellingInput.WindDeductible" type="string" />
                            <operand type="int" value="1" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="DwellingInput.WindDeductible" type="string" />
                            <operand type="int" value="2" />
                          </comparison>
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="DwellingInput.WindDeductible" type="string" />
                          <operand type="int" value="5" />
                        </comparison>
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="DwellingInput.WindDeductible" type="string" />
                        <operand type="int" value="10" />
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="FormsInformation.IsPrimaryHeatSelected" caption="" type="string">
                  <value>
                    <comparison compare="eq">
                      <operand idref="DwellingInput.PrimaryHeatType" type="string" />
                      <operand type="string" value="" />
                    </comparison>
                  </value>
                </private>
                <private id="FormsInformation.IsSecondaryHeatSelected" caption="" type="string">
                  <value>
                    <comparison compare="eq">
                      <operand idref="DwellingInput.PrimaryHeatType" type="string" />
                      <operand type="string" value="" />
                    </comparison>
                  </value>
                </private>
                <private id="FormsInformation.RiskLocationNumber" caption="" type="string">
                  <value value="1" />
                </private>
                <private id="FormsInformation.PriorInsuranceIteratorGreaterThanOne" caption="" type="string">
                  <value>
                    <comparison compare="lt">
                      <operand idref="AccountPrivate.PriorInsuranceAdded" type="boolean" />
                      <operand type="int" value="1" />
                    </comparison>
                  </value>
                </private>
                <private id="FormsInformation.AnyLosses" caption="" type="string">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="gt">
                          <operand idref="LinePrivate.LossCount" type="int" />
                          <operand type="int" value="0" />
                        </comparison>
                      </condition>
                      <then value="Y" />
                      <else value="N" />
                    </if>
                  </value>
                </private>
                <private id="FormsInformation.FirstNameInitalSubString" caption="" type="string">
                  <value>
                    <subString subStrMethod="startPosition">
                      <sourceString idref="AccountInput.FirstName" />
                      <startPos value="1" />
                      <length value="1" />
                    </subString>
                  </value>
                </private>
                <private id="FormsInformation.LastNameInitialSubString" caption="" type="string">
                  <value>
                    <subString subStrMethod="startPosition">
                      <sourceString idref="AccountInput.LastName" />
                      <startPos value="1" />
                      <length value="1" />
                    </subString>
                  </value>
                </private>
                <private id="FormsInformation.ApplicantInitials" caption="" type="string">
                  <value>
                    <calculation>
                      <argument op="eq" idref="FormsInformation.FirstNameInitalSubString" type="string" />
                      <argument op="add" idref="FormsInformation.LastNameInitialSubString" type="string" />
                    </calculation>
                  </value>
                </private>
                <private id="FormsInformation.FungiAndBacteriaPropertyLimitSubstring" caption="" type="string">
                  <value>
                    <subString subStrMethod="delimitedList">
                      <sourceString idref="LimitedFungiBacteriaInput.Limit" />
                      <separatorChar value="/" />
                      <ordPosition value="1" />
                    </subString>
                  </value>
                </private>
                <private id="FormsInformation.FungiAndBacteriaLiabilityLimitsubstring" caption="" type="string">
                  <value>
                    <subString subStrMethod="delimitedList">
                      <sourceString idref="LimitedFungiBacteriaInput.Limit" />
                      <separatorChar value="/" />
                      <ordPosition value="2" />
                    </subString>
                  </value>
                </private>
                <private id="FormsInformation.FungiAndBateriaLiabilityFullValue" caption="" type="string">
                  <value>
                    <calculation>
                      <argument op="eq" idref="FormsInformation.FungiAndBacteriaLiabilityLimitsubstring" type="string" />
                      <argument op="add" type="string" value=",000" />
                    </calculation>
                  </value>
                </private>
                <private id="FormsInformation.FungiAndBacteriaPropertyFullValue" caption="" type="string">
                  <value>
                    <calculation>
                      <argument op="eq" idref="FormsInformation.FungiAndBacteriaPropertyLimitSubstring" type="string" />
                      <argument op="add" type="string" value=",000" />
                    </calculation>
                  </value>
                </private>
                <private id="FormsInformation.FarmingMedicalLiabilityYesNo" caption="" type="string">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="IncidentalFarmingPersonalLiabilityInput.Indicator" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </condition>
                      <then value="Y" />
                      <else value="N" />
                    </if>
                  </value>
                </private>
                <private id="FormsInformation.WindExcluded" caption="" type="string" alwaysRun="1">
                  <value>
                    <comparison compare="eq">
                      <operand idref="DwellingInput.WindDeductible" type="string" />
                      <operand type="string" value="N" />
                    </comparison>
                  </value>
                </private>
                <private id="FormsInformation.IsCurrentAddressNotSameAsMailing" caption="" type="string" alwaysRun="1">
                  <value>
                    <comparison compare="ne">
                      <operand idref="MailingAddressInfo.MailingAddress1" type="string" />
                      <operand type="string" value="" />
                    </comparison>
                  </value>
                </private>
                <private id="FormsInformation.IsApplicantBusinessPhoneTrue" caption="" type="string">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="PersonInput.WorkPhone" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </condition>
                      <then value=" " />
                      <else value="X" />
                    </if>
                  </value>
                </private>
                <private id="FormsInformation.YesOrNo" caption="" type="string">
                  <value>
                    <if>
                      <condition>
                        <comparison type="boolean" value="0" />
                      </condition>
                      <then value="" />
                      <else value="" />
                    </if>
                  </value>
                </private>
                <private id="FormsInformation.IsAdditionalOtherInterestsIterationOneOrGreater" caption="" type="string">
                  <value>
                    <comparison compare="ge">
                      <operand idref="AdditionalOtherInterestPrivate.CurrentIteration" type="int" />
                      <operand type="int" value="1" />
                    </comparison>
                  </value>
                </private>
                <private id="FormsInformation.IsAdditionalOtherInterestsIterationTwoOrGreater" caption="" type="string">
                  <value>
                    <comparison compare="ge">
                      <operand idref="AdditionalOtherInterestPrivate.CurrentIteration" type="int" />
                      <operand type="int" value="2" />
                    </comparison>
                  </value>
                </private>
                <private id="FormsInformation.IsThereUpdatedWiring" caption="" type="string">
                  <value>
                    <comparison compare="eq">
                      <operand idref="UpdatedServicesInfo.ElectricSystemUpdateYear" type="int" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </private>
                <private id="FormsInformation.DisplayMailingOrAccountAddress" caption="" type="string" alwaysRun="1">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="MailingAddressInfo.MailingAddressSame" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </condition>
                      <then idref="AccountOutput.CombinedAddress" />
                      <else idref="MailingAddressInfo.MailingAddressCombined" />
                    </if>
                  </value>
                </private>
                <private id="FormsInformation.DisplayMailingOrAccountCityStateZip" caption="" type="string" alwaysRun="1">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="MailingAddressInfo.MailingAddressSame" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </condition>
                      <then idref="AccountInput.CityStateZip" />
                      <else idref="MailingAddressInfo.MailingAddressCityStateZip" />
                    </if>
                  </value>
                </private>
                <private id="FormsInformation.IsThereUpdatedHeatingSystem" caption="" type="string">
                  <value>
                    <comparison compare="eq">
                      <operand idref="UpdatedServicesInfo.HeatingUpdateYear" type="int" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </private>
                <private id="FormsInformation.IsThereUpdatedPlumbing" caption="" type="string">
                  <value>
                    <comparison compare="eq">
                      <operand idref="UpdatedServicesInfo.PlumbingUpdateYear" type="int" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </private>
                <private id="FormsInformation.IsCentralHeatUsed" caption="" type="string">
                  <value>
                    <comparison compare="or">
                      <comparison compare="eq">
                        <operand idref="DwellingInput.PrimaryHeatType" type="string" />
                        <operand type="string" value="Electric" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="DwellingInput.PrimaryHeatType" type="string" />
                        <operand type="string" value="Gas" />
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="FormsInformation.LossDateDescriptionAmount" caption="" type="string">
                  <value>
                    <calculation>
                      <argument op="eq" idref="LossInput.DateOfLoss" type="date" />
                      <argument op="add" type="string" value=", " />
                      <argument op="add" idref="LossInput.Description" type="string" />
                      <argument op="add" type="string" value=",  $" />
                      <argument op="add" idref="LossInput.AmountPaid" type="float" />
                    </calculation>
                  </value>
                </private>
                <private id="FormsInformation.IsDwellingSuburbanRating" caption="" type="string" path="IsDwellingSuburbanRating">
                  <value>
                    <comparison compare="ge">
                      <operand idref="DwellingInput.RatedProtectionClass" type="string" />
                      <operand type="int" value="9" />
                    </comparison>
                  </value>
                </private>
                <private id="FormsInformation.DisplayAccountAddressOrLocationAddress" caption="" type="string">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="LocationInput.Address1" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </condition>
                      <then idref="AccountOutput.CombinedAddress" />
                      <else idref="LocationInput.CombinedAddress" />
                    </if>
                  </value>
                </private>
                <private id="FormsInformation.DisplayAccountCityStateZipOrLocationCityStateZip" caption="" type="string">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="LocationInput.City" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </condition>
                      <then idref="AccountInput.CityStateZip" />
                      <else idref="LocationInput.CityStateZip" />
                    </if>
                  </value>
                </private>
                <private id="FormsInformation.IsDistanceToHydrantZero" caption="" type="string">
                  <value>
                    <comparison compare="gt">
                      <operand idref="DwellingInput.DistanceToHydrant" type="int" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </private>
                <private id="FormsInformation.IsDistanceToStationZero" caption="" type="string">
                  <value>
                    <comparison compare="gt">
                      <operand idref="DwellingInput.DistanceToFireStation" type="int" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </private>
                <private id="FormsInformation.DisplayAccountCityOrLocationCity" caption="" type="string">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="LocationInput.City" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </condition>
                      <then idref="AccountInput.City" />
                      <else idref="LocationInput.City" />
                    </if>
                  </value>
                </private>
                <private id="FormsInformation.DisplayAccountZipOrLocationZip" caption="" type="string">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="LocationInput.ZipCode" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </condition>
                      <then idref="AccountInput.ZipCode" />
                      <else idref="LocationInput.ZipCode" />
                    </if>
                  </value>
                </private>
                <private id="FormsInformation.IsCoApplicantBusinessPhoneTrue" caption="" type="string">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="AccountInput.CoApplicantFirstName" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </condition>
                      <then value=" " />
                      <else value="X" />
                    </if>
                  </value>
                </private>
                <private id="FormsInformation.DisplayMailingOrAccountCity" caption="" type="string" alwaysRun="1">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="MailingAddressInfo.MailingAddressSame" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </condition>
                      <then idref="AccountInput.City" />
                      <else idref="MailingAddressInfo.MailingCity" />
                    </if>
                  </value>
                </private>
                <private id="FormsInformation.DisplayMailingOrAccountZip" caption="" type="string" alwaysRun="1">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="MailingAddressInfo.MailingAddressSame" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </condition>
                      <then idref="AccountInput.ZipCode" />
                      <else idref="MailingAddressInfo.MailingZipcode" />
                    </if>
                  </value>
                </private>
              </object>
              <object id="RiskManuscript" abstract="1">
                <private id="RiskManuscript.FormsManuScriptID" caption="" type="string">
                  <value>
                    <calculation>
                      <argument op="eq" type="string" value="Marketplace_PersonalHomeForms_" />
                      <argument op="add" idref="AccountInput.State" type="string" />
                      <argument op="add" type="string" value="_1_0_0_0" />
                    </calculation>
                  </value>
                </private>
              </object>
            </object>
            <object id="SectionICoverages" path="SectionICoverages">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="Earthquake" path="coverage[Type=&quot;Earthquake&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="EarthquakeInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="EarthquakeInput.Deductible" path="deductible[Type=&quot;Standard&quot;]/sValue" type="string">
                    <definition>
                      <caption value="Earthquake Deductible" />
                      <options>
                        <option value="N" caption="None" />
                        <option value="5" caption="5%" />
                        <option value="10" caption="10%" />
                        <option value="15" caption="15%" />
                        <option value="20" caption="20%" />
                        <option value="25" caption="25%" />
                      </options>
                      <maxLength value="2" />
                    </definition>
                    <rules>
                      <default value="N" />
                    </rules>
                  </public>
                  <public id="EarthquakeInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Earthquake (HO0454)" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="ne">
                          <operand idref="EarthquakeInput.Deductible" type="string" />
                          <operand type="string" value="N" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="EarthquakeInput.LossAssessmentLimit" path="limit[Type=&quot;LossAssessment&quot;]/iValue" type="float">
                    <definition>
                      <caption value="Earthquake Loss Assessment Limit" />
                      <maxLength value="10" />
                      <formatMask idref="FormatMask.Limit" />
                    </definition>
                    <rules>
                      <default value="0" />
                      <misc>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="EarthquakeInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                        </if>
                      </misc>
                      <minimum value="0" />
                      <maximum>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="DwellingPrivate.FormIsCondoOrTenant" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then idref="CoverageADwellingInput.Limit" />
                          <else idref="CoverageCPersonalPropertyHO46Input.Limit" />
                        </if>
                      </maximum>
                    </rules>
                  </public>
                </object>
                <object id="EarthquakeOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="EarthquakeOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Earthquake" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="EarthquakeInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="EarthquakePrivate.BasePremium" type="float" />
                              <argument op="add" idref="EarthquakePrivate.AdditionsAlterationsPremium" type="float" />
                              <argument op="add" idref="EarthquakePrivate.OtherStructuresPremium" type="float" />
                              <argument op="add" idref="EarthquakePrivate.PersonalPropertyPremium" type="float" />
                              <argument op="add" idref="EarthquakePrivate.LossOfUsePremium" type="float" />
                              <argument op="add" idref="EarthquakePrivate.LossAssessmentPremium" type="float" />
                              <argument op="multiply" round="1" roundType="round" idref="EarthquakePrivate.DeductibleFactor" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                      <affects>
                        <reference idref="EarthquakeOutput.Zone" effect="postEffect" />
                      </affects>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="EarthquakeOutput.Zone" path="exposure[Type=&quot;Zone&quot;]/sValue" type="string">
                    <definition>
                      <caption value="Zone" />
                    </definition>
                    <rules>
                      <value value="4" />
                      <default value="4" />
                    </rules>
                  </public>
                  <public id="EarthquakeOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Earthquake Output Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="EarthquakeOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="EarthquakeOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Earthquake Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                </object>
                <object id="EarthquakePrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="EarthquakePrivate.AdditionsAlterationsPremium" caption="" type="float">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="DwellingPrivate.FormIsCondoOrTenant" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="AdditionsAlterationsInput.Limit" type="int" />
                            <argument op="subtract" idref="AdditionsAlterationsPrivate.IncludedLimit" type="float" />
                            <argument op="divide" type="int" value="100" />
                            <argument op="multiply" round="1" roundType="round" idref="EarthquakePrivate.AdditionsAlterationsRate" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </private>
                  <private id="EarthquakePrivate.AdditionsAlterationsRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="EarthquakeRates" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="OtherStructures" name="Coverage" />
                        <keyRef idref="DwellingInput.Construction" type="string" name="ConstructionType" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Earthquake Additions and Alterations Rate" />
                    </worksheet>
                  </private>
                  <private id="EarthquakePrivate.BasePremium" caption="" type="float">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="SpecialPersonalPropertyCoverageInput.Indicator" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="DwellingPrivate.BaseLimit" type="float" />
                            <argument op="divide" type="int" value="1000" />
                            <argument op="multiply" round="1" roundType="round" idref="EarthquakePrivate.BaseRate" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </private>
                  <private id="EarthquakePrivate.BaseRate" caption="" type="float">
                    <value>
                      <if>
                        <condition idref="DwellingPrivate.FormIsCondoOrTenant" />
                        <then idref="EarthquakePrivate.PersonalPropertyRate" />
                        <else idref="EarthquakePrivate.DwellingRate" />
                      </if>
                    </value>
                  </private>
                  <private id="EarthquakePrivate.DeductibleFactor" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="EarthquakeDeductibleFactor" />
                        <fieldRef value="Factor" />
                        <keyRef idref="EarthquakeInput.Deductible" type="string" name="Deductible" />
                        <keyRef idref="DwellingInput.Construction" type="string" name="ConstructionType" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Earthquake Deductible Factor" />
                    </worksheet>
                  </private>
                  <private id="EarthquakePrivate.DwellingRate" caption="" type="float">
                    <value>
                      <if>
                        <condition idref="DwellingPrivate.FormIsHO15" />
                        <then idref="EarthquakePrivate.OtherStructuresRate" />
                        <else>
                          <lookup>
                            <tableRef value="EarthquakeRates" />
                            <fieldRef value="Rate" />
                            <keyRef type="string" value="Dwelling" name="Coverage" />
                            <keyRef idref="DwellingInput.Construction" type="string" name="ConstructionType" />
                          </lookup>
                        </else>
                      </if>
                    </value>
                    <worksheet>
                      <caption value="Earthquake Dwelling Rate" />
                    </worksheet>
                  </private>
                  <private id="EarthquakePrivate.LossAssessmentPremium" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="EarthquakeInput.LossAssessmentLimit" type="float" />
                        <argument op="divide" type="int" value="1000" />
                        <argument op="multiply" round="1" roundType="round" idref="EarthquakePrivate.LossAssessmentRate" type="float" />
                      </calculation>
                    </value>
                  </private>
                  <private id="EarthquakePrivate.LossOfUsePremium" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="CoverageDLossOfUseInput.Limit" type="int" />
                        <argument op="subtract" idref="CoverageDLossOfUsePrivate.IncludedLimit" type="float" />
                        <argument op="divide" type="int" value="1000" />
                        <argument op="multiply" round="1" roundType="round" idref="EarthquakePrivate.LossOfUseRate" type="float" />
                      </calculation>
                    </value>
                  </private>
                  <private id="EarthquakePrivate.LossOfUseRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="EarthquakeRates" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="LossOfUse" name="Coverage" />
                        <keyRef idref="DwellingInput.Construction" type="string" name="ConstructionType" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Earthquake Loss of Use Rate" />
                    </worksheet>
                  </private>
                  <private id="EarthquakePrivate.OtherStructuresPremium" caption="" type="float">
                    <value>
                      <if>
                        <condition idref="DwellingPrivate.FormIsCondoOrTenant" />
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq">
                              <calculation>
                                <argument op="eq" idref="CoverageBOtherStructuresInput.Limit" type="int" />
                                <argument op="add" idref="OtherStructuresRentedToOthersInput.Limit" type="int" />
                              </calculation>
                            </argument>
                            <argument op="subtract" idref="CoverageBOtherStructuresPrivate.IncludedLimit" type="int" />
                            <argument op="divide" type="int" value="1000" />
                            <argument op="multiply" round="1" roundType="round" idref="EarthquakePrivate.OtherStructuresRate" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </private>
                  <private id="EarthquakePrivate.OtherStructuresRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="EarthquakeRates" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="OtherStructures" name="Coverage" />
                        <keyRef idref="DwellingInput.Construction" type="string" name="ConstructionType" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Earthquake Other Structures Rate" />
                    </worksheet>
                  </private>
                  <private id="EarthquakePrivate.PersonalPropertyPremium" caption="" type="float">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="or">
                            <comparison compare="or">
                              <operand idref="DwellingPrivate.FormIsCondoOrTenant" type="boolean" />
                              <comparison compare="le">
                                <operand idref="CoverageCPersonalPropertyHO3Input.Limit" type="int" />
                                <operand idref="CoverageCPersonalPropertyHO3Private.IncludedLimit" type="int" />
                              </comparison>
                            </comparison>
                            <operand idref="DwellingPrivate.FormIsHO15" type="boolean" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="CoverageCPersonalPropertyHO3Input.Limit" type="int" />
                            <argument op="subtract" idref="CoverageCPersonalPropertyHO3Private.IncludedLimit" type="int" />
                            <argument op="divide" type="int" value="1000" />
                            <argument op="multiply" round="1" roundType="round" idref="EarthquakePrivate.PersonalPropertyRate" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </private>
                  <private id="EarthquakePrivate.PersonalPropertyRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="EarthquakeRates" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="PersonalProperty" name="Coverage" />
                        <keyRef idref="DwellingInput.Construction" type="string" name="ConstructionType" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Earthquake Personal Property Rate" />
                    </worksheet>
                  </private>
                  <private id="EarthquakePrivate.LossAssessmentRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="EarthquakeRates" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="LossAssessment" name="Coverage" />
                        <keyRef idref="DwellingInput.Construction" type="string" name="ConstructionType" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Earthquake Loss Assessment Rate" />
                    </worksheet>
                  </private>
                </object>
              </object>
              <object id="IdentityFraudExpenseCoverage" path="coverage[Type=&quot;IdentityFraudExpense&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="IdentityFraudExpenseCoverageInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="IdentityFraudExpenseCoverageInput.Indicator" type="boolean" comment="" path="Indicator">
                    <rules>
                      <default idref="False" />
                    </rules>
                    <definition>
                      <caption value="Identity Fraud Expense" />
                      <maxLength value="1" />
                    </definition>
                  </public>
                  <public id="IdentityFraudExpenseCoverageInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Identity Fraud Expense Limit" />
                      <options>
                        <option value="15000" caption="$15,000" default="1" />
                      </options>
                      <maxLength value="5" />
                    </definition>
                    <rules>
                      <default value="15000" />
                    </rules>
                  </public>
                </object>
                <object id="IdentityFraudExpenseCoverageOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="IdentityFraudExpenseCoverageOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Identity Fraud Expense Coverage" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="IdentityFraudExpenseCoverageInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="IdentityFraudExpenseCoveragePrivate.BaseRate" type="int" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="IdentityFraudExpenseCoverageOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Identity Fraud Expense Coverage Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="IdentityFraudExpenseCoverageOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="IdentityFraudExpenseCoverageOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Identity Fraud Expense Coverage Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                </object>
                <object id="IdentityFraudExpenseCoveragePrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="IdentityFraudExpenseCoveragePrivate.BaseRate" caption="" type="int">
                    <value>
                      <lookup>
                        <tableRef value="CoverageInformation" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="Identity Fraud" name="Coverage" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Identity Fraud Expense Base Rate" />
                    </worksheet>
                  </private>
                  <private id="IdentityFraudExpenseCoveragePrivate.IsNotAvailable" caption="" type="boolean">
                    <value>
                      <comparison compare="eq">
                        <operand idref="DwellingPrivate.FormIsHO8" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </value>
                  </private>
                  <private id="IdentityFraudExpenseCoveragePrivate.IsNotSelected" caption="" type="boolean">
                    <value>
                      <comparison compare="eq">
                        <operand idref="IdentityFraudExpenseCoverageInput.Indicator" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </value>
                  </private>
                </object>
              </object>
              <object id="InflationGuard" path="coverage[Type=&quot;InflationGuard&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="InflationGuardInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="InflationGuardInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Inflation Guard" />
                      <options>
                        <option value="0" caption="None" default="1" />
                        <option value="4" caption="4%" />
                        <option value="6" caption="6%" />
                        <option value="8" caption="8%" />
                        <option value="12" caption="12%" />
                        <option value="16" caption="16%" />
                        <option value="20" caption="20%" />
                      </options>
                      <maxLength value="2" />
                      <readOnly idref="DwellingPrivate.FormIsCondoOrTenant" />
                    </definition>
                    <rules>
                      <default value="0" />
                      <misc>
                        <if>
                          <condition idref="DwellingPrivate.FormIsCondoOrTenant" />
                          <then value="0" />
                        </if>
                      </misc>
                    </rules>
                  </public>
                  <public id="InflationGuardInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Inflation Guard (HO0446)" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="gt">
                          <operand idref="InflationGuardInput.Limit" type="int" />
                          <operand type="int" value="0" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                </object>
                <object id="InflationGuardOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="InflationGuardOutput.Amount" path="Amount" type="float">
                    <definition>
                      <caption value="Inflation Guard" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="InflationGuardInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" type="float" />
                              <argument op="multiply">
                                <calculation>
                                  <argument op="eq" idref="InflationGuardPrivate.Factor" type="float" />
                                  <argument op="subtract" type="int" value="1" />
                                </calculation>
                              </argument>
                              <argument op="multiply" round="1" roundType="round" type="int" value="1" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                      <affects>
                        <reference idref="InflationGuardPrivate.SetAdjustedBasePremium" effect="postEffect" />
                      </affects>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="InflationGuardOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Inflation Guard Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="InflationGuardOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="InflationGuardOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Inflation Guard Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                  <public id="InflationGuardOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Inflation Guard Output Premium" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="or">
                              <comparison compare="eq">
                                <operand idref="InflationGuardInput.Indicator" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                              <operand idref="InflationGuardPrivate.IsIncludedInBase" type="boolean" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="InflationGuardOutput.Amount" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                </object>
                <object id="InflationGuardPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="InflationGuardPrivate.Factor" caption="" type="float" override="1">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="InflationGuardInput.Indicator" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <lookup>
                            <tableRef value="InflationGuardFactors" />
                            <fieldRef value="Factor" />
                            <keyRef idref="InflationGuardInput.Limit" type="int" name="Inflation Guard" />
                          </lookup>
                        </else>
                      </if>
                    </value>
                    <worksheet>
                      <caption value="Inflation Guard Factor" />
                    </worksheet>
                  </private>
                  <private id="InflationGuardPrivate.SetAdjustedBasePremium" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" type="float" />
                        <argument op="add" idref="InflationGuardOutput.Amount" type="float" />
                      </calculation>
                    </value>
                    <affects>
                      <reference idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" effect="setValue" />
                    </affects>
                  </private>
                  <private id="InflationGuardPrivate.IsIncludedInBase" caption="" type="boolean">
                    <value idref="True" />
                  </private>
                </object>
              </object>
              <object id="LossAssessment" path="coverage[Type=&quot;LossAssessment&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LossAssessmentInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LossAssessmentInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Loss Assessment Limit" />
                      <options>
                        <option value="1000" caption="$1,000" />
                        <option value="5000" caption="$5,000" />
                        <option value="10000" caption="$10,000" />
                        <option value="15000" caption="$15,000" />
                        <option value="20000" caption="$20,000" />
                        <option value="25000" caption="$25,000" />
                        <option value="30000" caption="$30,000" />
                        <option value="35000" caption="$35,000" />
                        <option value="40000" caption="$40,000" />
                        <option value="45000" caption="$45,000" />
                        <option value="50000" caption="$50,000" />
                      </options>
                      <maxLength value="5" />
                    </definition>
                    <rules>
                      <default value="1000" />
                    </rules>
                  </public>
                  <public id="LossAssessmentInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Loss Assessment Coverage (HO0435)" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <value idref="True" />
                    </rules>
                  </public>
                </object>
                <object id="LossAssessmentOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LossAssessmentOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Loss Assessment" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="LossAssessmentInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="LossAssessmentPrivate.BaseRate" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="LossAssessmentOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Loss Assessment Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="LossAssessmentOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="LossAssessmentOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Loss Assessment Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                </object>
                <object id="LossAssessmentPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="LossAssessmentPrivate.BaseRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="LossAssessmentRates" />
                        <fieldRef value="Rate" />
                        <keyRef idref="LossAssessmentInput.Limit" type="int" name="Limit" />
                        <keyRef idref="DwellingInput.Form" type="string" name="Form" />
                        <keyRef idref="AdditionsAlterationsInput.Type" type="string" name="Additions Alterations Type" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Loss Assessment Base Rate" />
                    </worksheet>
                  </private>
                </object>
              </object>
              <object id="OtherStructuresRentedToOthers" path="coverage[Type=&quot;OtherStructuresRentedToOthers&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="OtherStructuresRentedToOthersInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="OtherStructuresRentedToOthersInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Other Structures Rented To Others Indicator" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="and">
                          <operand idref="DwellingPrivate.FormIsDwelling" type="boolean" />
                          <comparison compare="gt">
                            <operand idref="CoverageADwellingInput.Limit" type="int" />
                            <operand type="int" value="0" />
                          </comparison>
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="OtherStructuresRentedToOthersInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Other Structures Rented to Others Limit" />
                      <maxLength idref="MaxLength.iValue" />
                      <formatMask idref="FormatMask.Limit" />
                      <readOnly idref="DwellingPrivate.FormIsCondoOrTenant" />
                    </definition>
                    <rules>
                      <misc>
                        <if>
                          <condition idref="DwellingPrivate.FormIsCondoOrTenant" />
                          <then value="0" />
                        </if>
                      </misc>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="lt">
                              <operand idref="OtherStructuresRentedToOthersInput.Limit" type="int" />
                              <operand idref="OtherStructuresRentedToOthersPrivate.IncludedLimit" type="float" />
                            </comparison>
                          </condition>
                          <then idref="OtherStructuresRentedToOthersPrivate.IncludedLimit" />
                        </if>
                      </value>
                      <maximum>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="DwellingPrivate.FormIsCondoOrTenant" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then idref="CoverageADwellingInput.Limit" />
                          <else idref="CoverageCPersonalPropertyHO46Input.Limit" />
                        </if>
                      </maximum>
                    </rules>
                  </public>
                </object>
                <object id="OtherStructuresRentedToOthersOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="OtherStructuresRentedToOthersOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Other Structures Rented to Others" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="OtherStructuresRentedToOthersInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="OtherStructuresRentedToOthersInput.Limit" type="int" />
                              <argument op="subtract" idref="OtherStructuresRentedToOthersPrivate.IncludedLimit" type="float" />
                              <argument op="divide" type="int" value="1000" />
                              <argument op="multiply" round="1" roundType="round" idref="OtherStructuresRentedToOthersPrivate.BaseRate" type="int" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="OtherStructuresRentedToOthersOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Other Structures Rented To Others Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="OtherStructuresRentedToOthersOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="OtherStructuresRentedToOthersOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Other Structures Rented To Others Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                </object>
                <object id="OtherStructuresRentedToOthersPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="OtherStructuresRentedToOthersPrivate.BaseRate" caption="" type="int">
                    <value>
                      <lookup>
                        <tableRef value="CoverageInformation" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="Other Structures Rented to Others" name="Coverage" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Other Structures Rented to Others Base Rate" />
                    </worksheet>
                  </private>
                  <private id="OtherStructuresRentedToOthersPrivate.IncludedLimit" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="CoverageADwellingInput.Limit" type="int" />
                        <argument op="multiply" round="1" roundType="round" idref="CoverageBOtherStructuresPrivate.IncludedLimitFactor" type="float" />
                      </calculation>
                    </value>
                    <worksheet>
                      <caption value="Other Structures Rented to Others Included Limit" />
                    </worksheet>
                  </private>
                  <private id="OtherStructuresRentedToOthersPrivate.IncludedLimitFactor" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="CoverageInformation" />
                        <fieldRef value="IncludedFactor" />
                        <keyRef type="string" value="Other Structures" name="Coverage" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Other Structures Rented to Others Included Limit Factor" />
                    </worksheet>
                  </private>
                </object>
              </object>
              <object id="PermittedIncidentalOccupancyOtherStructures" path="coverage[Type=&quot;PermittedIncidentalOccupancyOtherStructures&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="PermittedIncidentalOccupancyOtherStructuresInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="PermittedIncidentalOccupancyOtherStructuresInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Permitted Incidental Occupancy Other Structures Limit" />
                      <maxLength idref="MaxLength.iValue" />
                      <formatMask idref="FormatMask.Limit" />
                    </definition>
                    <rules>
                      <default value="0" />
                      <maximum>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="DwellingPrivate.FormIsCondoOrTenant" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then idref="CoverageADwellingInput.Limit" />
                          <else idref="CoverageCPersonalPropertyHO46Input.Limit" />
                        </if>
                      </maximum>
                    </rules>
                    <worksheet />
                  </public>
                  <public id="PermittedIncidentalOccupancyOtherStructuresInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Permitted Incidental Occupancies - Residence Premises (HO0442)" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="gt">
                          <operand idref="PermittedIncidentalOccupancyOtherStructuresInput.Limit" type="int" />
                          <operand type="int" value="0" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                </object>
                <object id="PermittedIncidentalOccupancyOtherStructuresOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="PermittedIncidentalOccupancyOtherStructuresOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Permitted Incidental Occupancy Other Structures" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="PermittedIncidentalOccupancyOtherStructuresInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="PermittedIncidentalOccupancyOtherStructuresInput.Limit" type="int" />
                              <argument op="divide" type="int" value="1000" />
                              <argument op="multiply" round="1" roundType="round" idref="PermittedIncidentalOccupancyOtherStructuresPrivate.BaseRate" type="int" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="PermittedIncidentalOccupancyOtherStructuresOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Permitted Incidental Occupancy Other Structures Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="PermittedIncidentalOccupancyOtherStructuresOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="PermittedIncidentalOccupancyOtherStructuresOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Permitted Incidental Occupancy Other Structures Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                </object>
                <object id="PermittedIncidentalOccupancyOtherStructuresPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="PermittedIncidentalOccupancyOtherStructuresPrivate.BaseRate" caption="" type="int">
                    <value>
                      <lookup>
                        <tableRef value="CoverageInformation" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="Permitted Incidental Occupancy Other Structures" name="Coverage" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Permitted Incidental Occupancy Other Structures Base Rate" />
                    </worksheet>
                  </private>
                </object>
              </object>
              <object id="PersonalPropertyOtherResidence" path="coverage[Type=&quot;PersonalPropertyOtherResidence&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="PersonalPropertyOtherResidenceInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="PersonalPropertyOtherResidenceInput.Indicator" type="boolean" path="Indicator">
                    <definition>
                      <caption value="Increased Limits on Personal Property in Other Residence (HO0450)" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <value idref="True" />
                    </rules>
                  </public>
                  <public id="PersonalPropertyOtherResidenceInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Personal Property Other Residence Limit" />
                      <maxLength idref="MaxLength.iValue" />
                      <formatMask idref="FormatMask.Limit" />
                    </definition>
                    <rules>
                      <default idref="PersonalPropertyOtherResidencePrivate.IncludedLimit" />
                      <misc>
                        <if>
                          <condition>
                            <comparison compare="lt">
                              <operand idref="PersonalPropertyOtherResidenceInput.Limit" type="int" />
                              <operand idref="PersonalPropertyOtherResidencePrivate.IncludedLimit" type="float" />
                            </comparison>
                          </condition>
                          <then idref="PersonalPropertyOtherResidencePrivate.IncludedLimit" type="float" />
                        </if>
                      </misc>
                      <minimum idref="PersonalPropertyOtherResidencePrivate.IncludedLimit" />
                    </rules>
                    <worksheet />
                  </public>
                </object>
                <object id="PersonalPropertyOtherResidenceOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="PersonalPropertyOtherResidenceOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Personal Property Other Residence" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="PersonalPropertyOtherResidenceInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq">
                                <calculation>
                                  <argument op="eq">
                                    <calculation>
                                      <argument op="eq" idref="PersonalPropertyOtherResidenceInput.Limit" type="int" />
                                      <argument op="subtract" idref="PersonalPropertyOtherResidencePrivate.IncludedLimit" type="float" />
                                    </calculation>
                                  </argument>
                                  <argument op="divide" type="int" value="1000" />
                                </calculation>
                              </argument>
                              <argument op="multiply" round="1" roundType="round" idref="PersonalPropertyOtherResidencePrivate.BaseRate" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="PersonalPropertyOtherResidenceOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Personal Property Other Residence Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="PersonalPropertyOtherResidenceOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="PersonalPropertyOtherResidenceOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Personal Property Other Residence Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                </object>
                <object id="PersonalPropertyOtherResidencePrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="PersonalPropertyOtherResidencePrivate.BaseRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="CoverageInformation" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="Personal Property Other Residence" name="Coverage" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Personal Property Other Residence Base Rate" />
                    </worksheet>
                  </private>
                  <private id="PersonalPropertyOtherResidencePrivate.IncludedLimit" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="PersonalPropertyOtherResidencePrivate.CoverageCLimit" type="int" />
                        <argument op="multiply" round="1" roundType="round" idref="PersonalPropertyOtherResidencePrivate.IncludedLimitFactor" type="float" />
                        <argument op="min" idref="PersonalPropertyOtherResidencePrivate.MinimumLimit" type="float" />
                      </calculation>
                    </value>
                    <worksheet>
                      <caption value="Personal Property Other Residence Included Limit" />
                    </worksheet>
                  </private>
                  <private id="PersonalPropertyOtherResidencePrivate.IncludedLimitFactor" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="CoverageInformation" />
                        <fieldRef value="IncludedFactor" />
                        <keyRef type="string" value="Personal Property Other Residence" name="Coverage" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Personal Property Other Residence Included Limit Factor" />
                    </worksheet>
                  </private>
                  <private id="PersonalPropertyOtherResidencePrivate.MinimumLimit" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="CoverageInformation" />
                        <fieldRef value="MinimumLimit" />
                        <keyRef type="string" value="Personal Property Other Residence" name="Coverage" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Personal Property Other Residence Minimum Limit" />
                    </worksheet>
                  </private>
                  <private id="PersonalPropertyOtherResidencePrivate.CoverageCLimit" caption="" type="int">
                    <value>
                      <if>
                        <condition idref="DwellingPrivate.FormIsDwelling" />
                        <then idref="CoverageCPersonalPropertyHO3Input.Limit" />
                        <else idref="CoverageCPersonalPropertyHO46Input.Limit" />
                      </if>
                    </value>
                  </private>
                </object>
              </object>
              <object id="RefrigeratedPersonalProperty" path="coverage[Type=&quot;RefrigeratedPersonalProperty&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="RefrigeratedPersonalPropertyInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="RefrigeratedPersonalPropertyInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Refrigerated Property Coverage" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <default idref="False" />
                    </rules>
                  </public>
                  <public id="RefrigeratedPersonalPropertyInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Refrigerated Personal Property Limit" />
                      <maxLength value="5" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.Limit" />
                    </definition>
                    <rules>
                      <misc>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="RefrigeratedPersonalPropertyInput.Indicator" type="boolean" />
                              <operand idref="True" type="int" />
                            </comparison>
                          </condition>
                          <then value="1000" />
                          <else value="0" />
                        </if>
                      </misc>
                    </rules>
                  </public>
                </object>
                <object id="RefrigeratedPersonalPropertyOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="RefrigeratedPersonalPropertyOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Refrigerated Personal Property" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="RefrigeratedPersonalPropertyInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="RefrigeratedPersonalPropertyPrivate.BaseRate" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="RefrigeratedPersonalPropertyOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Refrigerated Personal Property Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="RefrigeratedPersonalPropertyOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="RefrigeratedPersonalPropertyOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Refrigerated Personal Property Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                </object>
                <object id="RefrigeratedPersonalPropertyPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="RefrigeratedPersonalPropertyPrivate.BaseRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="CoverageInformation" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="Refrigerated Personal Property" name="Coverage" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Refrigerated Personal Property Base Rate" />
                    </worksheet>
                  </private>
                </object>
              </object>
              <object id="ReplacementCostContents" path="coverage[Type=&quot;ReplacementCostContents&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="ReplacementCostContentsInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="ReplacementCostContentsInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Replacement Cost - Contents" />
                      <readOnly>
                        <comparison compare="eq">
                          <operand idref="DwellingInput.Form" type="string" />
                          <operand type="string" value="HO15" />
                        </comparison>
                      </readOnly>
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <default idref="False" />
                      <misc>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="DwellingInput.Form" type="string" />
                              <operand type="string" value="HO15" />
                            </comparison>
                          </condition>
                          <then idref="True" message="ReplacementCostContentsInfo.SelectedMsg1" />
                        </if>
                      </misc>
                    </rules>
                  </public>
                </object>
                <object id="ReplacementCostContentsOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="ReplacementCostContentsOutput.Amount" path="Amount" type="float">
                    <definition>
                      <caption value="Replacement Cost Contents" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="or">
                              <comparison compare="eq">
                                <operand idref="ReplacementCostContentsInput.Indicator" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                              <comparison compare="eq">
                                <operand idref="DwellingInput.Form" type="string" />
                                <operand type="string" value="HO15" />
                              </comparison>
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" type="float" />
                              <argument op="multiply">
                                <calculation>
                                  <argument op="eq" idref="ReplacementCostContentsPrivate.Factor" type="float" />
                                  <argument op="subtract" type="int" value="1" />
                                </calculation>
                              </argument>
                              <argument op="multiply" round="1" roundType="round" type="int" value="1" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                      <affects>
                        <reference idref="ReplacementCostContentsPrivate.SetAdjustedBaseRate" effect="postEffect" />
                      </affects>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="ReplacementCostContentsOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Replacement Cost Contents Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="ReplacementCostContentsOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="ReplacementCostContentsOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Replacement Cost Contents Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                  <public id="ReplacementCostContentsOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Replacement Cost Contents Output Premium" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="ReplacementCostContentsInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="ReplacementCostContentsOutput.Amount" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                </object>
                <object id="ReplacementCostContentsPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="ReplacementCostContentsPrivate.Factor" caption="" type="float" override="1">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="ReplacementCostContentsInput.Indicator" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <lookup>
                            <tableRef value="ReplacementCostFactors" />
                            <fieldRef value="Factor" />
                            <keyRef idref="DwellingInput.Form" type="string" name="Form" />
                          </lookup>
                        </else>
                      </if>
                    </value>
                    <worksheet>
                      <caption value="Replacement Cost Contents Factor" />
                    </worksheet>
                  </private>
                  <private id="ReplacementCostContentsPrivate.IsAvailable" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="DwellingPrivate.FormIsHO8" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                        <operand idref="DwellingPrivate.FormIsDwelling" type="boolean" />
                      </comparison>
                    </value>
                  </private>
                  <private id="ReplacementCostContentsPrivate.SetAdjustedBaseRate" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" type="float" />
                        <argument op="add" idref="ReplacementCostContentsOutput.Amount" type="float" />
                      </calculation>
                    </value>
                    <affects>
                      <reference idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" effect="setValue" />
                    </affects>
                  </private>
                </object>
              </object>
              <object id="ReplacementCostDwelling" path="coverage[Type=&quot;ReplacementCostDwelling&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="ReplacementCostDwellingInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="ReplacementCostDwellingInput.Indicator" type="boolean" comment="" path="Indicator">
                    <rules>
                      <default value="0" />
                      <misc>
                        <if>
                          <condition>
                            <comparison compare="and">
                              <comparison compare="eq">
                                <operand idref="DwellingPrivate.FormIsHO2" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                              <comparison compare="eq">
                                <operand idref="DwellingPrivate.FormIsHO3" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                            </comparison>
                          </condition>
                          <then idref="False" />
                        </if>
                      </misc>
                    </rules>
                    <definition>
                      <caption value="Replacement Cost - Dwelling" />
                      <maxLength value="1" />
                    </definition>
                  </public>
                  <public id="ReplacementCostDwellingInput.ReplacementCostValue" type="int" comment="" path="exposure[Type=&quot;ReplacementCostValue&quot;]/iValue" override="1">
                    <definition>
                      <caption value="Replacement Cost of Dwelling" />
                      <formatMask idref="FormatMask.PremiumInput" />
                      <required>
                        <comparison compare="eq">
                          <operand idref="ReplacementCostDwellingInput.Indicator" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </required>
                    </definition>
                    <rules>
                      <misc>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="ReplacementCostDwellingInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                        </if>
                      </misc>
                    </rules>
                  </public>
                </object>
                <object id="ReplacementCostDwellingOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="ReplacementCostDwellingOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Replacement Cost Dwelling" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="ReplacementCostDwellingInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="ReplacementCostDwellingPrivate.BaseRate" type="int" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="ReplacementCostDwellingOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Replacement Cost Dwelling Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="ReplacementCostDwellingOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="ReplacementCostDwellingOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Replacement Cost Dwelling Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                </object>
                <object id="ReplacementCostDwellingPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="ReplacementCostDwellingPrivate.BaseRate" caption="" type="int">
                    <value>
                      <lookup>
                        <tableRef value="CoverageInformation" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="Replacement Cost Dwelling" name="Coverage" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Replacement Cost Dwelling Rate" />
                    </worksheet>
                  </private>
                  <private id="ReplacementCostDwellingPrivate.IsAvailable" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <comparison compare="le">
                          <operand idref="DwellingInput.NumberOfFamilies" type="int" />
                          <operand type="int" value="2" />
                        </comparison>
                        <comparison compare="or">
                          <operand idref="DwellingPrivate.FormIsHO2" type="boolean" />
                          <operand idref="DwellingPrivate.FormIsHO3" type="boolean" />
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="ReplacementCostDwellingPrivate.IsNotAvailable" caption="" type="boolean">
                    <value>
                      <comparison compare="eq">
                        <operand idref="ReplacementCostDwellingPrivate.IsAvailable" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </value>
                  </private>
                  <private id="ReplacementCostDwellingPrivate.HideReplacementCostValue" caption="" type="boolean">
                    <value>
                      <comparison compare="eq">
                        <operand idref="ReplacementCostDwellingInput.Indicator" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </value>
                  </private>
                  <private id="ReplacementCostDwellingPrivate.RenewalAdjustCoverage" caption="" type="float" path="RenewalAdjustCoverage">
                    <value>
                      <calculation>
                        <argument op="eq" idref="ReplacementCostDwellingInput.ReplacementCostValue" type="int" />
                        <argument op="multiply">
                          <calculation>
                            <argument op="eq" type="int" value="1" />
                            <argument op="add">
                              <calculation>
                                <argument op="eq" idref="InflationGuardInput.Limit" type="int" />
                                <argument op="divide" type="int" value="100" />
                              </calculation>
                            </argument>
                          </calculation>
                        </argument>
                      </calculation>
                    </value>
                    <affects>
                      <reference idref="ReplacementCostDwellingInput.ReplacementCostValue" effect="setValue" />
                    </affects>
                  </private>
                </object>
              </object>
              <object id="SpecialComputerCoverage" path="coverage[Type=&quot;SpecialComputer&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="SpecialComputerCoverageInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="SpecialComputerCoverageInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Special Computer Coverage" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <default idref="False" />
                      <misc>
                        <if>
                          <condition idref="DwellingPrivate.FormIsHO15" />
                          <then idref="False" />
                        </if>
                      </misc>
                    </rules>
                  </public>
                  <public id="SpecialComputerCoverageInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Special Computer Coverage Limit" />
                      <readOnly idref="True" />
                      <maxLength value="5" />
                    </definition>
                    <rules>
                      <default value="3000" />
                    </rules>
                  </public>
                </object>
                <object id="SpecialComputerCoverageOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="SpecialComputerCoverageOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Special Computer Coverage" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="SpecialComputerCoverageInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="SpecialComputerCoveragePrivate.BaseRate" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="SpecialComputerCoverageOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Special Computer Coverage Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="SpecialComputerCoverageOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="SpecialComputerCoverageOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Special Computer Coverage Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                </object>
                <object id="SpecialComputerCoveragePrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="SpecialComputerCoveragePrivate.BaseRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="CoverageInformation" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="Special Computer Coverage" name="Coverage" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Special Computer Coverage Base Rate" />
                    </worksheet>
                  </private>
                </object>
              </object>
              <object id="UnitsRegularlyRentedToOthers" path="coverage[Type=&quot;UnitsRegularlyRentedToOthers&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="UnitsRegularlyRentedToOthersInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="UnitsRegularlyRentedToOthersInput.Indicator" type="boolean" comment="" path="Indicator">
                    <rules>
                      <default idref="False" />
                      <misc>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="DwellingPrivate.FormIsHO6" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then idref="False" type="int" />
                        </if>
                      </misc>
                    </rules>
                    <definition>
                      <caption value="Unit-Owners Rental to Others" />
                      <maxLength value="1" />
                      <readOnly>
                        <comparison compare="eq">
                          <operand idref="DwellingPrivate.FormIsHO6" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </readOnly>
                    </definition>
                  </public>
                </object>
                <object id="UnitsRegularlyRentedToOthersOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="UnitsRegularlyRentedToOthersOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Units Regularly Rented to Others" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="UnitsRegularlyRentedToOthersInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" type="float" />
                              <argument op="multiply" round="1" roundType="round" idref="UnitsRegularlyRentedToOthersPrivate.Factor" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                      <affects>
                        <reference idref="UnitsRegularlyRentedToOthersPrivate.SetAdjustedBasePremium" effect="postEffect" />
                      </affects>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="UnitsRegularlyRentedToOthersOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Units Regularly Rented To Others Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="UnitsRegularlyRentedToOthersOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="UnitsRegularlyRentedToOthersOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Units Regularly Rented To Others Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                </object>
                <object id="UnitsRegularlyRentedToOthersPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="UnitsRegularlyRentedToOthersPrivate.Factor" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="CoverageInformation" />
                        <fieldRef value="Factor" />
                        <keyRef type="string" value="Units Regularly Rented to Others" name="Coverage" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Units Regularly Rented to Others Factor" />
                    </worksheet>
                  </private>
                  <private id="UnitsRegularlyRentedToOthersPrivate.SetAdjustedBasePremium" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" type="float" />
                        <argument op="add" idref="UnitsRegularlyRentedToOthersOutput.Premium" type="float" />
                      </calculation>
                    </value>
                    <affects>
                      <reference idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" effect="setValue" />
                    </affects>
                  </private>
                </object>
              </object>
              <object id="UnscheduledElectronicApparatus" path="coverage[Type=&quot;UnschdElectronicApparatus&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="UnscheduledElectronicApparatusInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="UnscheduledElectronicApparatusInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Unscheduled Electronic Apparatus" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <value idref="True" />
                    </rules>
                  </public>
                  <public id="UnscheduledElectronicApparatusInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Unscheduled Electronic Apparatus Limit" />
                      <maxLength value="5" />
                      <formatMask idref="FormatMask.Limit" />
                    </definition>
                    <rules>
                      <default idref="UnscheduledElectronicApparatusPrivate.MinimumLimit" />
                      <minimum idref="UnscheduledElectronicApparatusPrivate.MinimumLimit" />
                      <maximum idref="UnscheduledElectronicApparatusPrivate.MaximumLimit" />
                      <misc>
                        <if>
                          <condition>
                            <comparison compare="ne">
                              <operand idref="UnscheduledElectronicApparatusInput.Limit" type="int" />
                              <operand idref="UnscheduledElectronicApparatusPrivate.Increment" type="float" />
                            </comparison>
                          </condition>
                          <then idref="UnscheduledElectronicApparatusPrivate.Increment" type="float" />
                        </if>
                      </misc>
                    </rules>
                    <worksheet />
                  </public>
                </object>
                <object id="UnscheduledElectronicApparatusOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="UnscheduledElectronicApparatusOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Unscheduled Electronic Apparatus" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="UnscheduledElectronicApparatusInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="UnscheduledElectronicApparatusInput.Limit" type="int" />
                              <argument op="subtract" idref="UnscheduledElectronicApparatusPrivate.MinimumLimit" type="float" />
                              <argument op="divide" idref="UnscheduledElectronicApparatusPrivate.PerAmount" type="float" />
                              <argument op="multiply" round="1" roundType="round" idref="UnscheduledElectronicApparatusPrivate.BaseRate" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="UnscheduledElectronicApparatusOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Unscheduled Electronic Apparatus Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="UnscheduledElectronicApparatusOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="UnscheduledElectronicApparatusOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Unscheduled Electronic Apparatus Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                </object>
                <object id="UnscheduledElectronicApparatusPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="UnscheduledElectronicApparatusPrivate.BaseRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="ElectronicApparatus" name="Type" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Unscheduled Electronic Apparatus Base Rate" />
                    </worksheet>
                  </private>
                  <private id="UnscheduledElectronicApparatusPrivate.Increment" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="UnscheduledElectronicApparatusInput.Limit" type="int" />
                        <argument op="divide" round="1" roundType="trunc" idref="UnscheduledElectronicApparatusPrivate.PerAmount" type="float" />
                        <argument op="multiply" idref="UnscheduledElectronicApparatusPrivate.PerAmount" type="float" />
                      </calculation>
                    </value>
                  </private>
                  <private id="UnscheduledElectronicApparatusPrivate.MaximumLimit" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Maximum" />
                        <keyRef type="string" value="ElectronicApparatus" name="Type" />
                      </lookup>
                    </value>
                  </private>
                  <private id="UnscheduledElectronicApparatusPrivate.MinimumLimit" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Minimum" />
                        <keyRef type="string" value="ElectronicApparatus" name="Type" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Unscheduled Electronic Apparatus Minimum Limit" />
                    </worksheet>
                  </private>
                  <private id="UnscheduledElectronicApparatusPrivate.PerAmount" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Per" />
                        <keyRef type="string" value="ElectronicApparatus" name="Type" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Unscheduled Electronic Apparatus Per Amount" />
                    </worksheet>
                  </private>
                </object>
              </object>
              <object id="UnscheduledGuns" path="coverage[Type=&quot;UnschdGuns&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="UnscheduledGunsInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="UnscheduledGunsInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Unscheduled Guns Limit" />
                      <maxLength value="5" />
                      <formatMask idref="FormatMask.Limit" />
                    </definition>
                    <rules>
                      <default idref="UnscheduledGunsPrivate.MinimumLimit" />
                      <minimum idref="UnscheduledGunsPrivate.MinimumLimit" />
                      <maximum idref="UnscheduledGunsPrivate.MaximumLimit" />
                      <misc>
                        <if>
                          <condition>
                            <comparison compare="ne">
                              <operand idref="UnscheduledGunsInput.Limit" type="int" />
                              <operand idref="UnscheduledGunsPrivate.Increment" type="float" />
                            </comparison>
                          </condition>
                          <then idref="UnscheduledGunsPrivate.Increment" type="float" />
                        </if>
                      </misc>
                    </rules>
                    <worksheet />
                  </public>
                  <public id="UnscheduledGunsInput.Indicator" type="boolean" comment="" path="Indicator">
                    <rules>
                      <value idref="True">
                        <comparison compare="gt">
                          <operand idref="UnscheduledGunsInput.Limit" type="int" />
                          <operand idref="UnscheduledGunsPrivate.MinimumLimit" type="float" />
                        </comparison>
                      </value>
                    </rules>
                    <definition>
                      <maxLength value="1" />
                      <caption value="Unscheduled Guns" />
                    </definition>
                  </public>
                </object>
                <object id="UnscheduledGunsOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="UnscheduledGunsOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Unscheduled Guns" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="UnscheduledGunsInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="UnscheduledGunsInput.Limit" type="int" />
                              <argument op="subtract" idref="UnscheduledGunsPrivate.MinimumLimit" type="float" />
                              <argument op="divide" idref="UnscheduledGunsPrivate.PerAmount" type="float" />
                              <argument op="multiply" round="1" roundType="round" idref="UnscheduledGunsPrivate.BaseRate" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="UnscheduledGunsOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Unscheduled Guns Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="UnscheduledGunsOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="UnscheduledGunsOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Unscheduled Guns Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                </object>
                <object id="UnscheduledGunsPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="UnscheduledGunsPrivate.MaximumLimit" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Maximum" />
                        <keyRef type="string" value="Guns" name="Type" />
                      </lookup>
                    </value>
                  </private>
                  <private id="UnscheduledGunsPrivate.MinimumLimit" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Minimum" />
                        <keyRef type="string" value="Guns" name="Type" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Unscheduled Guns Minimum Limit" />
                    </worksheet>
                  </private>
                  <private id="UnscheduledGunsPrivate.PerAmount" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Per" />
                        <keyRef type="string" value="Guns" name="Type" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Unscheduled Guns Per Amount" />
                    </worksheet>
                  </private>
                  <private id="UnscheduledGunsPrivate.BaseRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="Guns" name="Type" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Unscheduled Guns Base Rate" />
                    </worksheet>
                  </private>
                  <private id="UnscheduledGunsPrivate.Increment" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="UnscheduledGunsInput.Limit" type="int" />
                        <argument op="divide" round="1" roundType="trunc" idref="UnscheduledGunsPrivate.PerAmount" type="float" />
                        <argument op="multiply" idref="UnscheduledGunsPrivate.PerAmount" type="float" />
                      </calculation>
                    </value>
                  </private>
                </object>
              </object>
              <object id="UnscheduledJewelry" path="coverage[Type=&quot;UnschdJewelry&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="UnscheduledJewelryPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="UnscheduledJewelryPrivate.BaseRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="Jewelry" name="Type" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Unscheduled Jewelry Base Rate" />
                    </worksheet>
                  </private>
                  <private id="UnscheduledJewelryPrivate.MaximumLimit" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Maximum" />
                        <keyRef type="string" value="Jewelry" name="Type" />
                      </lookup>
                    </value>
                  </private>
                  <private id="UnscheduledJewelryPrivate.MinimumLimit" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Minimum" />
                        <keyRef type="string" value="Jewelry" name="Type" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Unscheduled Jewelry Minimum Limit" />
                    </worksheet>
                  </private>
                  <private id="UnscheduledJewelryPrivate.PerAmount" caption="" type="float" path="PerAmount">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Per" />
                        <keyRef type="string" value="Jewelry" name="Type" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Unscheduled Jewelry Per Amount" />
                    </worksheet>
                  </private>
                </object>
                <object id="UnscheduledJewelryInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="UnscheduledJewelryInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Unscheduled Jewelry Limit" />
                      <maxLength value="5" />
                      <formatMask idref="FormatMask.Limit" />
                    </definition>
                    <rules>
                      <default idref="UnscheduledJewelryPrivate.MinimumLimit" />
                      <minimum idref="UnscheduledJewelryPrivate.MinimumLimit" />
                      <maximum idref="UnscheduledJewelryPrivate.MaximumLimit" />
                    </rules>
                    <worksheet />
                  </public>
                  <public id="UnscheduledJewelryInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Indicator" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <value idref="True">
                        <comparison compare="gt">
                          <operand idref="UnscheduledJewelryInput.Limit" type="int" />
                          <operand idref="UnscheduledJewelryPrivate.MinimumLimit" type="float" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                </object>
                <object id="UnscheduledJewelryOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="UnscheduledJewelryOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Unscheduled Jewelry" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="UnscheduledJewelryInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq">
                                <calculation>
                                  <argument op="eq" idref="UnscheduledJewelryInput.Limit" type="int" />
                                  <argument op="subtract" idref="UnscheduledJewelryPrivate.MinimumLimit" type="float" />
                                </calculation>
                              </argument>
                              <argument op="divide" idref="UnscheduledJewelryPrivate.PerAmount" type="float" />
                              <argument op="multiply" round="1" roundType="round" idref="UnscheduledJewelryPrivate.BaseRate" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="UnscheduledJewelryOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Unscheduled Jewelry Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="UnscheduledJewelryOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="UnscheduledJewelryOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Unscheduled Jewelry Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                </object>
              </object>
              <object id="UnscheduledMoney" path="coverage[Type=&quot;UnschdMoney&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="UnscheduledMoneyPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="UnscheduledMoneyPrivate.BaseRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="Money" name="Type" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Unscheduled Money Base Rate" />
                    </worksheet>
                  </private>
                  <private id="UnscheduledMoneyPrivate.MaximumLimit" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Maximum" />
                        <keyRef type="string" value="Money" name="Type" />
                      </lookup>
                    </value>
                  </private>
                  <private id="UnscheduledMoneyPrivate.MinimumLimit" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Minimum" />
                        <keyRef type="string" value="Money" name="Type" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Unscheduled Money Minimim Limit" />
                    </worksheet>
                  </private>
                  <private id="UnscheduledMoneyPrivate.PerAmount" caption="" type="float" path="PerAmount2">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Per" />
                        <keyRef type="string" value="Money" name="Type" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Unscheduled Money Per Amount" />
                    </worksheet>
                  </private>
                </object>
                <object id="UnscheduledMoneyInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="UnscheduledMoneyInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Unscheduled Money Limit" />
                      <maxLength value="5" />
                      <formatMask idref="FormatMask.Limit" />
                    </definition>
                    <rules>
                      <default idref="UnscheduledMoneyPrivate.MinimumLimit" />
                      <minimum idref="UnscheduledMoneyPrivate.MinimumLimit" />
                      <maximum idref="UnscheduledMoneyPrivate.MaximumLimit" />
                    </rules>
                    <worksheet />
                  </public>
                  <public id="UnscheduledMoneyInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Indicator" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <value idref="True">
                        <comparison compare="gt">
                          <operand idref="UnscheduledMoneyInput.Limit" type="int" />
                          <operand idref="UnscheduledMoneyPrivate.MinimumLimit" type="float" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                </object>
                <object id="UnscheduledMoneyOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="UnscheduledMoneyOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Unscheduled Money" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="UnscheduledMoneyInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq">
                                <calculation>
                                  <argument op="eq" idref="UnscheduledMoneyInput.Limit" type="int" />
                                  <argument op="subtract" idref="UnscheduledMoneyPrivate.MinimumLimit" type="float" />
                                </calculation>
                              </argument>
                              <argument op="divide" idref="UnscheduledMoneyPrivate.PerAmount" type="float" />
                              <argument op="multiply" round="1" roundType="round" idref="UnscheduledMoneyPrivate.BaseRate" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="UnscheduledMoneyOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Unscheduled Money Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="UnscheduledMoneyOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="UnscheduledMoneyOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Unscheduled Money Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                </object>
              </object>
              <object id="UnscheduledSecurities" path="coverage[Type=&quot;UnschdSecurities&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="UnscheduledSecuritiesInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="UnscheduledSecuritiesInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Unscheduled Securities Limit" />
                      <maxLength value="5" />
                      <formatMask idref="FormatMask.Limit" />
                    </definition>
                    <rules>
                      <default idref="UnscheduledSecuritiesPrivate.MinimumLimit" />
                      <minimum idref="UnscheduledSecuritiesPrivate.MinimumLimit" />
                      <maximum idref="UnscheduledSecuritiesPrivate.MaximumLimit" />
                    </rules>
                    <worksheet />
                  </public>
                  <public id="UnscheduledSecuritiesInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Indicator" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <value idref="True">
                        <comparison compare="gt">
                          <operand idref="UnscheduledSecuritiesInput.Limit" type="int" />
                          <operand idref="UnscheduledSecuritiesPrivate.MinimumLimit" type="float" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                </object>
                <object id="UnscheduledSecuritiesOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="UnscheduledSecuritiesOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Unscheduled Securities" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="UnscheduledSecuritiesInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq">
                                <calculation>
                                  <argument op="eq" idref="UnscheduledSecuritiesInput.Limit" type="int" />
                                  <argument op="subtract" idref="UnscheduledSecuritiesPrivate.MinimumLimit" type="float" />
                                </calculation>
                              </argument>
                              <argument op="divide" idref="UnscheduledSecuritiesPrivate.PerAmount" type="float" />
                              <argument op="multiply" round="1" roundType="round" idref="UnscheduledSecuritiesPrivate.BaseRate" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="UnscheduledSecuritiesOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Unscheduled Securities Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="UnscheduledSecuritiesOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="UnscheduledSecuritiesOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Unscheduled Securities Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules />
                  </public>
                </object>
                <object id="UnscheduledSecuritiesPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="UnscheduledSecuritiesPrivate.BaseRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="Securities" name="Type" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Unscheduled Securities Base Rate" />
                    </worksheet>
                  </private>
                  <private id="UnscheduledSecuritiesPrivate.MaximumLimit" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Maximum" />
                        <keyRef type="string" value="Securities" name="Type" />
                      </lookup>
                    </value>
                  </private>
                  <private id="UnscheduledSecuritiesPrivate.MinimumLimit" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Minimum" />
                        <keyRef type="string" value="Securities" name="Type" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Unscheduled Securities Minimum Limit" />
                    </worksheet>
                  </private>
                  <private id="UnscheduledSecuritiesPrivate.PerAmount" caption="" type="float" path="PerAmount2">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Per" />
                        <keyRef type="string" value="Securities" name="Type" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Unscheduled Securities Per Amount" />
                    </worksheet>
                  </private>
                </object>
              </object>
              <object id="UnscheduledSilverware" path="coverage[Type=&quot;UnschdSilverware&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="UnscheduledSilverwareInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="UnscheduledSilverwareInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Unscheduled Silverware Limit" />
                      <maxLength value="5" />
                      <formatMask idref="FormatMask.Limit" />
                    </definition>
                    <rules>
                      <default idref="UnscheduledSilverwarePrivate.MinimumLimit" />
                      <minimum idref="UnscheduledSilverwarePrivate.MinimumLimit" />
                      <maximum idref="UnscheduledSilverwarePrivate.MaximumLimit" />
                      <misc>
                        <if>
                          <condition>
                            <comparison compare="ne">
                              <operand idref="UnscheduledSilverwareInput.Limit" type="int" />
                              <operand idref="UnscheduledSilverwarePrivate.Increment" type="float" />
                            </comparison>
                          </condition>
                          <then idref="UnscheduledSilverwarePrivate.Increment" type="float" />
                        </if>
                      </misc>
                    </rules>
                    <worksheet />
                  </public>
                  <public id="UnscheduledSilverwareInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Indicator" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <value idref="True">
                        <comparison compare="gt">
                          <operand idref="UnscheduledSilverwareInput.Limit" type="int" />
                          <operand idref="UnscheduledSilverwarePrivate.MinimumLimit" type="float" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                </object>
                <object id="UnscheduledSilverwareOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="UnscheduledSilverwareOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Unscheduled Silverware" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="UnscheduledSilverwareInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="UnscheduledSilverwareInput.Limit" type="int" />
                              <argument op="subtract" idref="UnscheduledSilverwarePrivate.MinimumLimit" type="float" />
                              <argument op="divide" idref="UnscheduledSilverwarePrivate.PerAmount" type="float" />
                              <argument op="multiply" round="1" roundType="round" idref="UnscheduledSilverwarePrivate.BaseRate" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="UnscheduledSilverwareOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Unscheduled Silverware Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="UnscheduledSilverwareOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="UnscheduledSilverwareOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Unscheduled Silverware Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules />
                  </public>
                </object>
                <object id="UnscheduledSilverwarePrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="UnscheduledSilverwarePrivate.BaseRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="Silverware" name="Type" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Unscheduled Silverware Base Rate" />
                    </worksheet>
                  </private>
                  <private id="UnscheduledSilverwarePrivate.MaximumLimit" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Maximum" />
                        <keyRef type="string" value="Silverware" name="Type" />
                      </lookup>
                    </value>
                  </private>
                  <private id="UnscheduledSilverwarePrivate.MinimumLimit" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Minimum" />
                        <keyRef type="string" value="Silverware" name="Type" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Unscheduled Silverware Minimum Limit" />
                    </worksheet>
                  </private>
                  <private id="UnscheduledSilverwarePrivate.PerAmount" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="UnscheduledPersonalPropertyInformation" />
                        <fieldRef value="Per" />
                        <keyRef type="string" value="Silverware" name="Type" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Unscheduled Silverware Per Amount" />
                    </worksheet>
                  </private>
                  <private id="UnscheduledSilverwarePrivate.Increment" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="UnscheduledSilverwareInput.Limit" type="int" />
                        <argument op="divide" round="1" roundType="trunc" idref="UnscheduledSilverwarePrivate.PerAmount" type="float" />
                        <argument op="multiply" idref="UnscheduledSilverwarePrivate.PerAmount" type="float" />
                      </calculation>
                    </value>
                  </private>
                </object>
              </object>
              <object id="WaterBackupAndSumpOverflow" path="coverage[Type=&quot;WaterBackupAndSumpOverflow&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="WaterBackupAndSumpOverflowInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="WaterBackupAndSumpOverflowInput.Indicator" type="boolean" comment="" path="Indicator">
                    <rules>
                      <default idref="False" />
                    </rules>
                    <definition>
                      <caption value="Water Back Up and Sump Overflow" />
                      <maxLength value="1" />
                    </definition>
                  </public>
                  <public id="WaterBackupAndSumpOverflowInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Water Backup and Sump Overflow Limit" />
                      <maxLength value="6" />
                      <readOnly idref="True" />
                    </definition>
                    <rules>
                      <default value="10000" />
                    </rules>
                  </public>
                </object>
                <object id="WaterBackupAndSumpOverflowOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="WaterBackupAndSumpOverflowOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Water Backup and Sump Overflow" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="WaterBackupAndSumpOverflowInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="WaterBackupAndSumpOverflowPrivate.BaseRate" type="int" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="WaterBackupAndSumpOverflowOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Water Backup And Sump Overflow Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="WaterBackupAndSumpOverflowOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="WaterBackupAndSumpOverflowOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Water Backup And Sump Overflow Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules />
                  </public>
                </object>
                <object id="WaterBackupAndSumpOverflowPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="WaterBackupAndSumpOverflowPrivate.BaseRate" caption="" type="int">
                    <value>
                      <lookup>
                        <tableRef value="WaterBackupRate" />
                        <fieldRef value="Rate" />
                        <keyRef idref="ReplacementCostContentsInput.Indicator" type="boolean" name="Replacement Cost Contents" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Water Backup and Sump Overflow Base Rate" />
                    </worksheet>
                  </private>
                  <private id="WaterBackupAndSumpOverflowPrivate.IsNotSelected" caption="" type="float">
                    <value>
                      <comparison compare="eq">
                        <operand idref="WaterBackupAndSumpOverflowInput.Indicator" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </value>
                  </private>
                </object>
              </object>
              <object id="WaterBackupOfSewersOrDrains" path="coverage[Type=&quot;WaterBackupOfSewersOrDrains&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="WaterBackupOfSewersOrDrainsInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="WaterBackupOfSewersOrDrainsInput.Indicator" type="boolean" comment="" path="Indicator">
                    <rules>
                      <default idref="False" />
                    </rules>
                    <definition>
                      <caption value="Water Back Up of Sewers or Drains" />
                      <maxLength value="1" />
                    </definition>
                  </public>
                  <public id="WaterBackupOfSewersOrDrainsInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Water Backup of Sewers or Drains Limit" />
                      <maxLength value="6" />
                      <readOnly idref="True" />
                    </definition>
                    <rules>
                      <default value="10000" />
                    </rules>
                  </public>
                </object>
                <object id="WaterBackupOfSewersOrDrainsOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="WaterBackupOfSewersOrDrainsOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Water Backup of Sewers or Drains" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="WaterBackupOfSewersOrDrainsInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="WaterBackupOfSewersOrDrainsPrivate.BaseRate" type="int" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="WaterBackupOfSewersOrDrainsOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Water Backup Of Sewers Or Drains Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="WaterBackupOfSewersOrDrainsOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="WaterBackupOfSewersOrDrainsOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Water Backup Of Sewers Or Drains Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules />
                  </public>
                </object>
                <object id="WaterBackupOfSewersOrDrainsPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="WaterBackupOfSewersOrDrainsPrivate.BaseRate" caption="" type="int">
                    <value>
                      <lookup>
                        <tableRef value="CoverageInformation" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="Water Backup of Sewers or Drains" name="Coverage" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Water Backup of Sewers or Drains Base Rate" />
                    </worksheet>
                  </private>
                </object>
              </object>
              <object id="WatercraftBlanketHullCoverage" path="coverage[Type=&quot;WatercraftBlanketHull&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="WatercraftBlanketHullCoverageOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="WatercraftBlanketHullCoverageOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Watercraft Blanket Hull Coverage" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="WatercraftBlanketHullCoverageInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="WatercraftBlanketHullCoveragePrivate.BaseRate" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="WatercraftBlanketHullCoverageOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Watercraft Blanket Hull Coverage Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="WatercraftBlanketHullCoverageOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="WatercraftBlanketHullCoverageOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Watercraft Blanket Hull Coverage Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules />
                  </public>
                </object>
                <object id="WatercraftBlanketHullCoveragePrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="WatercraftBlanketHullCoveragePrivate.BaseRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="WatercraftHullCoverageRates" />
                        <fieldRef value="Rate" />
                        <keyRef idref="WatercraftBlanketHullCoverageInput.Limit" type="int" name="Limit" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Watercraft Blanket Hull Coverage Base Rate" />
                    </worksheet>
                  </private>
                </object>
                <object id="WatercraftBlanketHullCoverageInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="WatercraftBlanketHullCoverageInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Watercraft Blanket Hull Coverage Input Indicator" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="gt">
                          <operand idref="WatercraftBlanketHullCoverageInput.Limit" type="int" />
                          <operand type="int" value="0" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="WatercraftBlanketHullCoverageInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Watercraft Blanket Hull Coverage Limit" />
                      <options>
                        <option value="0" caption="None" default="1" />
                        <option value="2500" caption="$2,500" />
                        <option value="5000" caption="$5,000" />
                      </options>
                      <maxLength idref="MaxLength.iValue" />
                    </definition>
                    <rules>
                      <default value="0" />
                    </rules>
                  </public>
                </object>
              </object>
              <object id="SpecialPersonalPropertyCoverage" path="coverage[Type=&quot;SpecialPersonalProperty&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="SpecialPersonalPropertyCoverageOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="SpecialPersonalPropertyCoverageOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                      <caption>
                        <if>
                          <condition idref="DwellingPrivate.FormIsHO4" />
                          <then value="Special Personal Property" />
                          <else value="Unit Owners Special Coverage C" />
                        </if>
                      </caption>
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="or">
                              <comparison compare="eq">
                                <operand idref="SpecialPersonalPropertyCoverageInput.Indicator" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                              <operand idref="SpecialPersonalPropertyCoveragePrivate.IsIncludedInBase" type="boolean" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="SpecialPersonalPropertyCoverageOutput.Amount" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                  </public>
                  <public id="SpecialPersonalPropertyCoverageOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Unit Owners Special Coverage C Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="SpecialPersonalPropertyCoverageOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="SpecialPersonalPropertyCoverageOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Unit Owners Special Coverage C Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                  <public id="SpecialPersonalPropertyCoverageOutput.Amount" path="Amount" type="float">
                    <definition>
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                      <caption>
                        <if>
                          <condition idref="DwellingPrivate.FormIsHO4" />
                          <then value="Special Personal Property" />
                          <else value="Unit Owners Special Coverage C" />
                        </if>
                      </caption>
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="SpecialPersonalPropertyCoverageInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="DwellingOutputNonShredded.BasePremiumAccumulativeValue" type="float" />
                              <argument op="multiply" round="1" roundType="round" idref="SpecialPersonalPropertyCoveragePrivate.Factor" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                      <affects>
                        <reference idref="SpecialPersonalPropertyCoveragePrivate.SetBasePremium" effect="postEffect" />
                      </affects>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                </object>
                <object id="SpecialPersonalPropertyCoveragePrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="SpecialPersonalPropertyCoveragePrivate.Factor" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="CoverageInformation" />
                        <fieldRef value="Factor" />
                        <keyRef type="string" value="SpecialPersonalProperty" name="Coverage" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Special Factor" />
                    </worksheet>
                  </private>
                  <private id="SpecialPersonalPropertyCoveragePrivate.SetBasePremium" caption="" type="float" path="SetBasePremium">
                    <value>
                      <calculation>
                        <argument op="eq" idref="DwellingOutputNonShredded.BasePremiumAccumulativeValue" type="float" />
                        <argument op="add" idref="SpecialPersonalPropertyCoverageOutput.Amount" type="float" />
                      </calculation>
                    </value>
                    <affects>
                      <reference idref="DwellingOutputNonShredded.BasePremiumAccumulativeValue" effect="setValue" />
                    </affects>
                  </private>
                  <private id="SpecialPersonalPropertyCoveragePrivate.IsIncludedInBase" caption="" type="boolean">
                    <value idref="True" />
                  </private>
                  <private id="SpecialPersonalPropertyCoveragePrivate.ClearAmountIfIndicatorFalseCheck" caption="" type="float">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="SpecialPersonalPropertyCoverageInput.Indicator" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then idref="SpecialPersonalPropertyCoveragePrivate.ClearAmountIfIndicatorFalse" />
                      </if>
                    </value>
                  </private>
                  <private id="SpecialPersonalPropertyCoveragePrivate.ClearAmountIfIndicatorFalse" caption="" type="float">
                    <value value="0" />
                    <affects>
                      <reference idref="SpecialPersonalPropertyCoverageOutput.Amount" effect="setValue" />
                    </affects>
                  </private>
                </object>
                <object id="SpecialPersonalPropertyCoverageInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="SpecialPersonalPropertyCoverageInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption>
                        <if>
                          <condition idref="DwellingPrivate.FormIsHO4" />
                          <then value="Special Personal Property" />
                          <else value="Unit Owners Covg C - Special" />
                        </if>
                      </caption>
                      <readOnly>
                        <comparison idref="DwellingPrivate.FormIsDwelling" type="boolean" />
                      </readOnly>
                    </definition>
                    <rules>
                      <default idref="False" />
                      <misc>
                        <if>
                          <condition idref="DwellingPrivate.FormIsDwelling" />
                          <then idref="False" />
                        </if>
                      </misc>
                      <affects>
                        <reference idref="SpecialPersonalPropertyCoveragePrivate.ClearAmountIfIndicatorFalseCheck" effect="postEffect" />
                      </affects>
                    </rules>
                  </public>
                </object>
              </object>
              <object id="AdditionsAlterations" path="coverage[Type=&quot;AdditionsAlterations&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="AdditionsAlterationsInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="AdditionsAlterationsInput.Type" path="exposure[Type=&quot;Type&quot;]/sValue" type="string">
                    <definition>
                      <caption value="Additions and Alterations Type" />
                      <options validRef="DwellingPrivate.FormIsHO4">
                        <option value="Basic" caption="Basic" />
                      </options>
                      <options validRef="DwellingPrivate.FormIsHO6">
                        <option value="Basic" caption="Basic" />
                        <option value="Special" caption="Special" />
                      </options>
                      <options>
                        <option value="None" caption="None" />
                      </options>
                      <maxLength value="7" />
                      <readOnly>
                        <comparison compare="or">
                          <operand idref="DwellingPrivate.FormIsDwelling" type="boolean" />
                          <operand idref="DwellingPrivate.FormIsHO4" type="boolean" />
                        </comparison>
                      </readOnly>
                    </definition>
                    <rules>
                      <default value="Basic" />
                      <misc>
                        <if>
                          <condition idref="DwellingPrivate.FormIsDwelling" />
                          <then value="None" />
                        </if>
                        <if>
                          <condition idref="DwellingPrivate.FormIsHO4" />
                          <then value="Basic" />
                        </if>
                      </misc>
                    </rules>
                  </public>
                  <public id="AdditionsAlterationsInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Additions and Alterations Limit" />
                      <maxLength idref="MaxLength.iValue" />
                      <formatMask idref="FormatMask.Limit" />
                      <readOnly idref="DwellingPrivate.FormIsDwelling" />
                    </definition>
                    <rules>
                      <maximum idref="MaxValue.MaxValueLimitInt" />
                      <misc>
                        <if>
                          <condition idref="DwellingPrivate.FormIsDwelling" />
                          <then value="0" />
                        </if>
                      </misc>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="lt">
                              <operand idref="AdditionsAlterationsInput.Limit" type="int" />
                              <operand idref="AdditionsAlterationsPrivate.IncludedLimit" type="float" />
                            </comparison>
                          </condition>
                          <then idref="AdditionsAlterationsPrivate.IncludedLimit" />
                        </if>
                      </value>
                    </rules>
                    <worksheet />
                  </public>
                  <public id="AdditionsAlterationsInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Indicator" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <value>
                        <comparison idref="DwellingPrivate.FormIsCondoOrTenant" type="boolean" />
                      </value>
                    </rules>
                  </public>
                </object>
                <object id="AdditionsAlterationsOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="AdditionsAlterationsOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Additions and Alterations" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="AdditionsAlterationsInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq">
                                <calculation>
                                  <argument op="eq">
                                    <calculation>
                                      <argument op="eq" idref="AdditionsAlterationsInput.Limit" type="int" />
                                      <argument op="subtract">
                                        <calculation>
                                          <argument op="eq" idref="AdditionsAlterationsPrivate.IncludedLimit" type="float" />
                                        </calculation>
                                      </argument>
                                    </calculation>
                                  </argument>
                                  <argument op="divide" type="int" value="1000" />
                                </calculation>
                              </argument>
                              <argument op="multiply" round="1" roundType="round">
                                <calculation>
                                  <argument op="eq" idref="AdditionsAlterationsPrivate.EachAdditionalRate" type="float" />
                                  <argument op="add" idref="AdditionsAlterationsPrivate.SpecialRate" type="int" />
                                </calculation>
                              </argument>
                            </calculation>
                          </else>
                        </if>
                      </value>
                      <affects>
                        <reference idref="AdditionsAlterationsInput.Limit" effect="" />
                        <reference idref="AdditionsAlterationsInput.Type" effect="" />
                        <reference idref="AdditionsAlterationsPrivate.SetAdjustedBasePremiumHO6Only" effect="postEffect" />
                      </affects>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="AdditionsAlterationsOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Additions Alterations Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="AdditionsAlterationsOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="AdditionsAlterationsOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Additions Alterations Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                </object>
                <object id="AdditionsAlterationsPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="AdditionsAlterationsPrivate.EachAdditionalRate" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="CoverageCPersonalPropertyHO46Private.KeyPremium" type="float" />
                        <argument op="multiply" round="1" roundType="round" idref="CoverageCPersonalPropertyHO46Private.EachAdditionalFactor" type="float" />
                        <argument op="add" idref="AdditionsAlterationsPrivate.SpecialRatePer1000" type="int" />
                      </calculation>
                    </value>
                    <worksheet>
                      <caption value="Additions and Alterations Each Additional Rate" />
                    </worksheet>
                  </private>
                  <private id="AdditionsAlterationsPrivate.IncludedLimit" type="float">
                    <value>
                      <if>
                        <condition idref="DwellingPrivate.FormIsHO6" />
                        <then idref="AdditionsAlterationsPrivate.IncludedLimitHO6" />
                        <else idref="AdditionsAlterationsPrivate.IncludedLimitHO4" />
                      </if>
                    </value>
                    <worksheet>
                      <caption value="Additions and Alterations Included Limit" />
                    </worksheet>
                  </private>
                  <private id="AdditionsAlterationsPrivate.IncludedLimitFactor" type="float">
                    <value value="0.10" />
                    <worksheet>
                      <caption value="Additions and Alterations Included Limit Factor" />
                    </worksheet>
                  </private>
                  <private id="AdditionsAlterationsPrivate.SpecialRate" type="int">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="AdditionsAlterationsInput.Type" type="string" />
                            <operand type="string" value="Special" />
                          </comparison>
                        </condition>
                        <then value="2" />
                        <else value="0" />
                      </if>
                    </value>
                    <worksheet>
                      <caption value="Additions and Alterations Special Rate" />
                    </worksheet>
                  </private>
                  <private id="AdditionsAlterationsPrivate.SpecialRatePer1000" type="int">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="AdditionsAlterationsInput.Type" type="string" />
                            <operand type="string" value="Special" />
                          </comparison>
                        </condition>
                        <then value="1" />
                        <else value="0" />
                      </if>
                    </value>
                    <worksheet>
                      <caption value="Additions and Alterations Special Rate Per 1000" />
                    </worksheet>
                  </private>
                  <private id="AdditionsAlterationsPrivate.IncludedLimitHO6" caption="" type="float">
                    <value value="5000" />
                    <worksheet>
                      <caption value="Additions and Alterations Included Limit HO6" />
                    </worksheet>
                  </private>
                  <private id="AdditionsAlterationsPrivate.IncludedLimitHO4" type="float">
                    <value>
                      <calculation>
                        <argument op="eq">
                          <calculation>
                            <argument op="eq" idref="CoverageCPersonalPropertyHO46Input.Limit" type="int" />
                            <argument op="multiply" round="1" roundType="round" idref="AdditionsAlterationsPrivate.IncludedLimitFactor" type="float" />
                          </calculation>
                        </argument>
                      </calculation>
                    </value>
                    <worksheet>
                      <caption value="Additions and Alterations Included Limit HO4" />
                    </worksheet>
                  </private>
                  <private id="AdditionsAlterationsPrivate.SetAdjustedBasePremium" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" type="float" />
                        <argument op="add" idref="AdditionsAlterationsOutput.Premium" type="float" />
                      </calculation>
                    </value>
                    <affects>
                      <reference idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" effect="setValue" />
                    </affects>
                  </private>
                  <private id="AdditionsAlterationsPrivate.SetAdjustedBasePremiumHO6Only" caption="" type="float">
                    <value>
                      <if>
                        <condition idref="DwellingPrivate.FormIsHO6" />
                        <then idref="AdditionsAlterationsPrivate.SetAdjustedBasePremium" />
                      </if>
                    </value>
                  </private>
                </object>
              </object>
              <object id="BusinessProperty" path="coverage[Type=&quot;BusinessPropertyOnPremises&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="BusinessPropertyInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="BusinessPropertyInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Business Property Limit" />
                      <options>
                        <option value="2500" caption="$2,500 (Incl)" default="1" />
                        <option value="5000" caption="$5,000" />
                        <option value="7500" caption="$7,500" />
                        <option value="10000" caption="$10,000" />
                      </options>
                      <maxLength value="5" />
                    </definition>
                    <rules>
                      <default value="2500" />
                    </rules>
                    <worksheet />
                  </public>
                  <public id="BusinessPropertyInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Increased Limits on Business Property (HO0412)" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <value idref="True" />
                    </rules>
                  </public>
                </object>
                <object id="BusinessPropertyOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="BusinessPropertyOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Business Property" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="BusinessPropertyInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="BusinessPropertyInput.Limit" type="int" />
                              <argument op="subtract" idref="BusinessPropertyPrivate.IncludedLimit" type="int" />
                              <argument op="divide" type="int" value="2500" />
                              <argument op="multiply" round="1" roundType="round" idref="BusinessPropertyPrivate.BaseRate" type="int" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="BusinessPropertyOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Business Property Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="BusinessPropertyOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="BusinessPropertyOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Business Property Output Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                </object>
                <object id="BusinessPropertyPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="BusinessPropertyPrivate.BaseRate" caption="" type="int">
                    <value value="31" />
                    <worksheet>
                      <caption value="Business Property Base Rate" />
                    </worksheet>
                  </private>
                  <private id="BusinessPropertyPrivate.IncludedLimit" caption="" type="int">
                    <value value="2500" />
                    <worksheet>
                      <caption value="Business Property Included Limit" />
                    </worksheet>
                  </private>
                </object>
              </object>
              <object id="CreditCard" path="coverage[Type=&quot;CreditCard&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="CreditCardInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="CreditCardInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Credit Card Limit" />
                      <options>
                        <option value="500" caption="$500" />
                        <option value="1000" caption="$1,000" />
                        <option value="2500" caption="$2,500" />
                        <option value="5000" caption="$5,000" />
                        <option value="7500" caption="$7,500" />
                        <option value="10000" caption="$10,000" />
                      </options>
                      <maxLength value="5" />
                    </definition>
                    <rules>
                      <default value="500" />
                    </rules>
                  </public>
                  <public id="CreditCardInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Credit Card, Fund Transfer Card, Forgery &amp; Counterfeit Money Coverage (HO0453)" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="gt">
                          <operand idref="CreditCardInput.Limit" type="int" />
                          <operand type="int" value="0" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                </object>
                <object id="CreditCardOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="CreditCardOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Credit Card" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <maxLength idref="MaxLength.Premium" />
                      <readOnly idref="True" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="CreditCardInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="CreditCardPrivate.BaseRate" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="CreditCardOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Credit Card Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <maxLength idref="MaxLength.Premium" />
                      <readOnly idref="True" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="CreditCardOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="CreditCardOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Credit Card Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <maxLength idref="MaxLength.Premium" />
                      <readOnly idref="True" />
                    </definition>
                  </public>
                </object>
                <object id="CreditCardPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="CreditCardPrivate.BaseRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="CreditCardRates" />
                        <fieldRef value="Rate" />
                        <keyRef idref="CreditCardInput.Limit" type="int" name="Credit Card Limit" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Credit Card Base Rate" />
                    </worksheet>
                  </private>
                </object>
              </object>
              <object id="SectionICoveragesInput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
              </object>
              <object id="SectionICoveragesOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="SectionICoveragesOutput.SectionIPremium" path="SectionIPremium" type="float" class="excludeInChangeSummary">
                  <definition>
                    <caption value="Section I Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                    <maxLength idref="MaxLength.Premium" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" idref="BusinessPropertyOutput.Premium" type="float" />
                        <argument op="add" idref="AdditionsAlterationsOutput.Premium" type="float" />
                        <argument op="add" idref="CreditCardOutput.Premium" type="float" />
                        <argument op="add" idref="EarthquakeOutput.Premium" type="float" />
                        <argument op="add" idref="IdentityFraudExpenseCoverageOutput.Premium" type="float" />
                        <argument op="add" idref="LossAssessmentOutput.Premium" type="float" />
                        <argument op="add" idref="OtherStructuresRentedToOthersOutput.Premium" type="float" />
                        <argument op="add" idref="PermittedIncidentalOccupancyOtherStructuresOutput.Premium" type="float" />
                        <argument op="add" idref="PersonalPropertyOtherResidenceOutput.Premium" type="float" />
                        <argument op="add" idref="RefrigeratedPersonalPropertyOutput.Premium" type="float" />
                        <argument op="add" idref="ReplacementCostDwellingOutput.Premium" type="float" />
                        <argument op="add" idref="SpecialComputerCoverageOutput.Premium" type="float" />
                        <argument op="add" idref="SpecialPersonalPropertyCoverageOutput.Premium" type="float" />
                        <argument op="add" idref="UnitsRegularlyRentedToOthersOutput.Premium" type="float" />
                        <argument op="add" idref="UnscheduledElectronicApparatusOutput.Premium" type="float" />
                        <argument op="add" idref="UnscheduledGunsOutput.Premium" type="float" />
                        <argument op="add" idref="UnscheduledJewelryOutput.Premium" type="float" />
                        <argument op="add" idref="UnscheduledMoneyOutput.Premium" type="float" />
                        <argument op="add" idref="UnscheduledSecuritiesOutput.Premium" type="float" />
                        <argument op="add" idref="UnscheduledSilverwareOutput.Premium" type="float" />
                        <argument op="add" idref="WaterBackupAndSumpOverflowOutput.Premium" type="float" />
                        <argument op="add" idref="WaterBackupOfSewersOrDrainsOutput.Premium" type="float" />
                        <argument op="add" idref="WatercraftBlanketHullCoverageOutput.Premium" type="float" />
                        <argument op="add" idref="LimitedFungiBacteriaOutput.Premium" type="float" />
                        <argument op="add" idref="OrdinanceOrLawOutput.Premium" type="float" />
                        <argument op="add" idref="CarportsPoolCagesOutput.Premium" type="float" />
                      </calculation>
                    </value>
                  </rules>
                </public>
                <public id="SectionICoveragesOutput.SectionIPremiumChange" path="SectionIPremium/@change" type="float" class="excludeInChangeSummary">
                  <definition>
                    <caption value="Section I Coverages Output Section I Premium Change" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                    <maxLength idref="MaxLength.Premium" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" idref="AdditionsAlterationsOutput.PremiumChange" type="float" />
                        <argument op="add" idref="BusinessPropertyOutput.PremiumChange" type="float" />
                        <argument op="add" idref="CreditCardOutput.PremiumChange" type="float" />
                        <argument op="add" idref="EarthquakeOutput.PremiumChange" type="float" />
                        <argument op="add" idref="IdentityFraudExpenseCoverageOutput.PremiumChange" type="float" />
                        <argument op="add" idref="LossAssessmentOutput.PremiumChange" type="float" />
                        <argument op="add" idref="OtherStructuresRentedToOthersOutput.PremiumChange" type="float" />
                        <argument op="add" idref="PermittedIncidentalOccupancyOtherStructuresOutput.PremiumChange" type="float" />
                        <argument op="add" idref="PersonalPropertyOtherResidenceOutput.PremiumChange" type="float" />
                        <argument op="add" idref="RefrigeratedPersonalPropertyOutput.PremiumChange" type="float" />
                        <argument op="add" idref="ReplacementCostDwellingOutput.PremiumChange" type="float" />
                        <argument op="add" idref="SpecialComputerCoverageOutput.PremiumChange" type="float" />
                        <argument op="add" idref="SpecialPersonalPropertyCoverageOutput.PremiumChange" type="float" />
                        <argument op="add" idref="UnitsRegularlyRentedToOthersOutput.PremiumChange" type="float" />
                        <argument op="add" idref="UnscheduledElectronicApparatusOutput.PremiumChange" type="float" />
                        <argument op="add" idref="UnscheduledGunsOutput.PremiumChange" type="float" />
                        <argument op="add" idref="UnscheduledJewelryOutput.PremiumChange" type="float" />
                        <argument op="add" idref="UnscheduledMoneyOutput.PremiumChange" type="float" />
                        <argument op="add" idref="UnscheduledSecuritiesOutput.PremiumChange" type="float" />
                        <argument op="add" idref="UnscheduledSilverwareOutput.PremiumChange" type="float" />
                        <argument op="add" idref="WaterBackupAndSumpOverflowOutput.PremiumChange" type="float" />
                        <argument op="add" idref="WaterBackupOfSewersOrDrainsOutput.PremiumChange" type="float" />
                        <argument op="add" idref="WatercraftBlanketHullCoverageOutput.PremiumChange" type="float" />
                        <argument op="add" idref="LimitedFungiBacteriaOutput.PremiumChange" type="float" />
                        <argument op="add" idref="OrdinanceOrLawOutput.PremiumChange" type="float" />
                        <argument op="add" idref="CarportsPoolCagesOutput.PremiumChange" type="float" />
                      </calculation>
                    </value>
                  </rules>
                </public>
                <public id="SectionICoveragesOutput.SectionIPremiumWritten" path="SectionIPremium/@written" type="float" class="excludeInChangeSummary">
                  <definition>
                    <caption value="Section I Coverages Output Section I Premium Written" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                    <maxLength idref="MaxLength.Premium" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" idref="AdditionsAlterationsOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="BusinessPropertyOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="CreditCardOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="EarthquakeOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="IdentityFraudExpenseCoverageOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="LossAssessmentOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="OtherStructuresRentedToOthersOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="PermittedIncidentalOccupancyOtherStructuresOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="PersonalPropertyOtherResidenceOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="RefrigeratedPersonalPropertyOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="ReplacementCostDwellingOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="SpecialComputerCoverageOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="SpecialPersonalPropertyCoverageOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="UnitsRegularlyRentedToOthersOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="UnscheduledElectronicApparatusOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="UnscheduledGunsOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="UnscheduledJewelryOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="UnscheduledMoneyOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="UnscheduledSecuritiesOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="UnscheduledSilverwareOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="WaterBackupAndSumpOverflowOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="WaterBackupOfSewersOrDrainsOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="WatercraftBlanketHullCoverageOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="LimitedFungiBacteriaOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="OrdinanceOrLawOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="CarportsPoolCagesOutput.PremiumWritten" type="float" />
                      </calculation>
                    </value>
                  </rules>
                </public>
              </object>
              <object id="SectionICoveragesPrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
              </object>
              <object id="CarportsPoolCages" path="carportspoolcages">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="CarportsPoolCagesInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="CarportsPoolCagesInput.Description" path="Description" type="string">
                    <definition>
                      <caption value="Carport, Pool Cage and Screen Enclosure Description" />
                      <options>
                        <option value="Carport" caption="Carport" />
                        <option value="PoolCage" caption="Pool Cage" />
                        <option value="ScreenEnclosure" caption="Screen Enclosure" />
                        <option value="CarportCage" caption="Carport/Pool Cage" />
                        <option value="CarportScreen" caption="Carport/Screen" />
                        <option value="PoolScreen" caption="Pool Cage/Screen" />
                        <option value="All" caption="All" />
                      </options>
                      <formatMask idref="FormatMask.BlankOption" />
                    </definition>
                  </public>
                  <public id="CarportsPoolCagesInput.Indicator" type="boolean" comment="" path="Indicator">
                    <definition>
                      <maxLength value="1" />
                      <caption value="Carports Pool Cages Input Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="gt">
                          <operand idref="CarportsPoolCagesInput.Limit" type="int" />
                          <operand type="int" value="0" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="CarportsPoolCagesInput.Limit" path="limit[Type=&quot;Standard&quot;]/Limit" type="int">
                    <definition>
                      <caption value="Carports, Pool Cages and Screen Enclosures Limit" />
                      <maxLength value="5" />
                      <formatMask idref="FormatMask.Limit" />
                    </definition>
                    <rules>
                      <default value="0" />
                      <maximum idref="CarportsPoolCagesPrivate.MaximumLimit" />
                      <affects>
                        <reference idref="CarportsPoolCagesInput.Indicator" effect="onChange" />
                      </affects>
                      <misc>
                        <if>
                          <condition>
                            <comparison compare="and">
                              <comparison compare="gt">
                                <operand idref="CarportsPoolCagesInput.Limit" type="int" />
                                <operand type="int" value="0" />
                              </comparison>
                              <comparison compare="lt">
                                <operand idref="CarportsPoolCagesInput.Limit" type="int" />
                                <operand type="int" value="10000" />
                              </comparison>
                            </comparison>
                          </condition>
                          <then value="10000" />
                        </if>
                      </misc>
                    </rules>
                    <worksheet />
                  </public>
                </object>
                <object id="CarportsPoolCagesOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="CarportsPoolCagesOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Carports, Pool Cages and Screen Enclosures Premium" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <calculation>
                          <argument op="eq" idref="CarportsPoolCagesInput.Limit" type="int" />
                          <argument op="divide" idref="CarportsPoolCagesPrivate.PerAmount" type="float" />
                          <argument op="multiply" round="1" roundType="round" idref="CarportsPoolCagesPrivate.BaseRate" type="float" />
                        </calculation>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="CarportsPoolCagesOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Carports Pool Cages Output Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                  <public id="CarportsPoolCagesOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Carports Pool Cages Output Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="CarportsPoolCagesOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                </object>
                <object id="CarportsPoolCagesPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="CarportsPoolCagesPrivate.BaseRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="CarportsPoolCagesRates" />
                        <fieldRef value="Rate" />
                        <keyRef idref="CarportsPoolCagesPrivate.CoastalCountyLookup" type="string" name="County" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Carports, Pool Cages and Screen Enclosures Base Rate" />
                    </worksheet>
                  </private>
                  <private id="CarportsPoolCagesPrivate.Increment" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="CarportsPoolCagesInput.Limit" type="int" />
                        <argument op="divide" round="1" roundType="trunc" idref="CarportsPoolCagesPrivate.PerAmount" type="float" />
                        <argument op="multiply" idref="CarportsPoolCagesPrivate.PerAmount" type="float" />
                      </calculation>
                    </value>
                  </private>
                  <private id="CarportsPoolCagesPrivate.MaximumLimit" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="CarportsPoolCagesRates" />
                        <fieldRef value="Maximum" />
                        <keyRef idref="CarportsPoolCagesPrivate.CoastalCountyLookup" type="string" name="County" />
                      </lookup>
                    </value>
                  </private>
                  <private id="CarportsPoolCagesPrivate.MinimumLimit" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="CarportsPoolCagesRates" />
                        <fieldRef value="Minimum" />
                        <keyRef idref="CarportsPoolCagesPrivate.CoastalCountyLookup" type="string" name="County" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Unscheduled Guns Minimum Limit" />
                    </worksheet>
                  </private>
                  <private id="CarportsPoolCagesPrivate.PerAmount" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="CarportsPoolCagesRates" />
                        <fieldRef value="PerAmt" />
                        <keyRef idref="CarportsPoolCagesPrivate.CoastalCountyLookup" type="string" name="County" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Carports, Pool Cages and Screen Enclosures Per Amount" />
                    </worksheet>
                  </private>
                  <private id="CarportsPoolCagesPrivate.CoastalCountyLookup" caption="" type="string">
                    <value>
                      <lookup>
                        <tableRef value="CoastalCounties" />
                        <fieldRef value="Value" />
                        <keyRef idref="AccountPrivate.CountyStateConcatination" type="string" name="County" />
                      </lookup>
                    </value>
                  </private>
                  <private id="CarportsPoolCagesPrivate.HideDescription" caption="" type="boolean">
                    <value>
                      <comparison compare="eq">
                        <operand idref="CarportsPoolCagesInput.Indicator" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </value>
                  </private>
                </object>
              </object>
              <object id="LimitedFungiBacteria" path="limitedfungibacteria">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LimitedFungiBacteriaInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LimitedFungiBacteriaInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Limited Fungi Bacteria Input Indicator" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="ne">
                          <operand idref="LimitedFungiBacteriaInput.Limit" type="string" />
                          <operand type="string" value="N" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="LimitedFungiBacteriaInput.Limit" path="limit[Type=&quot;Standard&quot;]/Limit" type="string">
                    <definition>
                      <caption value="Limited Fungi or Bacteria" />
                      <options>
                        <option value="N" caption="No Coverage" />
                        <option value="10/50" caption="$10,000/$50,000" />
                        <option value="25/50" caption="$25,000/$50,000" />
                        <option value="50/50" caption="$50,000/$50,000" />
                      </options>
                      <maxLength value="5" />
                    </definition>
                    <rules>
                      <default value="10/50" />
                    </rules>
                  </public>
                </object>
                <object id="LimitedFungiBacteriaOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LimitedFungiBacteriaOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Limited Fungi Bacteria Premium" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <maxLength idref="MaxLength.Premium" />
                      <readOnly idref="True" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="LimitedFungiBacteriaInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="LimitedFungiBacteriaPrivate.BaseRate" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="LimitedFungiBacteriaOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Limited Fungi Bacteria Output Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <maxLength idref="MaxLength.Premium" />
                      <readOnly idref="True" />
                    </definition>
                  </public>
                  <public id="LimitedFungiBacteriaOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Limited Fungi Bacteria Output Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <maxLength idref="MaxLength.Premium" />
                      <readOnly idref="True" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="LimitedFungiBacteriaOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                </object>
                <object id="LimitedFungiBacteriaPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="LimitedFungiBacteriaPrivate.BaseRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="LimitedFungiBacteriaRates" />
                        <fieldRef value="Rate" />
                        <keyRef idref="LimitedFungiBacteriaInput.Limit" type="string" name="Limited Fungi Limit" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Limited Fungi or Bacteria Base Rate" />
                    </worksheet>
                  </private>
                </object>
              </object>
              <object id="OrdinanceOrLaw" path="ordinanceorlaw">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="OrdinanceOrLawInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="OrdinanceOrLawInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Ordinance Or Law Input Indicator" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="ne">
                          <operand idref="OrdinanceOrLawInput.Limit" />
                          <operand type="string" value="N" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="OrdinanceOrLawInput.Limit" path="limit[Type=&quot;Standard&quot;]/Limit" type="string">
                    <definition>
                      <caption value="Ordinance Or Law Limit" />
                      <options>
                        <option value="N" caption="None" />
                        <option value="25" caption="25%" default="1" />
                        <option value="50" caption="50%" />
                      </options>
                      <maxLength value="5" />
                    </definition>
                    <rules>
                      <default value="25" />
                    </rules>
                  </public>
                </object>
                <object id="OrdinanceOrLawOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="OrdinanceOrLawOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Ordinance Or Law Premium" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <maxLength idref="MaxLength.Premium" />
                      <readOnly idref="True" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="OrdinanceOrLawInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="OrdinanceOrLawPrivate.BaseRate" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="OrdinanceOrLawOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Ordinance Or Law Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <maxLength idref="MaxLength.Premium" />
                      <readOnly idref="True" />
                    </definition>
                  </public>
                  <public id="OrdinanceOrLawOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Ordinance Or Law Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <maxLength idref="MaxLength.Premium" />
                      <readOnly idref="True" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="OrdinanceOrLawOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                </object>
                <object id="OrdinanceOrLawPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="OrdinanceOrLawPrivate.BaseRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="OrdinanceOrLawRates" />
                        <fieldRef value="Rate" />
                        <keyRef idref="OrdinanceOrLawInput.Limit" type="string" name="Ordinance Or Law" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Ordinance Or Law Base Rate" />
                    </worksheet>
                  </private>
                </object>
              </object>
              <object id="PreferredPremiumPackage" path="preferredpremiumpackage">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="PreferredPremiumPackageInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="PreferredPremiumPackageInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Preferred Premium Package Input Indicator" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <default idref="False" />
                    </rules>
                  </public>
                  <public id="PreferredPremiumPackageInput.Limit" path="limit[Type=&quot;Standard&quot;]/Limit" type="boolean">
                    <definition>
                      <caption value="Preferred Premium Package Input Limit" />
                      <maxLength value="1" />
                      <options>
                        <option value="0" caption="No" />
                        <option value="1" caption="Yes" />
                      </options>
                    </definition>
                  </public>
                </object>
                <object id="PreferredPremiumPackageOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="PreferredPremiumPackageOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Preferred Premium Package Output Premium" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="PreferredPremiumPackageInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="PreferredPremiumPackagePrivate.BaseRate" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="PreferredPremiumPackageOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Preferred Premium Package Output Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                  <public id="PreferredPremiumPackageOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Preferred Premium Package Output Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="PreferredPremiumPackageOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                </object>
                <object id="PreferredPremiumPackagePrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="PreferredPremiumPackagePrivate.BaseRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="PreferredPremiumPackageFactors" />
                        <fieldRef value="Rate" />
                        <keyRef idref="CoverageADwellingInput.Limit" type="int" name="DwellingLimit" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Preferred Premium Package Factor" />
                    </worksheet>
                  </private>
                </object>
              </object>
            </object>
            <object id="SectionIICoverages" path="SectionIICoverages">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="AdditionalResidenceSummary">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="AdditionalResidenceSummaryOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="AdditionalResidenceSummaryOutput.IncidentalOccupancyAccumulatedTotal" type="float" comment="" path="IncidentalOccupancyAccumulatedTotal">
                    <rules>
                      <value>
                        <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="AdditionalResidence">
                          <reference idref="IncidentalOccupancyOutput.Premium" type="float" />
                          <where>
                            <comparison compare="eq">
                              <operand idref="IncidentalOccupancyInput.Indicator" type="boolean" />
                              <operand idref="True" type="int" />
                            </comparison>
                          </where>
                        </iterator>
                      </value>
                    </rules>
                    <definition>
                      <caption value="Additional Residence Incidental Occupancy" />
                      <maxLength idref="MaxLength.Premium" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                    </definition>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="AdditionalResidenceSummaryOutput.RentedToOthersAccumulatedTotal" type="float" comment="" path="RentedToOthersAccumulatedTotal">
                    <rules>
                      <value>
                        <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="AdditionalResidence">
                          <reference idref="RentedToOthersOutput.Premium" type="float" />
                          <where>
                            <comparison compare="eq">
                              <operand idref="AdditionalResidenceInput.OccupantType" type="string" />
                              <operand type="string" value="Renter" />
                            </comparison>
                          </where>
                        </iterator>
                      </value>
                    </rules>
                    <definition>
                      <caption value="Additional Residence Rented to Others" />
                      <maxLength idref="MaxLength.Premium" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                    </definition>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="AdditionalResidenceSummaryOutput.OwnerOccupiedAccumulatedTotal" type="float" comment="" path="OwnerOccupiedAccumulatedTotal">
                    <rules>
                      <value>
                        <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="AdditionalResidence">
                          <reference idref="OwnerOccupiedOutput.Premium" type="float" />
                          <where>
                            <comparison compare="eq">
                              <operand idref="AdditionalResidenceInput.OccupantType" type="string" />
                              <operand type="string" value="Owner" />
                            </comparison>
                          </where>
                        </iterator>
                      </value>
                    </rules>
                    <definition>
                      <caption value="Additional Residence Owner Occupied" />
                      <maxLength idref="MaxLength.Premium" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                    </definition>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                </object>
                <object id="AdditionalResidenceSummaryPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="AdditionalResidenceSummaryPrivate.IncidentalOccupancyCount" caption="" type="float">
                    <value>
                      <iterator type="float" scope="all" action="count" idref="AdditionalResidence">
                        <where>
                          <comparison compare="eq">
                            <operand idref="IncidentalOccupancyInput.Indicator" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </where>
                      </iterator>
                    </value>
                  </private>
                  <private id="AdditionalResidenceSummaryPrivate.RentedToOthersCount" caption="" type="float">
                    <value>
                      <iterator type="float" scope="all" action="count" idref="AdditionalResidence">
                        <where>
                          <comparison compare="eq">
                            <operand idref="AdditionalResidenceInput.OccupantType" type="string" />
                            <operand type="string" value="Renter" />
                          </comparison>
                        </where>
                      </iterator>
                    </value>
                  </private>
                  <private id="AdditionalResidenceSummaryPrivate.OwnerOccupiedCount" caption="" type="float">
                    <value>
                      <iterator type="float" scope="all" action="count" idref="AdditionalResidence">
                        <where>
                          <comparison compare="eq">
                            <operand idref="AdditionalResidenceInput.OccupantType" type="string" />
                            <operand type="string" value="Owner" />
                          </comparison>
                        </where>
                      </iterator>
                    </value>
                  </private>
                  <private id="AdditionalResidenceSummaryPrivate.IncidentalOccupancyIsSelected" caption="" type="boolean">
                    <value>
                      <comparison compare="gt">
                        <operand idref="AdditionalResidenceSummaryPrivate.IncidentalOccupancyCount" type="float" />
                        <operand type="int" value="0" />
                      </comparison>
                    </value>
                  </private>
                  <private id="AdditionalResidenceSummaryPrivate.OwnerOccupiedIsSelected" caption="" type="boolean">
                    <value>
                      <comparison compare="gt">
                        <operand idref="AdditionalResidenceSummaryPrivate.OwnerOccupiedCount" type="float" />
                        <operand type="int" value="0" />
                      </comparison>
                    </value>
                  </private>
                  <private id="AdditionalResidenceSummaryPrivate.RentedToOthersIsSelected" caption="" type="boolean">
                    <value>
                      <comparison compare="gt">
                        <operand idref="AdditionalResidenceSummaryPrivate.RentedToOthersCount" type="float" />
                        <operand type="int" value="0" />
                      </comparison>
                    </value>
                  </private>
                  <private id="AdditionalResidenceSummaryPrivate.RentedToOthersAccumulatedTotalChange" type="float" comment="" path="RentedToOthersAccumulatedTotalChange">
                    <value>
                      <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="AdditionalResidence">
                        <reference idref="RentedToOthersOutput.PremiumChange" type="float" />
                        <where>
                          <comparison compare="eq">
                            <operand idref="AdditionalResidenceInput.OccupantType" type="string" />
                            <operand type="string" value="Renter" />
                          </comparison>
                        </where>
                      </iterator>
                    </value>
                  </private>
                  <private id="AdditionalResidenceSummaryPrivate.RentedToOthersAccumulatedTotalWritten" type="float" comment="" path="RentedToOthersAccumulatedTotalWritten">
                    <value>
                      <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="AdditionalResidence">
                        <reference idref="RentedToOthersOutput.PremiumWritten" type="float" />
                        <where>
                          <comparison compare="eq">
                            <operand idref="AdditionalResidenceInput.OccupantType" type="string" />
                            <operand type="string" value="Renter" />
                          </comparison>
                        </where>
                      </iterator>
                    </value>
                  </private>
                  <private id="AdditionalResidenceSummaryPrivate.OwnerOccupiedAccumulatedTotalChange" type="float" comment="" path="OwnerOccupiedAccumulatedTotalChange">
                    <value>
                      <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="AdditionalResidence">
                        <reference idref="OwnerOccupiedOutput.PremiumChange" type="float" />
                        <where>
                          <comparison compare="eq">
                            <operand idref="AdditionalResidenceInput.OccupantType" type="string" />
                            <operand type="string" value="Owner" />
                          </comparison>
                        </where>
                      </iterator>
                    </value>
                  </private>
                  <private id="AdditionalResidenceSummaryPrivate.OwnerOccupiedAccumulatedTotalWritten" type="float" comment="" path="OwnerOccupiedAccumulatedTotalWritten">
                    <value>
                      <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="AdditionalResidence">
                        <reference idref="OwnerOccupiedOutput.PremiumWritten" type="float" />
                        <where>
                          <comparison compare="eq">
                            <operand idref="AdditionalResidenceInput.OccupantType" type="string" />
                            <operand type="string" value="Owner" />
                          </comparison>
                        </where>
                      </iterator>
                    </value>
                  </private>
                  <private id="AdditionalResidenceSummaryPrivate.IncidentalOccupancyAccumulatedTotalChange" type="float" comment="" path="IncidentalOccupancyAccumulatedTotalChange">
                    <value>
                      <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="AdditionalResidence">
                        <reference idref="IncidentalOccupancyOutput.PremiumChange" type="float" />
                        <where>
                          <comparison compare="eq">
                            <operand idref="IncidentalOccupancyInput.Indicator" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </where>
                      </iterator>
                    </value>
                  </private>
                  <private id="AdditionalResidenceSummaryPrivate.IncidentalOccupancyAccumulatedTotalWritten" type="float" comment="" path="IncidentalOccupancyAccumulatedTotalWritten">
                    <value>
                      <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="AdditionalResidence">
                        <reference idref="IncidentalOccupancyOutput.PremiumWritten" type="float" />
                        <where>
                          <comparison compare="eq">
                            <operand idref="IncidentalOccupancyInput.Indicator" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </where>
                      </iterator>
                    </value>
                  </private>
                </object>
                <object id="AdditionalResidenceSummaryInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                </object>
              </object>
              <object id="BusinessPursuits" path="coverage[Type=&quot;BusinessPursuits&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="BusinessPursuitsInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="BusinessPursuitsInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Business Pursuits" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="or">
                          <comparison compare="or">
                            <comparison compare="or">
                              <comparison compare="or">
                                <comparison compare="or">
                                  <comparison compare="or">
                                    <comparison compare="gt">
                                      <operand idref="BusinessPursuitsInput.NumberOfClerical" type="int" />
                                      <operand type="int" value="0" />
                                    </comparison>
                                    <comparison compare="gt">
                                      <operand idref="BusinessPursuitsInput.NumberOfSalesNoService" type="int" />
                                      <operand type="int" value="0" />
                                    </comparison>
                                  </comparison>
                                  <comparison compare="gt">
                                    <operand idref="BusinessPursuitsInput.NumberOfSalesWithService" type="int" />
                                    <operand type="int" value="0" />
                                  </comparison>
                                </comparison>
                                <comparison compare="gt">
                                  <operand idref="BusinessPursuitsInput.NumberOfTeachersAthletic" type="int" />
                                  <operand type="int" value="0" />
                                </comparison>
                              </comparison>
                              <comparison compare="gt">
                                <operand idref="BusinessPursuitsInput.NumberOfTeachersAthleticCorporalPunishment" type="int" />
                                <operand type="int" value="0" />
                              </comparison>
                            </comparison>
                            <comparison compare="gt">
                              <operand idref="BusinessPursuitsInput.NumberOfTeachersNOC" type="int" />
                              <operand type="int" value="0" />
                            </comparison>
                          </comparison>
                          <comparison compare="gt">
                            <operand idref="BusinessPursuitsInput.NumberOfTeachersNOCCorporalPunishment" type="int" />
                            <operand type="int" value="0" />
                          </comparison>
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="BusinessPursuitsInput.NumberOfClerical" path="exposure[Type=&quot;NumberOfClerical&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Clerical Employees" />
                      <maxLength idref="BusinessPursuitsPrivate.MaxLengthBusinessPursuitsNumberOf" />
                    </definition>
                    <rules>
                      <default value="0" />
                      <minimum value="0" />
                      <maximum value="99" />
                    </rules>
                    <worksheet />
                  </public>
                  <public id="BusinessPursuitsInput.NumberOfSalesNoService" path="exposure[Type=&quot;NumberOfSalesNoService&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Sales Employees Without Service" />
                      <maxLength idref="BusinessPursuitsPrivate.MaxLengthBusinessPursuitsNumberOf" />
                    </definition>
                    <rules>
                      <default value="0" />
                      <minimum value="0" />
                      <maximum value="99" />
                    </rules>
                    <worksheet />
                  </public>
                  <public id="BusinessPursuitsInput.NumberOfSalesWithService" path="exposure[Type=&quot;NumberOfSalesWithService&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Sales Employees With Service" />
                      <maxLength idref="BusinessPursuitsPrivate.MaxLengthBusinessPursuitsNumberOf" />
                    </definition>
                    <rules>
                      <default value="0" />
                      <minimum value="0" />
                      <maximum value="99" />
                    </rules>
                    <worksheet />
                  </public>
                  <public id="BusinessPursuitsInput.NumberOfTeachersAthletic" path="exposure[Type=&quot;NumberOfTeachersAthletic&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Athletic Teachers" />
                      <maxLength idref="BusinessPursuitsPrivate.MaxLengthBusinessPursuitsNumberOf" />
                    </definition>
                    <rules>
                      <default value="0" />
                      <minimum value="0" />
                      <maximum value="99" />
                    </rules>
                    <worksheet />
                  </public>
                  <public id="BusinessPursuitsInput.NumberOfTeachersAthleticCorporalPunishment" path="exposure[Type=&quot;NumberOfTeachersAthleticCorporalPunishment&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Athletic Teachers With Corporal Punishment" />
                      <maxLength idref="BusinessPursuitsPrivate.MaxLengthBusinessPursuitsNumberOf" />
                    </definition>
                    <rules>
                      <default value="0" />
                      <minimum value="0" />
                      <maximum value="99" />
                    </rules>
                    <worksheet />
                  </public>
                  <public id="BusinessPursuitsInput.NumberOfTeachersNOC" path="exposure[Type=&quot;NumberOfTeachersNOC&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Not Otherwise Classified (NOC) Teachers" />
                      <maxLength idref="BusinessPursuitsPrivate.MaxLengthBusinessPursuitsNumberOf" />
                    </definition>
                    <rules>
                      <default value="0" />
                      <minimum value="0" />
                      <maximum value="99" />
                    </rules>
                    <worksheet />
                  </public>
                  <public id="BusinessPursuitsInput.NumberOfTeachersNOCCorporalPunishment" path="exposure[Type=&quot;NumberOfTeachersNOCCorporalPunishment&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Not Otherwise Classified Teachers w/ Corporal Punishment" />
                      <maxLength idref="BusinessPursuitsPrivate.MaxLengthBusinessPursuitsNumberOf" />
                    </definition>
                    <rules>
                      <default value="0" />
                      <minimum value="0" />
                      <maximum value="99" />
                    </rules>
                    <worksheet />
                  </public>
                </object>
                <object id="BusinessPursuitsOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="BusinessPursuitsOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Business Pursuits" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="BusinessPursuitsInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="ClericalPrivate.Premium" type="float" />
                              <argument op="add" idref="SalesNoServicePrivate.Premium" type="float" />
                              <argument op="add" idref="SalesWithServicePrivate.Premium" type="float" />
                              <argument op="add" idref="TeachersAthleticPrivate.Premium" type="float" />
                              <argument op="add" idref="TeachersAthleticCorporalPunishmentPrivate.Premium" type="float" />
                              <argument op="add" idref="TeachersNOCPrivate.Premium" type="float" />
                              <argument op="add" idref="TeachersNOCCorporalPunishmentPrivate.Premium" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="BusinessPursuitsOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Business Pursuits Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="BusinessPursuitsOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="BusinessPursuitsOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Business Pursuits Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules />
                  </public>
                  <object id="BusinessPursuitsOutputNonShredded">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="BusinessPursuitsOutputNonShredded.PageColumnHeading" path="PageColumnHeading" type="string">
                      <definition>
                        <caption value="Type of Employee" />
                        <readOnly idref="True" />
                      </definition>
                      <rules>
                        <value value="# of" />
                      </rules>
                    </public>
                  </object>
                </object>
                <object id="BusinessPursuitsPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="BusinessPursuitsPrivate.CorporalPunishmentRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="BusinessPursuitsRates" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="CorporalPunishment" name="Type" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Business Pursuits Corporal Punishment Rate" />
                    </worksheet>
                  </private>
                  <private id="BusinessPursuitsPrivate.MaxLengthBusinessPursuitsNumberOf" caption="" type="int">
                    <value value="3" />
                  </private>
                  <object id="ClericalPrivate">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="ClericalPrivate.BaseRate" caption="" type="float">
                      <value>
                        <lookup>
                          <tableRef value="BusinessPursuitsRates" />
                          <fieldRef value="Rate" />
                          <keyRef type="string" value="Clerical" name="Type" />
                        </lookup>
                      </value>
                      <worksheet>
                        <caption value="Clerical Base Rate" />
                      </worksheet>
                    </private>
                    <private id="ClericalPrivate.MedicalRate" caption="" type="float">
                      <value>
                        <lookup>
                          <tableRef value="BusinessPursuitsMedicalRates" />
                          <fieldRef value="Rate" />
                          <keyRef type="string" value="Clerical" name="Type" />
                          <keyRef idref="CoverageFMedicalInput.Limit" type="string" name="Medical Limit" />
                        </lookup>
                      </value>
                      <worksheet>
                        <caption value="Clerical Medical Rate" />
                      </worksheet>
                    </private>
                    <private id="ClericalPrivate.Premium" type="float" comment="">
                      <value>
                        <if>
                          <condition>
                            <comparison compare="le">
                              <operand idref="BusinessPursuitsInput.NumberOfClerical" type="int" />
                              <operand type="int" value="0" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="ClericalPrivate.BaseRate" type="float" />
                              <argument op="multiply" idref="CoverageELiabilityPrivate.LiabilityLimitFactor" type="float" />
                              <argument op="add" idref="ClericalPrivate.MedicalRate" type="float" />
                              <argument op="multiply" round="1" roundType="round" idref="BusinessPursuitsInput.NumberOfClerical" type="int" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </private>
                  </object>
                  <object id="SalesNoServicePrivate">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="SalesNoServicePrivate.BaseRate" caption="" type="float">
                      <value>
                        <lookup>
                          <tableRef value="BusinessPursuitsRates" />
                          <fieldRef value="Rate" />
                          <keyRef type="string" value="SalesNoService" name="Type" />
                        </lookup>
                      </value>
                      <worksheet>
                        <caption value="Sales No Service Base Rate" />
                      </worksheet>
                    </private>
                    <private id="SalesNoServicePrivate.MedicalRate" caption="" type="float">
                      <value>
                        <lookup>
                          <tableRef value="BusinessPursuitsMedicalRates" />
                          <fieldRef value="Rate" />
                          <keyRef type="string" value="SalesNoService" name="Type" />
                          <keyRef idref="CoverageFMedicalInput.Limit" type="string" name="Medical Limit" />
                        </lookup>
                      </value>
                      <worksheet>
                        <caption value="Sales No Service Medical Rate" />
                      </worksheet>
                    </private>
                    <private id="SalesNoServicePrivate.Premium" type="float" comment="">
                      <value>
                        <if>
                          <condition>
                            <comparison compare="le">
                              <operand idref="BusinessPursuitsInput.NumberOfSalesNoService" type="int" />
                              <operand type="int" value="0" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="SalesNoServicePrivate.BaseRate" type="float" />
                              <argument op="multiply" idref="CoverageELiabilityPrivate.LiabilityLimitFactor" type="float" />
                              <argument op="add" idref="SalesNoServicePrivate.MedicalRate" type="float" />
                              <argument op="multiply" round="1" roundType="round" idref="BusinessPursuitsInput.NumberOfSalesNoService" type="int" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </private>
                  </object>
                  <object id="SalesWithServicePrivate">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="SalesWithServicePrivate.BaseRate" caption="" type="float">
                      <value>
                        <lookup>
                          <tableRef value="BusinessPursuitsRates" />
                          <fieldRef value="Rate" />
                          <keyRef type="string" value="SalesWithService" name="Type" />
                        </lookup>
                      </value>
                      <worksheet>
                        <caption value="Sales With Service Base Rate" />
                      </worksheet>
                    </private>
                    <private id="SalesWithServicePrivate.MedicalRate" caption="" type="float">
                      <value>
                        <lookup>
                          <tableRef value="BusinessPursuitsMedicalRates" />
                          <fieldRef value="Rate" />
                          <keyRef type="string" value="SalesWithService" name="Type" />
                          <keyRef idref="CoverageFMedicalInput.Limit" type="string" name="Medical Limit" />
                        </lookup>
                      </value>
                      <worksheet>
                        <caption value="Sales With Service Medical Rate" />
                      </worksheet>
                    </private>
                    <private id="SalesWithServicePrivate.Premium" type="float" comment="">
                      <value>
                        <if>
                          <condition>
                            <comparison compare="le">
                              <operand idref="BusinessPursuitsInput.NumberOfSalesWithService" type="int" />
                              <operand type="int" value="0" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="SalesWithServicePrivate.BaseRate" type="float" />
                              <argument op="multiply" idref="CoverageELiabilityPrivate.LiabilityLimitFactor" type="float" />
                              <argument op="add" idref="SalesWithServicePrivate.MedicalRate" type="float" />
                              <argument op="multiply" round="1" roundType="round" idref="BusinessPursuitsInput.NumberOfSalesWithService" type="int" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </private>
                  </object>
                  <object id="TeachersAthleticPrivate">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="TeachersAthleticPrivate.BaseRate" caption="" type="float">
                      <value>
                        <lookup>
                          <tableRef value="BusinessPursuitsRates" />
                          <fieldRef value="Rate" />
                          <keyRef type="string" value="TeachersAthletic" name="Type" />
                        </lookup>
                      </value>
                      <worksheet>
                        <caption value="Teachers Athletic Base Rate" />
                      </worksheet>
                    </private>
                    <private id="TeachersAthleticPrivate.MedicalRate" caption="" type="float">
                      <value>
                        <lookup>
                          <tableRef value="BusinessPursuitsMedicalRates" />
                          <fieldRef value="Rate" />
                          <keyRef type="string" value="TeachersAthletic" name="Type" />
                          <keyRef idref="CoverageFMedicalInput.Limit" type="string" name="Medical Limit" />
                        </lookup>
                      </value>
                      <worksheet>
                        <caption value="Teachers Athletic Medical Rate" />
                      </worksheet>
                    </private>
                    <private id="TeachersAthleticPrivate.Premium" type="float" comment="">
                      <value>
                        <if>
                          <condition>
                            <comparison compare="le">
                              <operand idref="BusinessPursuitsInput.NumberOfTeachersAthletic" type="int" />
                              <operand type="int" value="0" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="TeachersAthleticPrivate.BaseRate" type="float" />
                              <argument op="multiply" idref="CoverageELiabilityPrivate.LiabilityLimitFactor" type="float" />
                              <argument op="add" idref="TeachersAthleticPrivate.MedicalRate" type="float" />
                              <argument op="multiply" round="1" roundType="round" idref="BusinessPursuitsInput.NumberOfTeachersAthletic" type="int" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </private>
                  </object>
                  <object id="TeachersAthleticCorporalPunishmentPrivate">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="TeachersAthleticCorporalPunishmentPrivate.BaseRate" caption="" type="float">
                      <value>
                        <lookup>
                          <tableRef value="BusinessPursuitsRates" />
                          <fieldRef value="Rate" />
                          <keyRef type="string" value="TeachersAthletic" name="Type" />
                        </lookup>
                      </value>
                      <worksheet>
                        <caption value="Teachers Athletic Corporal Punishment Base Rate" />
                      </worksheet>
                    </private>
                    <private id="TeachersAthleticCorporalPunishmentPrivate.Premium" type="float" comment="">
                      <value>
                        <if>
                          <condition>
                            <comparison compare="le">
                              <operand idref="BusinessPursuitsInput.NumberOfTeachersAthleticCorporalPunishment" type="int" />
                              <operand type="int" value="0" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="TeachersAthleticCorporalPunishmentPrivate.BaseRate" type="float" />
                              <argument op="add" idref="BusinessPursuitsPrivate.CorporalPunishmentRate" type="float" />
                              <argument op="multiply" idref="CoverageELiabilityPrivate.LiabilityLimitFactor" type="float" />
                              <argument op="multiply" round="1" roundType="round" idref="BusinessPursuitsInput.NumberOfTeachersAthleticCorporalPunishment" type="int" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </private>
                  </object>
                  <object id="TeachersNOCPrivate">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="TeachersNOCPrivate.BaseRate" caption="" type="float">
                      <value>
                        <lookup>
                          <tableRef value="BusinessPursuitsRates" />
                          <fieldRef value="Rate" />
                          <keyRef type="string" value="TeachersNOC" name="Type" />
                        </lookup>
                      </value>
                      <worksheet>
                        <caption value="Teachers NOC Base Rate" />
                      </worksheet>
                    </private>
                    <private id="TeachersNOCPrivate.MedicalRate" caption="" type="float">
                      <value>
                        <lookup>
                          <tableRef value="BusinessPursuitsMedicalRates" />
                          <fieldRef value="Rate" />
                          <keyRef type="string" value="TeachersNOC" name="Type" />
                          <keyRef idref="CoverageFMedicalInput.Limit" type="string" name="Medical Limit" />
                        </lookup>
                      </value>
                      <worksheet>
                        <caption value="Teachers NOC Medical Rate" />
                      </worksheet>
                    </private>
                    <private id="TeachersNOCPrivate.Premium" type="float" comment="">
                      <value>
                        <if>
                          <condition>
                            <comparison compare="le">
                              <operand idref="BusinessPursuitsInput.NumberOfTeachersNOC" type="int" />
                              <operand type="int" value="0" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="TeachersNOCPrivate.BaseRate" type="float" />
                              <argument op="multiply" idref="CoverageELiabilityPrivate.LiabilityLimitFactor" type="float" />
                              <argument op="add" idref="TeachersNOCPrivate.MedicalRate" type="float" />
                              <argument op="multiply" round="1" roundType="round" idref="BusinessPursuitsInput.NumberOfTeachersNOC" type="int" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </private>
                  </object>
                  <object id="TeachersNOCCorporalPunishmentPrivate">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="TeachersNOCCorporalPunishmentPrivate.BaseRate" caption="" type="float">
                      <value>
                        <lookup>
                          <tableRef value="BusinessPursuitsRates" />
                          <fieldRef value="Rate" />
                          <keyRef type="string" value="TeachersNOC" name="Type" />
                        </lookup>
                      </value>
                      <worksheet>
                        <caption value="Teachers NOC Corporal Punishment Base Rate" />
                      </worksheet>
                    </private>
                    <private id="TeachersNOCCorporalPunishmentPrivate.Premium" type="float" comment="">
                      <value>
                        <if>
                          <condition>
                            <comparison compare="le">
                              <operand idref="BusinessPursuitsInput.NumberOfTeachersNOCCorporalPunishment" type="int" />
                              <operand type="int" value="0" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="TeachersNOCCorporalPunishmentPrivate.BaseRate" type="float" />
                              <argument op="add" idref="BusinessPursuitsPrivate.CorporalPunishmentRate" type="float" />
                              <argument op="multiply" idref="CoverageELiabilityPrivate.LiabilityLimitFactor" type="float" />
                              <argument op="multiply" round="1" roundType="round" idref="BusinessPursuitsInput.NumberOfTeachersNOCCorporalPunishment" type="int" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </private>
                  </object>
                </object>
              </object>
              <object id="PersonalInjury" path="coverage[Type=&quot;PersonalInjury&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="PersonalInjuryInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="PersonalInjuryInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Personal Injury" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <default idref="False" />
                      <misc>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="CoverageELiabilityInput.Limit" type="string" />
                              <operand type="int" value="0" />
                            </comparison>
                          </condition>
                          <then idref="False" />
                        </if>
                      </misc>
                    </rules>
                  </public>
                  <public id="PersonalInjuryInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Personal Injury Limit" />
                      <maxLength value="5" />
                      <formatMask idref="FormatMask.Limit" />
                      <readOnly idref="True" />
                    </definition>
                    <rules>
                      <default value="5000" />
                    </rules>
                  </public>
                </object>
                <object id="PersonalInjuryOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="PersonalInjuryOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Personal Injury" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="PersonalInjuryInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="PersonalInjuryPrivate.BaseRate" type="float" />
                              <argument op="multiply" round="1" roundType="round" idref="CoverageELiabilityPrivate.LiabilityLimitFactor" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="PersonalInjuryOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Personal Injury Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="PersonalInjuryOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="PersonalInjuryOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Personal Injury Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules />
                  </public>
                </object>
                <object id="PersonalInjuryPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="PersonalInjuryPrivate.BaseRate" caption="" type="float">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="PersonalInjuryInput.Indicator" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <lookup>
                            <tableRef value="CoverageInformation" />
                            <fieldRef value="Rate" />
                            <keyRef type="string" value="Personal Injury" name="Coverage" />
                          </lookup>
                        </else>
                      </if>
                    </value>
                    <worksheet>
                      <caption value="Personal Injury Base Rate" />
                    </worksheet>
                  </private>
                </object>
              </object>
              <object id="ResidenceEmployees" path="coverage[Type=&quot;ResidenceEmployees&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="ResidenceEmployeesInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="ResidenceEmployeesInput.NumberOfEmployees" path="exposure[Type=&quot;NumberOfResidenceEmployees&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Residence Employees - # of" />
                      <maxLength value="3" />
                    </definition>
                    <rules>
                      <default value="0" />
                      <minimum value="0" />
                      <maximum value="999" />
                    </rules>
                    <worksheet />
                  </public>
                  <public id="ResidenceEmployeesInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Indicator" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <value idref="True" />
                    </rules>
                  </public>
                </object>
                <object id="ResidenceEmployeesOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="ResidenceEmployeesOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Residence Employees" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="ResidenceEmployeesInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq">
                                <calculation>
                                  <argument op="eq">
                                    <calculation>
                                      <argument op="eq">
                                        <calculation>
                                          <argument op="eq" idref="ResidenceEmployeesInput.NumberOfEmployees" type="int" />
                                          <argument op="subtract" idref="ResidenceEmployeesPrivate.IncludedEmployees" type="int" />
                                        </calculation>
                                      </argument>
                                      <argument op="multiply" idref="ResidenceEmployeesPrivate.BaseRate" type="float" />
                                    </calculation>
                                  </argument>
                                  <argument op="multiply" round="1" roundType="round" idref="CoverageELiabilityPrivate.LiabilityLimitFactor" type="float" />
                                </calculation>
                              </argument>
                              <argument op="add" idref="ResidenceEmployeesPrivate.MedicalRate" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="ResidenceEmployeesOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Residence Employees Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="ResidenceEmployeesOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="ResidenceEmployeesOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Residence Employees Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules />
                  </public>
                </object>
                <object id="ResidenceEmployeesPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="ResidenceEmployeesPrivate.BaseRate" caption="" type="float">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="le">
                            <operand idref="ResidenceEmployeesInput.NumberOfEmployees" type="int" />
                            <operand idref="ResidenceEmployeesPrivate.IncludedEmployees" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <lookup>
                            <tableRef value="CoverageInformation" />
                            <fieldRef value="Rate" />
                            <keyRef type="string" value="Residence Employee" name="Coverage" />
                          </lookup>
                        </else>
                      </if>
                    </value>
                    <worksheet>
                      <caption value="Residence Employees Base Rate" />
                    </worksheet>
                  </private>
                  <private id="ResidenceEmployeesPrivate.IncludedEmployees" caption="" type="int">
                    <value>
                      <lookup>
                        <tableRef value="CoverageInformation" />
                        <fieldRef value="IncludedLimit" />
                        <keyRef type="string" value="Residence Employee" name="Coverage" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Residence Employees Included Employees" />
                    </worksheet>
                  </private>
                  <private id="ResidenceEmployeesPrivate.MedicalRate" caption="" type="float">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="le">
                            <operand idref="ResidenceEmployeesInput.NumberOfEmployees" type="int" />
                            <operand idref="ResidenceEmployeesPrivate.IncludedEmployees" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <lookup>
                            <tableRef value="CoverageMedicalRates" />
                            <fieldRef value="Rate" />
                            <keyRef type="string" value="Residence Employees" name="Coverage" />
                            <keyRef idref="CoverageFMedicalInput.Limit" type="string" name="Medical Limit" />
                          </lookup>
                        </else>
                      </if>
                    </value>
                    <worksheet>
                      <caption value="Residence Employees Medical Rate" />
                    </worksheet>
                  </private>
                </object>
              </object>
              <object id="IncidentalFarmingPersonalLiability" path="coverage[Type=&quot;IncidentalFarmingPersonalLiability&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="IncidentalFarmingPersonalLiabilityInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="IncidentalFarmingPersonalLiabilityInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Incidental Farming Personal Liability (HO2472)" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="ne">
                          <operand idref="IncidentalFarmingPersonalLiabilityInput.Type" type="string" />
                          <operand type="string" value="None" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="IncidentalFarmingPersonalLiabilityInput.Type" path="exposure[Type=&quot;Type&quot;]/sValue" type="string">
                    <definition>
                      <caption value="Incidental Farming Personal Liability" />
                      <options>
                        <option value="None" caption="None" default="1" />
                        <option value="OnPremises" caption="At Residence" />
                        <option value="OffPremises" caption="Away from Residence" />
                      </options>
                      <maxLength value="11" />
                    </definition>
                    <rules>
                      <default value="None" />
                    </rules>
                  </public>
                  <public id="IncidentalFarmingPersonalLiabilityInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Incidental Farming Personal Liability Limit" />
                      <maxLength value="6" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.Limit" />
                    </definition>
                    <rules>
                      <default value="10000" />
                    </rules>
                  </public>
                </object>
                <object id="IncidentalFarmingPersonalLiabilityOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="IncidentalFarmingPersonalLiabilityOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Incidental Farming Personal Liability" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="IncidentalFarmingPersonalLiabilityInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="IncidentalFarmingPersonalLiabilityPrivate.BaseRate" type="float" />
                              <argument op="multiply" round="1" roundType="round" idref="CoverageELiabilityPrivate.LiabilityLimitFactor" type="float" />
                              <argument op="add" idref="IncidentalFarmingPersonalLiabilityPrivate.MedicalRate" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="IncidentalFarmingPersonalLiabilityOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Incidental Farming Personal Liability Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="IncidentalFarmingPersonalLiabilityOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="IncidentalFarmingPersonalLiabilityOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Incidental Farming Personal Liability Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules />
                  </public>
                </object>
                <object id="IncidentalFarmingPersonalLiabilityPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="IncidentalFarmingPersonalLiabilityPrivate.BaseRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="IncidentalFarmingPersonalLiabilityRates" />
                        <fieldRef value="Rate" />
                        <keyRef idref="IncidentalFarmingPersonalLiabilityInput.Type" type="string" name="Type" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Incidental Farming Personal Liability Base Rate" />
                    </worksheet>
                  </private>
                  <private id="IncidentalFarmingPersonalLiabilityPrivate.MedicalRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="CoverageMedicalRates" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="Incidental Farming Personal Liability" name="Coverage" />
                        <keyRef idref="CoverageFMedicalInput.Limit" type="string" name="Medical Limit" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Incidental Farming Personal Liability Medical Rate" />
                    </worksheet>
                  </private>
                </object>
              </object>
              <object id="SectionIICoveragesInput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
              </object>
              <object id="SectionIICoveragesOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="SectionIICoveragesOutput.SectionIIPremium" path="SectionIIPremium" type="float" class="excludeInChangeSummary">
                  <definition>
                    <caption value="Section II Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                    <maxLength idref="MaxLength.Premium" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" idref="AdditionalResidenceSummaryOutput.IncidentalOccupancyAccumulatedTotal" type="float" />
                        <argument op="add" idref="AdditionalResidenceSummaryOutput.OwnerOccupiedAccumulatedTotal" type="float" />
                        <argument op="add" idref="AdditionalResidenceSummaryOutput.RentedToOthersAccumulatedTotal" type="float" />
                        <argument op="add" idref="BusinessPursuitsOutput.Premium" type="float" />
                        <argument op="add" idref="IncidentalFarmingPersonalLiabilityOutput.Premium" type="float" />
                        <argument op="add" idref="PersonalInjuryOutput.Premium" type="float" />
                        <argument op="add" idref="ResidenceEmployeesOutput.Premium" type="float" />
                      </calculation>
                    </value>
                  </rules>
                </public>
                <public id="SectionIICoveragesOutput.SectionIIPremiumChange" path="SectionIIPremium/@change" type="float" class="excludeInChangeSummary">
                  <definition>
                    <caption value="Section II Coverages Output Section II Premium Change" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                    <maxLength idref="MaxLength.Premium" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" idref="AdditionalResidenceSummaryPrivate.IncidentalOccupancyAccumulatedTotalChange" type="float" />
                        <argument op="add" idref="AdditionalResidenceSummaryPrivate.OwnerOccupiedAccumulatedTotalChange" type="float" />
                        <argument op="add" idref="AdditionalResidenceSummaryPrivate.RentedToOthersAccumulatedTotalChange" type="float" />
                        <argument op="add" idref="BusinessPursuitsOutput.PremiumChange" type="float" />
                        <argument op="add" idref="IncidentalFarmingPersonalLiabilityOutput.PremiumChange" type="float" />
                        <argument op="add" idref="PersonalInjuryOutput.PremiumChange" type="float" />
                        <argument op="add" idref="ResidenceEmployeesOutput.PremiumChange" type="float" />
                      </calculation>
                    </value>
                  </rules>
                </public>
                <public id="SectionIICoveragesOutput.SectionIIPremiumWritten" path="SectionIIPremium/@written" type="float" class="excludeInChangeSummary">
                  <definition>
                    <caption value="Section II Coverages Output Section II Premium Written" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                    <maxLength idref="MaxLength.Premium" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" idref="AdditionalResidenceSummaryPrivate.IncidentalOccupancyAccumulatedTotalWritten" type="float" />
                        <argument op="add" idref="AdditionalResidenceSummaryPrivate.OwnerOccupiedAccumulatedTotalWritten" type="float" />
                        <argument op="add" idref="AdditionalResidenceSummaryPrivate.RentedToOthersAccumulatedTotalWritten" type="float" />
                        <argument op="add" idref="BusinessPursuitsOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="IncidentalFarmingPersonalLiabilityOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="PersonalInjuryOutput.PremiumWritten" type="float" />
                        <argument op="add" idref="ResidenceEmployeesOutput.PremiumWritten" type="float" />
                      </calculation>
                    </value>
                  </rules>
                </public>
              </object>
              <object id="SectionIICoveragesPrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
              </object>
            </object>
            <object id="RiskCoverages" abstract="1">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="AdditionalResidence" path="additionalResidence">
                <minOccurs value="0" />
                <maxOccurs value="*" />
                <object id="AdditionalResidenceInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="AdditionalResidenceInput.OccupantType" path="OccupantType" type="string">
                    <definition>
                      <caption value="Occupancy Type" />
                      <options>
                        <option value="None" caption="None" />
                        <option value="Owner" caption="Owner" />
                        <option value="Renter" caption="Renter" />
                      </options>
                    </definition>
                    <rules>
                      <default value="None" />
                    </rules>
                  </public>
                  <public id="AdditionalResidenceInput.NumberOfFamilies" path="NumberOfFamilies" type="int">
                    <definition>
                      <caption value="# of Families" />
                      <maxLength value="3" />
                    </definition>
                    <rules>
                      <default value="0" />
                      <minimum value="0" />
                      <maximum value="99" />
                    </rules>
                  </public>
                </object>
                <object id="AdditionalResidencePrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="AdditionalResidencePrivate.Iteration" type="int">
                    <value>
                      <iterator type="int" scope="all" action="current" idref="AdditionalResidence" />
                    </value>
                  </private>
                </object>
                <object id="IncidentalOccupancy" path="coverage[Type=&quot;IncidentalOccupancy&quot;]">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <object id="IncidentalOccupancyInput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="IncidentalOccupancyInput.Indicator" path="Indicator" type="boolean">
                      <definition>
                        <caption value="Incidental Occupancy" />
                        <options>
                          <option value="0" caption="No" />
                          <option value="1" caption="Yes" />
                        </options>
                        <maxLength value="1" />
                      </definition>
                      <rules>
                        <default idref="False" />
                      </rules>
                    </public>
                  </object>
                  <object id="IncidentalOccupancyOutput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="IncidentalOccupancyOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                      <definition>
                        <caption value="Incidental Occupancy Premium" />
                        <formatMask idref="FormatMask.PremiumPennies" />
                        <readOnly idref="True" />
                        <maxLength idref="MaxLength.Premium" />
                      </definition>
                      <rules>
                        <value>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="IncidentalOccupancyInput.Indicator" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                            </condition>
                            <then value="0" />
                            <else>
                              <calculation>
                                <argument op="eq" idref="IncidentalOccupancyPrivate.BaseRate" type="float" />
                                <argument op="multiply" round="1" roundType="round" idref="CoverageELiabilityPrivate.LiabilityLimitFactor" type="float" />
                                <argument op="add" idref="IncidentalOccupancyPrivate.MedicalRate" type="float" />
                              </calculation>
                            </else>
                          </if>
                        </value>
                      </rules>
                      <worksheet />
                    </public>
                    <public id="IncidentalOccupancyOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                      <definition>
                        <caption value="Incidental Occupancy Written" />
                        <formatMask idref="FormatMask.PremiumPennies" />
                        <readOnly idref="True" />
                        <maxLength idref="MaxLength.Premium" />
                      </definition>
                      <rules>
                        <value>
                          <written useShared="1">
                            <writtenRef idref="IncidentalOccupancyOutput.Premium" type="float" infoType="term" />
                            <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                            <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                            <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                          </written>
                        </value>
                      </rules>
                    </public>
                    <public id="IncidentalOccupancyOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                      <definition>
                        <caption value="Incidental Occupancy Premium Change" />
                        <formatMask idref="FormatMask.PremiumPennies" />
                        <readOnly idref="True" />
                        <maxLength idref="MaxLength.Premium" />
                      </definition>
                    </public>
                  </object>
                  <object id="IncidentalOccupancyPrivate">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="IncidentalOccupancyPrivate.MedicalRate" caption="" type="float">
                      <value>
                        <lookup>
                          <tableRef value="CoverageMedicalRates" />
                          <fieldRef value="Rate" />
                          <keyRef type="string" value="Incidental Occupancy Other Residence" name="Coverage" />
                          <keyRef idref="CoverageFMedicalInput.Limit" type="string" name="Medical Limit" />
                        </lookup>
                      </value>
                      <worksheet>
                        <caption value="Incidental Occupancy Medical Rate" />
                      </worksheet>
                    </private>
                    <private id="IncidentalOccupancyPrivate.BaseRate" caption="" type="float">
                      <value>
                        <lookup>
                          <tableRef value="CoverageInformation" />
                          <fieldRef value="Rate" />
                          <keyRef type="string" value="Incidental Occupancy - Other Residence" name="Coverage" />
                        </lookup>
                      </value>
                      <worksheet>
                        <caption value="Incidental Occupancy Base Rate" />
                      </worksheet>
                    </private>
                  </object>
                </object>
                <object id="OwnerOccupied" path="coverage[Type=&quot;AddlResidenceOwnerOccupied&quot;]">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <object id="OwnerOccupiedInput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="OwnerOccupiedInput.Indicator" path="Indicator" type="boolean">
                      <definition>
                        <caption value="Other Insured Location Occupied by Insured" />
                        <maxLength value="1" />
                      </definition>
                      <rules>
                        <value>
                          <comparison compare="gt">
                            <operand idref="AdditionalResidenceSummaryPrivate.OwnerOccupiedCount" type="float" />
                            <operand type="int" value="0" />
                          </comparison>
                        </value>
                        <default idref="False" />
                      </rules>
                    </public>
                  </object>
                  <object id="OwnerOccupiedOutput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="OwnerOccupiedOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                      <definition>
                        <caption value="Owner Occupied Premium" />
                        <formatMask idref="FormatMask.PremiumPennies" />
                        <readOnly idref="True" />
                        <maxLength idref="MaxLength.Premium" />
                      </definition>
                      <rules>
                        <value>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="OwnerOccupiedInput.Indicator" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                            </condition>
                            <then value="0" />
                            <else>
                              <calculation>
                                <argument op="eq" idref="OwnerOccupiedPrivate.BaseRate" type="float" />
                                <argument op="multiply" round="1" roundType="round" idref="CoverageELiabilityPrivate.LiabilityLimitFactor" type="float" />
                                <argument op="add" idref="OwnerOccupiedPrivate.MedicalRate" type="float" />
                              </calculation>
                            </else>
                          </if>
                        </value>
                      </rules>
                      <worksheet />
                    </public>
                    <public id="OwnerOccupiedOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                      <definition>
                        <caption value="Owner Occupied Written" />
                        <formatMask idref="FormatMask.PremiumPennies" />
                        <readOnly idref="True" />
                        <maxLength idref="MaxLength.Premium" />
                      </definition>
                      <rules>
                        <value>
                          <written useShared="1">
                            <writtenRef idref="OwnerOccupiedOutput.Premium" type="float" infoType="term" />
                            <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                            <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                            <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                          </written>
                        </value>
                      </rules>
                    </public>
                    <public id="OwnerOccupiedOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                      <definition>
                        <caption value="Owner Occupied Premium Change" />
                        <formatMask idref="FormatMask.PremiumPennies" />
                        <readOnly idref="True" />
                        <maxLength idref="MaxLength.Premium" />
                      </definition>
                    </public>
                  </object>
                  <object id="OwnerOccupiedPrivate">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="OwnerOccupiedPrivate.MedicalRate" type="float">
                      <value>
                        <lookup>
                          <tableRef value="CoverageMedicalRates" />
                          <fieldRef value="Rate" />
                          <keyRef type="string" value="Additional Residence Owner Occupied" name="Coverage" />
                          <keyRef idref="CoverageFMedicalInput.Limit" type="string" name="Medical Limit" />
                        </lookup>
                      </value>
                      <worksheet>
                        <caption value="Owner Occupied Medical Rate" />
                      </worksheet>
                    </private>
                    <private id="OwnerOccupiedPrivate.BaseRate" type="float">
                      <value>
                        <lookup>
                          <tableRef value="AdditionalResidenceRates" />
                          <fieldRef value="Rate" />
                          <keyRef idref="AdditionalResidenceInput.OccupantType" type="string" name="Occupant Type" />
                          <keyRef idref="AdditionalResidenceInput.NumberOfFamilies" type="int" name="Number Of Families" />
                        </lookup>
                      </value>
                      <worksheet>
                        <caption value="Owner Occupied Base Rate" />
                      </worksheet>
                    </private>
                  </object>
                </object>
                <object id="RentedToOthers" path="coverage[Type=&quot;AddlResidenceRented&quot;]">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <object id="RentedToOthersInput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="RentedToOthersInput.Indicator" path="Indicator" type="boolean">
                      <definition>
                        <caption value="Additional Residence Rented To Others" />
                        <maxLength value="1" />
                      </definition>
                      <rules>
                        <value>
                          <comparison compare="gt">
                            <operand idref="AdditionalResidenceSummaryPrivate.RentedToOthersCount" type="float" />
                            <operand type="int" value="0" />
                          </comparison>
                        </value>
                        <default idref="False" />
                      </rules>
                    </public>
                  </object>
                  <object id="RentedToOthersOutput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="RentedToOthersOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                      <definition>
                        <caption value="Rented To Others Premium" />
                        <formatMask idref="FormatMask.PremiumPennies" />
                        <readOnly idref="True" />
                        <maxLength idref="MaxLength.Premium" />
                      </definition>
                      <rules>
                        <value>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="RentedToOthersInput.Indicator" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                            </condition>
                            <then value="0" />
                            <else>
                              <calculation>
                                <argument op="eq" idref="RentedToOthersPrivate.BaseRate" type="float" />
                                <argument op="multiply" round="1" roundType="round" idref="CoverageELiabilityPrivate.LiabilityLimitFactor" type="float" />
                                <argument op="add" idref="RentedToOthersPrivate.MedicalRate" type="float" />
                              </calculation>
                            </else>
                          </if>
                        </value>
                      </rules>
                    </public>
                    <public id="RentedToOthersOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                      <definition>
                        <caption value="Rented To Others Written Premium" />
                        <formatMask idref="FormatMask.PremiumPennies" />
                        <readOnly idref="True" />
                        <maxLength idref="MaxLength.Premium" />
                      </definition>
                      <rules>
                        <value>
                          <written useShared="1">
                            <writtenRef idref="RentedToOthersOutput.Premium" type="float" infoType="term" />
                            <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                            <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                            <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                          </written>
                        </value>
                      </rules>
                    </public>
                    <public id="RentedToOthersOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                      <definition>
                        <caption value="Rented To Others Premium Change" />
                        <formatMask idref="FormatMask.PremiumPennies" />
                        <readOnly idref="True" />
                        <maxLength idref="MaxLength.Premium" />
                      </definition>
                    </public>
                  </object>
                  <object id="RentedToOthersPrivate">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="RentedToOthersPrivate.MedicalRate" type="float">
                      <value>
                        <lookup>
                          <tableRef value="CoverageMedicalRates" />
                          <fieldRef value="Rate" />
                          <keyRef type="string" value="Additional Residence Rented To Others" name="Coverage" />
                          <keyRef idref="CoverageFMedicalInput.Limit" type="string" name="Medical Limit" />
                        </lookup>
                      </value>
                      <worksheet>
                        <caption value="Rented To Others Medical Rate" />
                      </worksheet>
                    </private>
                    <private id="RentedToOthersPrivate.BaseRate" type="float">
                      <value>
                        <lookup>
                          <tableRef value="AdditionalResidenceRates" />
                          <fieldRef value="Rate" />
                          <keyRef idref="AdditionalResidenceInput.OccupantType" type="string" name="Occupant Type" />
                          <keyRef idref="AdditionalResidenceInput.NumberOfFamilies" type="int" name="Number Of Families" />
                        </lookup>
                      </value>
                      <worksheet>
                        <caption value="Rented To Others Base Rate" />
                      </worksheet>
                    </private>
                  </object>
                </object>
              </object>
              <object id="CoverageADwelling" path="coverage[Type=&quot;COA&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="CoverageADwellingInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="CoverageADwellingInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int" alwaysRun="1">
                    <definition>
                      <caption value="Dwelling Limit (A)" />
                      <required>
                        <comparison idref="DwellingPrivate.FormIsDwelling" type="boolean" />
                      </required>
                      <maxLength idref="MaxLength.iValue" />
                      <formatMask idref="FormatMask.Limit" />
                    </definition>
                    <rules>
                      <misc>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="DwellingPrivate.FormIsDwelling" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                        </if>
                        <if>
                          <condition>
                            <comparison compare="and">
                              <comparison compare="and">
                                <operand idref="DwellingPrivate.FormIsDwelling" type="boolean" />
                                <comparison compare="ne">
                                  <operand idref="CoverageADwellingInput.Limit" type="int" />
                                  <operand type="int" value="0" />
                                </comparison>
                              </comparison>
                              <comparison compare="lt">
                                <operand idref="CoverageADwellingInput.Limit" type="int" />
                                <operand idref="CoverageADwellingPrivate.MinimumLimit" type="int" />
                              </comparison>
                            </comparison>
                          </condition>
                          <then idref="CoverageADwellingPrivate.MinimumLimit" type="int" />
                        </if>
                      </misc>
                      <affects>
                        <reference idref="CoverageBOtherStructuresPrivate.ResetCoverageBLimit" effect="onChange" />
                        <reference idref="CoverageCPersonalPropertyHO3Private.ResetCoverageCLimit" effect="onChange" />
                        <reference idref="CoverageDLossOfUsePrivate.ResetCoverageDLimit" effect="onChange" />
                      </affects>
                    </rules>
                  </public>
                  <public id="CoverageADwellingInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Indicator" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <value>
                        <comparison idref="DwellingPrivate.FormIsDwelling" type="boolean" />
                      </value>
                    </rules>
                  </public>
                </object>
                <object id="CoverageADwellingOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="CoverageADwellingOutput.BasePremium" path="BasePremium" type="float" class="excludeInChangeSummary" override="1">
                    <definition>
                      <caption value="Dwelling Premium" />
                      <formatMask idref="FormatMask.Premium" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="CoverageADwellingInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="CoverageADwellingPrivate.BasePremiumBeforeCovWithThreeFourFamily" type="float" />
                              <argument op="add" idref="TownhouseRowhouseSurchargeOutput.Amount" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                      <affects>
                        <reference idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" effect="setValue" />
                      </affects>
                    </rules>
                  </public>
                  <public id="CoverageADwellingOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary" override="1">
                    <definition>
                      <caption value="Dwelling (A) Premium" />
                      <maxLength idref="MaxLength.Premium" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="CoverageADwellingInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="CoverageADwellingPrivate.NonSmokerDsctCalc" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                  </public>
                  <public id="CoverageADwellingOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Coverage A Dwelling Premium Written" />
                      <maxLength idref="MaxLength.Premium" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="CoverageADwellingOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="CoverageADwellingOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Coverage A Dwelling Premium Change" />
                      <maxLength idref="MaxLength.Premium" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    </definition>
                  </public>
                </object>
                <object id="CoverageADwellingPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="CoverageADwellingPrivate.BaseRate" caption="" type="int">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="DwellingOutput.RatedTerritory" type="string" />
                            <operand type="int" value="0" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <lookup>
                            <tableRef value="BaseRates" />
                            <fieldRef value="Rate" />
                            <keyRef idref="DwellingOutput.RatedTerritory" type="string" name="Territory" />
                            <keyRef idref="DwellingInput.Form" type="string" name="Form" />
                          </lookup>
                        </else>
                      </if>
                    </value>
                    <worksheet>
                      <caption value="Coverage A Base Rate" />
                    </worksheet>
                  </private>
                  <private id="CoverageADwellingPrivate.KeyFactor" type="float">
                    <value>
                      <lookup>
                        <tableRef value="KeyFactorsHO3" />
                        <fieldRef value="Factor" />
                        <keyRef idref="CoverageADwellingInput.Limit" type="int" name="Limit" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Coverage A Limit Factor" />
                    </worksheet>
                  </private>
                  <private id="CoverageADwellingPrivate.ProtectionConstructionFactor" type="float">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="or">
                            <comparison compare="contains">
                              <operand idref="DwellingInput.RatedProtectionClass" type="string" />
                              <operand type="string" value="/" />
                            </comparison>
                            <comparison compare="and">
                              <comparison compare="eq">
                                <operand idref="DwellingInput.RatedProtectionClass" type="string" />
                                <operand type="int" value="88" />
                              </comparison>
                              <comparison compare="is">
                                <operand idref="DwellingInput.Form" type="string" />
                                <operand type="string" value="HO4,HO6" />
                              </comparison>
                            </comparison>
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <lookup>
                            <tableRef value="ProtectionConstructionFactors" />
                            <fieldRef value="Factor" />
                            <keyRef idref="DwellingInput.RatedProtectionClass" type="string" name="Protection Class" />
                            <keyRef idref="DwellingInput.Form" type="string" name="Form" />
                            <keyRef idref="DwellingInput.Construction" type="string" name="Construction Type" />
                          </lookup>
                        </else>
                      </if>
                    </value>
                    <worksheet>
                      <caption value="Protection/Construction Factor" />
                    </worksheet>
                  </private>
                  <private id="CoverageADwellingPrivate.FormFactor" type="float">
                    <value>
                      <lookup>
                        <tableRef value="FormFactors" />
                        <fieldRef value="Factor" />
                        <keyRef idref="DwellingInput.Form" type="string" name="Form" />
                      </lookup>
                    </value>
                  </private>
                  <private id="CoverageADwellingPrivate.BasePremiumBeforeCoverage" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="CoverageADwellingPrivate.KeyPremium" type="float" />
                        <argument op="multiply" round="1" roundType="round" idref="CoverageADwellingPrivate.KeyFactor" type="float" />
                        <argument op="multiply" round="1" roundType="round" idref="LinePrivate.CreditScoreFactor" type="float" />
                      </calculation>
                    </value>
                    <affects>
                      <reference idref="DwellingOutputNonShredded.BasePremiumAccumulativeValue" effect="setValue" />
                    </affects>
                    <worksheet>
                      <caption value="Dwelling A Base Premium" />
                      <summarize idref="True" />
                    </worksheet>
                  </private>
                  <private id="CoverageADwellingPrivate.MinimumLimit" caption="" type="int">
                    <value value="40000" />
                  </private>
                  <private id="CoverageADwellingPrivate.KeyPremium" type="float" comment="" path="KeyPremium" override="1">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="CoverageADwellingInput.Indicator" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="CoverageADwellingPrivate.CovABaseFormFacCalc" type="float" />
                            <argument op="multiply" round="1" roundType="round" idref="CoverageADwellingPrivate.ProtectionConstructionFactor" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </private>
                  <private id="CoverageADwellingPrivate.ClearDwellingPremiums" caption="" type="float">
                    <value value="0" />
                    <affects>
                      <reference idref="CoverageADwellingOutput.Premium" effect="setValue" />
                      <reference idref="CoverageADwellingOutput.PremiumChange" effect="setValue" />
                      <reference idref="CoverageADwellingOutput.PremiumWritten" effect="setValue" />
                      <reference idref="CoverageADwellingInput.Indicator" effect="setValue" />
                      <reference idref="CoverageCPersonalPropertyHO3Output.Amount" effect="setValue" />
                      <reference idref="CoverageCPersonalPropertyHO3Input.Indicator" effect="setValue" />
                      <reference idref="InflationGuardInput.Indicator" effect="setValue" />
                      <reference idref="InflationGuardOutput.Amount" effect="setValue" />
                    </affects>
                  </private>
                  <private id="CoverageADwellingPrivate.RenewalAdjustCoverage" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="CoverageADwellingInput.Limit" type="int" />
                        <argument op="multiply">
                          <calculation>
                            <argument op="eq" type="int" value="1" />
                            <argument op="add">
                              <calculation>
                                <argument op="eq" idref="InflationGuardInput.Limit" type="int" />
                                <argument op="divide" type="int" value="100" />
                              </calculation>
                            </argument>
                          </calculation>
                        </argument>
                      </calculation>
                    </value>
                    <affects>
                      <reference idref="CoverageADwellingInput.Limit" effect="setValue" />
                    </affects>
                  </private>
                  <private id="CoverageADwellingPrivate.BasePremiumBeforeCovWithFireResistive" type="float" comment="" caption="Coverage A Dwelling Private Base Premium Before Cov With Fire Resistive">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="CoverageADwellingInput.Indicator" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="CoverageADwellingPrivate.BasePremiumBeforeCoverage" type="float" />
                            <argument op="add" idref="FireResistiveDiscountOutput.Amount" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </private>
                  <private id="CoverageADwellingPrivate.BasePremiumBeforeCovWithThreeFourFamily" type="float" comment="" caption="Coverage A Dwelling Private Base Premium Before Cov With Fire Resistive">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="CoverageADwellingInput.Indicator" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="CoverageADwellingPrivate.BasePremiumBeforeCovWithFireResistive" type="float" />
                            <argument op="add" idref="ThreeAndFourFamilySurchargeOutput.Amount" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </private>
                  <private id="CoverageADwellingPrivate.CovABaseFormFacCalc" type="float" comment="" path="KeyPremium">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="CoverageADwellingInput.Indicator" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="CoverageADwellingPrivate.BaseRate" type="int" />
                            <argument op="multiply" round="100" roundType="round" idref="CoverageADwellingPrivate.FormFactor" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </private>
                  <private id="CoverageADwellingPrivate.CovCHO3Calc" type="float" comment="" caption="Coverage A Dwelling Private Loss Surcharge Calc">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="CoverageADwellingInput.Indicator" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="CoverageADwellingPrivate.DeductibleCalc" type="float" />
                            <argument op="add" idref="CoverageCPersonalPropertyHO3Output.Amount" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </private>
                  <private id="CoverageADwellingPrivate.DeductibleCalc" type="float" comment="" caption="Coverage A Dwelling Private Loss Surcharge Calc">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="CoverageADwellingInput.Indicator" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="CoverageADwellingPrivate.LossSurchargeCalc" type="float" />
                            <argument op="add" idref="DwellingOutput.DeductibleCalculation" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </private>
                  <private id="CoverageADwellingPrivate.InflationGuardCalc" type="float" comment="" caption="Coverage A Dwelling Private Loss Surcharge Calc">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="CoverageADwellingInput.Indicator" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="CoverageADwellingPrivate.ProtectiveDeviceDsctCalc" type="float" />
                            <argument op="add" idref="InflationGuardOutput.Amount" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </private>
                  <private id="CoverageADwellingPrivate.LossSurchargeCalc" type="float" comment="" caption="Coverage A Dwelling Private Loss Surcharge Calc">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="CoverageADwellingInput.Indicator" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="CoverageADwellingOutput.BasePremium" type="float" />
                            <argument op="add" idref="LossSurchargeOutput.Amount" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </private>
                  <private id="CoverageADwellingPrivate.NewHomeDsctCalc" type="float" comment="" caption="Coverage A Dwelling Private Loss Surcharge Calc">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="CoverageADwellingInput.Indicator" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="CoverageADwellingPrivate.WoodStoveSurchargeCalc" type="float" />
                            <argument op="add" idref="NewHomeDiscountOutput.Amount" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </private>
                  <private id="CoverageADwellingPrivate.NonSmokerDsctCalc" type="float" comment="" caption="Coverage A Dwelling Private Loss Surcharge Calc">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="CoverageADwellingInput.Indicator" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="CoverageADwellingPrivate.NewHomeDsctCalc" type="float" />
                            <argument op="add" idref="NonSmokerDiscountOutput.Amount" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </private>
                  <private id="CoverageADwellingPrivate.ProtectiveDeviceDsctCalc" type="float" comment="" caption="Coverage A Dwelling Private Loss Surcharge Calc">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="CoverageADwellingInput.Indicator" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="CoverageADwellingPrivate.ReplacementCostContentsCalc" type="float" />
                            <argument op="add" idref="ProtectiveDeviceDiscountOutput.Amount" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </private>
                  <private id="CoverageADwellingPrivate.ReplacementCostContentsCalc" type="float" comment="" caption="Coverage A Dwelling Private Loss Surcharge Calc">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="CoverageADwellingInput.Indicator" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="CoverageADwellingPrivate.CovCHO3Calc" type="float" />
                            <argument op="add" idref="ReplacementCostContentsOutput.Amount" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </private>
                  <private id="CoverageADwellingPrivate.WoodStoveSurchargeCalc" type="float" comment="" caption="Coverage A Dwelling Private Loss Surcharge Calc">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="CoverageADwellingInput.Indicator" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="CoverageADwellingPrivate.InflationGuardCalc" type="float" />
                            <argument op="add" idref="WoodStoveSurchargeOutput.Amount" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </private>
                </object>
              </object>
              <object id="CoverageBOtherStructures" path="coverage[Type=&quot;COB&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="CoverageBOtherStructuresInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="CoverageBOtherStructuresInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Coverage B Other Structures Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="and">
                          <comparison compare="gt">
                            <operand idref="CoverageBOtherStructuresInput.Limit" type="int" />
                            <operand idref="CoverageBOtherStructuresPrivate.IncludedLimit" type="int" />
                          </comparison>
                          <operand idref="DwellingPrivate.FormIsDwelling" type="boolean" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="CoverageBOtherStructuresInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Other Structures Limit (B)" />
                      <maxLength idref="MaxLength.iValue" />
                      <formatMask idref="FormatMask.Limit" />
                    </definition>
                    <rules>
                      <misc>
                        <if>
                          <condition idref="DwellingPrivate.FormIsCondoOrTenant" />
                          <then value="0" />
                        </if>
                      </misc>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="lt">
                              <operand idref="CoverageBOtherStructuresInput.Limit" type="int" />
                              <operand idref="CoverageBOtherStructuresPrivate.IncludedLimit" type="int" />
                            </comparison>
                          </condition>
                          <then idref="CoverageBOtherStructuresPrivate.IncludedLimit" />
                        </if>
                      </value>
                    </rules>
                    <worksheet />
                  </public>
                </object>
                <object id="CoverageBOtherStructuresOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="CoverageBOtherStructuresOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Other Structures (B) Premium" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="CoverageBOtherStructuresInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="CoverageBOtherStructuresInput.Limit" type="int" />
                              <argument op="subtract" idref="CoverageBOtherStructuresPrivate.IncludedLimit" type="int" />
                              <argument op="divide" type="int" value="1000" />
                              <argument op="multiply" round="1" roundType="round" idref="CoverageBOtherStructuresPrivate.BaseRate" type="int" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="CoverageBOtherStructuresOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Coverage B Other Structures Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="CoverageBOtherStructuresOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="CoverageBOtherStructuresOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Coverage B Other Structures Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                  <public id="CoverageBOtherStructuresOutput.IncludedLimit" path="IncludedLimit" type="int">
                    <definition>
                      <caption value="Included Limit" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.Premium" />
                    </definition>
                    <rules>
                      <value idref="CoverageBOtherStructuresPrivate.IncludedLimit" />
                    </rules>
                  </public>
                  <object id="CoverageBOtherStructuresOutputNonShredded">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="CoverageBOtherStructuresOutputNonShredded.Name" path="Name" type="string">
                      <definition>
                        <caption value="Cov B Name" />
                        <readOnly idref="True" />
                      </definition>
                      <rules>
                        <value value="Other Structures" />
                      </rules>
                    </public>
                  </object>
                </object>
                <object id="CoverageBOtherStructuresPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="CoverageBOtherStructuresPrivate.IncludedLimit" caption="" type="int">
                    <value>
                      <calculation>
                        <argument op="eq" idref="CoverageADwellingInput.Limit" type="int" />
                        <argument op="multiply" round="1" roundType="round" idref="CoverageBOtherStructuresPrivate.IncludedLimitFactor" type="float" />
                      </calculation>
                    </value>
                    <worksheet>
                      <caption value="Other Structures B Included Limit" />
                    </worksheet>
                  </private>
                  <private id="CoverageBOtherStructuresPrivate.IncludedLimitFactor" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="CoverageInformation" />
                        <fieldRef value="IncludedFactor" />
                        <keyRef type="string" value="Other Structures" name="Coverage" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Other Structures B Included Limit Factor" />
                    </worksheet>
                  </private>
                  <private id="CoverageBOtherStructuresPrivate.BaseRate" caption="" type="int">
                    <value>
                      <lookup>
                        <tableRef value="CoverageInformation" />
                        <fieldRef value="Rate" />
                        <keyRef type="string" value="Other Structures" name="Coverage" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Other Structures B Base Rate" />
                    </worksheet>
                  </private>
                  <private id="CoverageBOtherStructuresPrivate.ResetCoverageBLimit" caption="" type="string">
                    <value value="" />
                    <affects>
                      <reference idref="CoverageBOtherStructuresInput.Limit" effect="setValue" />
                    </affects>
                  </private>
                </object>
              </object>
              <object id="CoverageCPersonalPropertyHO3" path="coverage[Type=&quot;COC&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="CoverageCPersonalPropertyHO3Input">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="CoverageCPersonalPropertyHO3Input.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Coverage C Personal Property HO3 Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="and">
                          <comparison compare="ne">
                            <operand idref="CoverageCPersonalPropertyHO3Input.Limit" type="int" />
                            <operand idref="CoverageCPersonalPropertyHO3Private.IncludedLimit" type="int" />
                          </comparison>
                          <operand idref="DwellingPrivate.FormIsDwelling" type="boolean" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="CoverageCPersonalPropertyHO3Input.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Personal Property Limit (C)" />
                      <maxLength idref="MaxLength.iValue" />
                      <formatMask idref="FormatMask.Limit" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="and">
                              <comparison compare="lt">
                                <operand idref="CoverageCPersonalPropertyHO3Input.Limit" type="int" />
                                <operand idref="CoverageCPersonalPropertyHO3Private.MinimumLimit" type="float" />
                              </comparison>
                              <comparison compare="eq">
                                <operand idref="DwellingPrivate.FormIsCondoOrTenant" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                            </comparison>
                          </condition>
                          <then idref="CoverageCPersonalPropertyHO3Private.MinimumLimit" />
                        </if>
                      </value>
                      <default idref="CoverageCPersonalPropertyHO3Private.IncludedLimit" />
                    </rules>
                    <worksheet />
                  </public>
                </object>
                <object id="CoverageCPersonalPropertyHO3Output">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="CoverageCPersonalPropertyHO3Output.Amount" path="Amount" type="float">
                    <definition>
                      <caption value="Personal Property (C) Premium" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="CoverageCPersonalPropertyHO3Input.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq">
                                <calculation>
                                  <argument op="eq">
                                    <calculation>
                                      <argument op="eq" idref="CoverageCPersonalPropertyHO3Input.Limit" type="int" />
                                      <argument op="subtract" idref="CoverageCPersonalPropertyHO3Private.IncludedLimit" type="int" />
                                    </calculation>
                                  </argument>
                                  <argument op="divide" type="int" value="1000" />
                                </calculation>
                              </argument>
                              <argument op="multiply" round="1" roundType="round" idref="CoverageCPersonalPropertyHO3Private.BaseRate" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                      <affects>
                        <reference idref="CoverageCPersonalPropertyHO3Private.SetAdjustedBaseRate" effect="postEffect" />
                      </affects>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="CoverageCPersonalPropertyHO3Output.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Coverage C Personal Property Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="CoverageCPersonalPropertyHO3Output.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="CoverageCPersonalPropertyHO3Output.PremiumCharge" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Coverage C Personal Property HO3 Premium Charge" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                  <public id="CoverageCPersonalPropertyHO3Output.IncludedLimit" path="IncludedLimit" type="int">
                    <definition>
                      <caption value="Included Limit" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.Premium" />
                    </definition>
                    <rules>
                      <value idref="CoverageCPersonalPropertyHO3Private.IncludedLimit" />
                    </rules>
                  </public>
                  <object id="CoverageCPersonalPropertyHO3OutputNonShredded">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="CoverageCPersonalPropertyHO3OutputNonShredded.Name" path="Name" type="string">
                      <definition>
                        <caption value="Cov C Name" />
                        <readOnly idref="True" />
                      </definition>
                      <rules>
                        <value value="Personal Property" />
                      </rules>
                    </public>
                    <public id="CoverageCPersonalPropertyHO3OutputNonShredded.IncludedInCovAText" path="IncludedInCovAText" type="string">
                      <definition>
                        <caption value="Included In Cov A Text" />
                        <readOnly idref="True" />
                      </definition>
                      <rules>
                        <value value="Included In Dwelling" />
                      </rules>
                    </public>
                  </object>
                  <public id="CoverageCPersonalPropertyHO3Output.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Coverage C Personal Property HO3 Output Premium" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="or">
                              <comparison compare="eq">
                                <operand idref="CoverageCPersonalPropertyHO3Input.Indicator" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                              <operand idref="CoverageCPersonalPropertyHO3Private.IsIncludedInBase" type="boolean" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="CoverageCPersonalPropertyHO3Output.Amount" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                </object>
                <object id="CoverageCPersonalPropertyHO3Private">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="CoverageCPersonalPropertyHO3Private.BaseRate" caption="" type="float">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="lt">
                            <operand idref="CoverageCPersonalPropertyHO3Input.Limit" type="int" />
                            <operand idref="CoverageCPersonalPropertyHO3Private.IncludedLimit" type="int" />
                          </comparison>
                        </condition>
                        <then idref="CoverageCPersonalPropertyHO3Private.ReducedRate" />
                        <else idref="CoverageCPersonalPropertyHO3Private.IncreasedRate" />
                      </if>
                    </value>
                    <worksheet>
                      <caption value="Other Structures B Base Rate" />
                    </worksheet>
                  </private>
                  <private id="CoverageCPersonalPropertyHO3Private.IncludedLimit" caption="" type="int">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="DwellingPrivate.FormIsDwelling" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="CoverageADwellingInput.Limit" type="int" />
                            <argument op="multiply" round="1" roundType="round" idref="CoverageCPersonalPropertyHO3Private.IncludedLimitFactor" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                    <worksheet>
                      <caption value="Other Structures Included Limit B" />
                    </worksheet>
                  </private>
                  <private id="CoverageCPersonalPropertyHO3Private.IncludedLimitFactor" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="PersonalPropertyInformation" />
                        <fieldRef value="IncludedFactor" />
                        <keyRef idref="DwellingInput.Form" type="string" name="Form" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Personal Property Included Limit Factor (C)" />
                    </worksheet>
                  </private>
                  <private id="CoverageCPersonalPropertyHO3Private.MinimumLimit" caption="" type="float">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="and">
                            <comparison compare="eq">
                              <operand idref="DwellingPrivate.FormIsHO2" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                            <comparison compare="eq">
                              <operand idref="DwellingPrivate.FormIsHO3" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </comparison>
                        </condition>
                        <then idref="CoverageCPersonalPropertyHO3Private.IncludedLimit" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="CoverageADwellingInput.Limit" type="int" />
                            <argument op="multiply" round="1" roundType="round" idref="CoverageCPersonalPropertyHO3Private.MinimumLimitFactor" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </private>
                  <private id="CoverageCPersonalPropertyHO3Private.MinimumLimitFactor" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="PersonalPropertyInformation" />
                        <fieldRef value="MinimumFactor" />
                        <keyRef idref="DwellingInput.Form" type="string" name="Form" />
                      </lookup>
                    </value>
                  </private>
                  <private id="CoverageCPersonalPropertyHO3Private.IncreasedRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="PersonalPropertyInformation" />
                        <fieldRef value="IncreasedRate" />
                        <keyRef idref="DwellingInput.Form" type="string" name="Form" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Other Structures B Increased Rate" />
                    </worksheet>
                  </private>
                  <private id="CoverageCPersonalPropertyHO3Private.ReducedRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="PersonalPropertyInformation" />
                        <fieldRef value="ReducedRate" />
                        <keyRef idref="DwellingInput.Form" type="string" name="Form" />
                      </lookup>
                    </value>
                  </private>
                  <private id="CoverageCPersonalPropertyHO3Private.MaximumLimit" caption="" type="float">
                    <value>
                      <if>
                        <condition idref="DwellingPrivate.FormIsHO8" />
                        <then idref="CoverageCPersonalPropertyHO3Private.IncludedLimit" />
                      </if>
                    </value>
                  </private>
                  <private id="CoverageCPersonalPropertyHO3Private.SetAdjustedBaseRate" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" type="float" />
                        <argument op="add" idref="CoverageCPersonalPropertyHO3Output.Amount" type="float" />
                      </calculation>
                    </value>
                    <affects>
                      <reference idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" effect="setValue" />
                    </affects>
                  </private>
                  <private id="CoverageCPersonalPropertyHO3Private.IsIncludedInBase" caption="" type="boolean">
                    <value idref="True" />
                  </private>
                  <private id="CoverageCPersonalPropertyHO3Private.ResetCoverageCLimit" caption="" type="string">
                    <value value="" />
                    <affects>
                      <reference idref="CoverageCPersonalPropertyHO3Input.Limit" effect="setValue" />
                    </affects>
                  </private>
                </object>
              </object>
              <object id="CoverageCPersonalPropertyHO46" path="coverage[Type=&quot;PersonalPropertyCondoOrTenant&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="CoverageCPersonalPropertyHO46Input">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="CoverageCPersonalPropertyHO46Input.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Coverage C Personal Property HO46 Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison idref="DwellingPrivate.FormIsCondoOrTenant" type="boolean" />
                      </value>
                    </rules>
                  </public>
                  <public id="CoverageCPersonalPropertyHO46Input.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Personal Property Limit" />
                      <required>
                        <comparison idref="DwellingPrivate.FormIsCondoOrTenant" type="boolean" />
                      </required>
                      <maxLength idref="MaxLength.iValue" />
                      <formatMask idref="FormatMask.Limit" />
                    </definition>
                    <rules>
                      <minimum>
                        <if>
                          <condition idref="DwellingPrivate.FormIsCondoOrTenant" />
                          <then idref="CoverageCPersonalPropertyHO46Private.MinimumLimit" />
                        </if>
                      </minimum>
                      <affects>
                        <reference idref="CoverageDLossOfUsePrivate.ResetCoverageDLimit" effect="onChange" />
                      </affects>
                    </rules>
                    <worksheet>
                      <caption value="Cov C Limit" />
                    </worksheet>
                  </public>
                </object>
                <object id="CoverageCPersonalPropertyHO46Output">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="CoverageCPersonalPropertyHO46Output.BasePremium" path="BasePremium" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Personal Property Base Premium" />
                      <formatMask idref="FormatMask.Premium" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="CoverageCPersonalPropertyHO46Input.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="CoverageCPersonalPropertyHO46Private.BasePremiumBeforeCoverage" type="float" />
                              <argument op="add" idref="SpecialPersonalPropertyCoverageOutput.Amount" type="float" />
                              <argument op="add" idref="FireResistiveDiscountOutput.Amount" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                      <affects>
                        <reference idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" effect="setValue" />
                      </affects>
                    </rules>
                  </public>
                  <public id="CoverageCPersonalPropertyHO46Output.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Coverage C Personal Property Premium" />
                      <maxLength idref="MaxLength.Premium" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition idref="DwellingPrivate.FormIsHO4" />
                          <then idref="CoverageCPersonalPropertyHO46Private.PremiumHO4" />
                          <else idref="CoverageCPersonalPropertyHO46Private.PremiumHO6" />
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="CoverageCPersonalPropertyHO46Output.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Coverage C Personal Property Premium Written" />
                      <maxLength idref="MaxLength.Premium" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="CoverageCPersonalPropertyHO46Output.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="CoverageCPersonalPropertyHO46Output.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Coverage C Personal Property Premium Change" />
                      <maxLength idref="MaxLength.Premium" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                    </definition>
                  </public>
                </object>
                <object id="CoverageCPersonalPropertyHO46Private">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="CoverageCPersonalPropertyHO46Private.BaseRate" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="BaseRates" />
                        <fieldRef value="Rate" />
                        <keyRef idref="DwellingOutput.RatedTerritory" type="string" name="Territory" />
                        <keyRef idref="DwellingInput.Form" type="string" name="Form" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Coverage C Personal Property Base Rate" />
                    </worksheet>
                  </private>
                  <private id="CoverageCPersonalPropertyHO46Private.KeyFactor" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="KeyFactorsHO46" />
                        <fieldRef value="Factor" />
                        <keyRef idref="CoverageCPersonalPropertyHO46Input.Limit" type="int" name="Limit" />
                        <keyRef idref="DwellingInput.Form" type="string" name="Form" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Coverage C Personal Property Key Factor" />
                    </worksheet>
                  </private>
                  <private id="CoverageCPersonalPropertyHO46Private.EachAdditionalFactor" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="KeyFactorsEachAdditional" />
                        <fieldRef value="Factor" />
                        <keyRef idref="DwellingInput.Form" type="string" name="Form" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Coverage C Personal Property Each Additional Factor" />
                    </worksheet>
                  </private>
                  <private id="CoverageCPersonalPropertyHO46Private.BasePremiumBeforeCoverage" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="CoverageCPersonalPropertyHO46Private.KeyPremium" type="float" />
                        <argument op="multiply" round="1" roundType="round" idref="CoverageCPersonalPropertyHO46Private.KeyFactor" type="float" />
                      </calculation>
                    </value>
                    <affects>
                      <reference idref="DwellingOutputNonShredded.BasePremiumAccumulativeValue" effect="setValue" />
                    </affects>
                  </private>
                  <private id="CoverageCPersonalPropertyHO46Private.PremiumHO4" type="float" comment="" class="excludeInChangeSummary">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="ne">
                            <operand idref="DwellingInput.Form" type="string" />
                            <operand type="string" value="HO4" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="CoverageCPersonalPropertyHO46Output.BasePremium" type="float" />
                            <argument op="add" idref="LossSurchargeOutput.Amount" type="float" />
                            <argument op="add" idref="DwellingOutput.DeductibleCalculation" type="float" />
                            <argument op="add" idref="ReplacementCostContentsOutput.Amount" type="float" />
                            <argument op="add" idref="ProtectiveDeviceDiscountOutput.Amount" type="float" />
                            <argument op="add" idref="WoodStoveSurchargeOutput.Amount" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </private>
                  <private id="CoverageCPersonalPropertyHO46Private.PremiumHO6" type="float" comment="" class="excludeInChangeSummary">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="ne">
                            <operand idref="DwellingInput.Form" type="string" />
                            <operand type="string" value="HO6" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="CoverageCPersonalPropertyHO46Output.BasePremium" type="float" />
                            <argument op="add" idref="LossSurchargeOutput.Amount" type="float" />
                            <argument op="add" idref="DwellingOutput.DeductibleCalculation" type="float" />
                            <argument op="add" idref="ReplacementCostContentsOutput.Amount" type="float" />
                            <argument op="add" idref="ProtectiveDeviceDiscountOutput.Amount" type="float" />
                            <argument op="add" idref="WoodStoveSurchargeOutput.Amount" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </private>
                  <private id="CoverageCPersonalPropertyHO46Private.MinimumLimit" caption="" type="int">
                    <value value="10000" />
                  </private>
                  <private id="CoverageCPersonalPropertyHO46Private.KeyPremium" type="float" comment="" path="KeyPremium">
                    <value>
                      <calculation>
                        <argument op="eq" idref="CoverageCPersonalPropertyHO46Private.BaseRate" type="float" />
                        <argument op="multiply" round="100" roundType="round" idref="CoverageADwellingPrivate.FormFactor" type="float" />
                        <argument op="multiply" round="1" roundType="round" idref="CoverageADwellingPrivate.ProtectionConstructionFactor" type="float" />
                      </calculation>
                    </value>
                    <affects>
                      <reference idref="CoverageCPersonalPropertyHO46Input.Limit" effect="postEffect" />
                    </affects>
                  </private>
                  <private id="CoverageCPersonalPropertyHO46Private.ClearCoverageCHO46Premiums" caption="" type="float">
                    <value value="0" />
                    <affects>
                      <reference idref="CoverageCPersonalPropertyHO46Output.Premium" effect="setValue" />
                      <reference idref="CoverageCPersonalPropertyHO46Output.PremiumChange" effect="setValue" />
                      <reference idref="CoverageCPersonalPropertyHO46Output.PremiumWritten" effect="setValue" />
                      <reference idref="CoverageCPersonalPropertyHO46Input.Indicator" effect="setValue" />
                    </affects>
                  </private>
                </object>
              </object>
              <object id="CoverageDLossOfUse" path="coverage[Type=&quot;COD&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="CoverageDLossOfUseInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="CoverageDLossOfUseInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Coverage D Loss Of Use Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="gt">
                          <operand idref="CoverageDLossOfUseInput.Limit" type="int" />
                          <operand idref="CoverageDLossOfUsePrivate.IncludedLimit" type="float" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="CoverageDLossOfUseInput.Limit" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                    <definition>
                      <caption value="Loss of Use Limit (D)" />
                      <maxLength idref="MaxLength.iValue" />
                      <formatMask idref="FormatMask.Limit" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="lt">
                              <operand idref="CoverageDLossOfUseInput.Limit" type="int" />
                              <operand idref="CoverageDLossOfUsePrivate.IncludedLimit" type="float" />
                            </comparison>
                          </condition>
                          <then idref="CoverageDLossOfUsePrivate.IncludedLimit" />
                        </if>
                      </value>
                      <maximum>
                        <if>
                          <condition idref="DwellingPrivate.FormIsHO8" />
                          <then idref="CoverageDLossOfUsePrivate.MaximumLimit" />
                        </if>
                      </maximum>
                    </rules>
                    <worksheet>
                      <caption value="Loss of Use Limit" />
                    </worksheet>
                  </public>
                </object>
                <object id="CoverageDLossOfUseOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="CoverageDLossOfUseOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Loss of Use (D) Premium" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="CoverageDLossOfUseInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="CoverageDLossOfUseInput.Limit" type="int" />
                              <argument op="subtract" idref="CoverageDLossOfUsePrivate.IncludedLimit" type="float" />
                              <argument op="divide" type="int" value="1000" />
                              <argument op="multiply" round="1" roundType="round" idref="CoverageDLossOfUsePrivate.BaseRate" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="CoverageDLossOfUseOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Coverage D Loss Of Use Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="CoverageDLossOfUseOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="CoverageDLossOfUseOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Coverage D Loss Of Use Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                  <public id="CoverageDLossOfUseOutput.IncludedLimit" path="IncludedLimit" type="int">
                    <definition>
                      <caption value="Included Limit" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.Premium" />
                    </definition>
                    <rules>
                      <value idref="CoverageDLossOfUsePrivate.IncludedLimit" />
                    </rules>
                  </public>
                  <object id="CoverageDLossOfUseOutputNonShredded">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="CoverageDLossOfUseOutputNonShredded.Name" path="Name" type="string">
                      <definition>
                        <caption value="Cov D Name" />
                        <readOnly idref="True" />
                      </definition>
                      <rules>
                        <value value="Loss Of Use" />
                      </rules>
                    </public>
                  </object>
                </object>
                <object id="CoverageDLossOfUsePrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="CoverageDLossOfUsePrivate.BaseRateHO3" caption="" type="int">
                    <value>
                      <lookup>
                        <tableRef value="LossOfUseInformation" />
                        <manuscriptName idref="RiskManuscript.ManuScriptID" />
                        <fieldRef value="Rate" />
                        <keyRef idref="DwellingInput.Form" type="string" name="Form" />
                      </lookup>
                    </value>
                  </private>
                  <private id="CoverageDLossOfUsePrivate.IncludedLimitFactor" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="LossOfUseInformation" />
                        <fieldRef value="IncludedFactor" />
                        <keyRef idref="DwellingInput.Form" type="string" name="Form" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Included Limit Factor" />
                    </worksheet>
                  </private>
                  <private id="CoverageDLossOfUsePrivate.IncludedLimit" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="DwellingPrivate.BaseLimit" type="float" />
                        <argument op="multiply" round="1" roundType="round" idref="CoverageDLossOfUsePrivate.IncludedLimitFactor" type="float" />
                      </calculation>
                    </value>
                    <worksheet>
                      <caption value="Included Limit" />
                    </worksheet>
                  </private>
                  <private id="CoverageDLossOfUsePrivate.BaseRateHO46" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="CoverageCPersonalPropertyHO46Private.KeyPremium" type="float" />
                        <argument op="multiply" idref="CoverageCPersonalPropertyHO46Private.EachAdditionalFactor" type="float" />
                      </calculation>
                    </value>
                  </private>
                  <private id="CoverageDLossOfUsePrivate.BaseRate" caption="" type="float">
                    <value>
                      <if>
                        <condition idref="DwellingPrivate.FormIsDwelling" />
                        <then idref="CoverageDLossOfUsePrivate.BaseRateHO3" />
                        <else idref="CoverageDLossOfUsePrivate.BaseRateHO46" />
                      </if>
                    </value>
                    <worksheet suppress="1">
                      <caption value="Cov D Base Rate" />
                    </worksheet>
                  </private>
                  <private id="CoverageDLossOfUsePrivate.MaximumLimit" caption="" type="float">
                    <value>
                      <if>
                        <condition idref="DwellingPrivate.FormIsHO8" />
                        <then idref="CoverageDLossOfUsePrivate.IncludedLimit" />
                      </if>
                    </value>
                  </private>
                  <private id="CoverageDLossOfUsePrivate.ResetCoverageDLimit" caption="" type="string">
                    <value value="" />
                    <affects>
                      <reference idref="CoverageDLossOfUseInput.Limit" effect="setValue" />
                    </affects>
                  </private>
                </object>
              </object>
              <object id="CoverageELiability" path="coverage[Type=&quot;COE&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="CoverageELiabilityInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="CoverageELiabilityInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Coverage E Liability Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="ne">
                          <operand idref="CoverageELiabilityInput.Limit" type="string" />
                          <operand type="int" value="0" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="CoverageELiabilityInput.Limit" path="limit[Type=&quot;Standard&quot;]/sValue" type="string" override="1">
                    <definition>
                      <caption value="Personal Liability Limit (E)" />
                      <options>
                        <option value="0" caption="No Coverage" validRef="DwellingPrivate.UseTypeIsNotPrimary" />
                        <option value="100000" caption="$100,000" />
                        <option value="200000" caption="$200,000" />
                        <option value="300000" caption="$300,000" />
                        <option value="400000" caption="$400,000" />
                        <option value="500000" caption="$500,000" />
                        <option value="1000000" caption="$1,000,000" validRef="CoverageELiabilityPrivate.Limit1000000IsAvailable" />
                      </options>
                      <maxLength value="7" />
                      <readOnly>
                        <comparison idref="LinePrivate.IsCoveragePackageNotCustom" type="boolean" />
                      </readOnly>
                    </definition>
                    <rules>
                      <misc>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="CoverageELiabilityInput.Limit" type="string" />
                              <operand type="string" value="N" />
                            </comparison>
                          </condition>
                          <then value="0" />
                        </if>
                        <if>
                          <condition>
                            <comparison compare="and">
                              <comparison compare="eq">
                                <operand idref="DwellingInput.UseType" type="string" />
                                <operand type="string" value="Primary" />
                              </comparison>
                              <comparison compare="eq">
                                <operand idref="CoverageELiabilityInput.Limit" type="string" />
                                <operand type="int" value="0" />
                              </comparison>
                            </comparison>
                          </condition>
                          <then value="100000" />
                        </if>
                      </misc>
                      <default value="100000" />
                      <minimum idref="CoverageELiabilityPrivate.MinimumLimit" />
                    </rules>
                  </public>
                </object>
                <object id="CoverageELiabilityOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="CoverageELiabilityOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Personal Liability (E) Premium" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="CoverageELiabilityInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="CoverageELiabilityPrivate.BaseRate" type="float" />
                              <argument op="multiply" idref="CoverageELiabilityPrivate.LiabilityLimitFactor" type="float" />
                              <argument op="multiply" round="1" roundType="round" type="int" value="1" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="CoverageELiabilityOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Coverage E Liability Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="CoverageELiabilityOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="CoverageELiabilityOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Coverage E Liability Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                </object>
                <object id="CoverageELiabilityPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="CoverageELiabilityPrivate.BaseRate" type="float" comment="" alwaysRun="1">
                    <value>
                      <lookup>
                        <tableRef value="LiabilityRates" />
                        <fieldRef value="Rate" />
                        <keyRef idref="CoverageELiabilityInput.Limit" type="string" name="Liability Limit" />
                        <keyRef idref="DwellingInput.NumberOfFamilies" type="int" name="Number of Families" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Personal Liability E Base Rate" />
                    </worksheet>
                  </private>
                  <private id="CoverageELiabilityPrivate.LiabilityLimitFactor" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="LiabilityLimitFactors" />
                        <fieldRef value="Factor" />
                        <keyRef idref="CoverageELiabilityInput.Limit" type="string" name="Liability Limit" />
                        <keyRef idref="LineInput.Tier" type="string" name="Tier" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Personal Liability Limit Factor E" />
                    </worksheet>
                  </private>
                  <private id="CoverageELiabilityPrivate.MinimumLimit" caption="" type="float">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="LinePrivate.TierIsPreferred" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </condition>
                        <then value="300000" />
                        <else value="100000" />
                      </if>
                    </value>
                  </private>
                  <private id="CoverageELiabilityPrivate.Limit1000000IsAvailable" caption="" type="boolean">
                    <value>
                      <comparison compare="le">
                        <operand idref="DwellingInput.NumberOfFamilies" type="int" />
                        <operand type="int" value="2" />
                      </comparison>
                    </value>
                  </private>
                </object>
              </object>
              <object id="CoverageFMedical" path="coverage[Type=&quot;COF&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="CoverageFMedicalInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="CoverageFMedicalInput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Coverage F Medical Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="gt">
                          <operand idref="CoverageFMedicalInput.Limit" type="string" />
                          <operand type="int" value="0" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="CoverageFMedicalInput.Limit" path="limit[Type=&quot;Standard&quot;]/sValue" type="string" override="1">
                    <definition>
                      <caption value="Medical Payments Limit(s) (F)" />
                      <options>
                        <option value="0" caption="No Coverage" validRef="DwellingPrivate.UseTypeIsNotPrimary" />
                        <option value="1000" caption="$1,000" />
                        <option value="2000" caption="$2,000" />
                        <option value="3000" caption="$3,000" />
                        <option value="4000" caption="$4,000" />
                        <option value="5000" caption="$5,000" />
                      </options>
                      <maxLength value="4" />
                      <readOnly>
                        <comparison idref="LinePrivate.IsCoveragePackageNotCustom" type="boolean" />
                      </readOnly>
                    </definition>
                    <rules>
                      <default value="1000" />
                      <misc>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="CoverageFMedicalInput.Limit" type="string" />
                              <operand type="string" value="N" />
                            </comparison>
                          </condition>
                          <then value="0" />
                        </if>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="CoverageELiabilityInput.Limit" type="string" />
                              <operand type="int" value="0" />
                            </comparison>
                          </condition>
                          <then value="0" />
                        </if>
                        <if>
                          <condition>
                            <comparison compare="and">
                              <comparison compare="ne">
                                <operand idref="CoverageELiabilityInput.Limit" type="string" />
                                <operand type="int" value="0" />
                              </comparison>
                              <comparison compare="eq">
                                <operand idref="CoverageFMedicalInput.Limit" type="string" />
                                <operand type="int" value="0" />
                              </comparison>
                            </comparison>
                          </condition>
                          <then value="1000" />
                        </if>
                      </misc>
                    </rules>
                  </public>
                </object>
                <object id="CoverageFMedicalOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="CoverageFMedicalOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                    <definition>
                      <caption value="Medical Payments (F) Premium" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="CoverageFMedicalInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="CoverageFMedicalPrivate.BaseRate" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="CoverageFMedicalOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Coverage F Medical Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="CoverageFMedicalOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="CoverageFMedicalOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Coverage F Medical Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                </object>
                <object id="CoverageFMedicalPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="CoverageFMedicalPrivate.BaseRate" type="float" comment="">
                    <value>
                      <lookup>
                        <tableRef value="MedicalRates" />
                        <fieldRef value="Rate" />
                        <keyRef idref="CoverageFMedicalInput.Limit" type="string" name="Medical Limit" />
                      </lookup>
                    </value>
                    <worksheet>
                      <caption value="Medical Payments F Base Rate" />
                    </worksheet>
                  </private>
                </object>
              </object>
              <object id="RiskCreditsAndSurcharges" path="riskCreditsAndSurcharges">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="ThreeAndFourFamilySurcharge" path="creditOrSurcharge[Type=&quot;ThreeAndFourFamily&quot;]">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <object id="ThreeAndFourFamilySurchargeInput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="ThreeAndFourFamilySurchargeInput.Indicator" type="boolean" comment="" path="Indicator">
                      <rules>
                        <value>
                          <comparison compare="and">
                            <operand idref="DwellingPrivate.FormIsDwelling" type="boolean" />
                            <comparison compare="ge">
                              <operand idref="DwellingInput.NumberOfFamilies" type="int" />
                              <operand type="int" value="3" />
                            </comparison>
                          </comparison>
                        </value>
                      </rules>
                      <definition>
                        <caption value="Three and Four Family Surcharge" />
                      </definition>
                    </public>
                  </object>
                  <object id="ThreeAndFourFamilySurchargeOutput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="ThreeAndFourFamilySurchargeOutput.Amount" path="Amount" type="float">
                      <rules>
                        <value>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="ThreeAndFourFamilySurchargeInput.Indicator" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                            </condition>
                            <then value="0" />
                            <else>
                              <calculation>
                                <argument op="eq" idref="DwellingOutputNonShredded.BasePremiumAccumulativeValue" type="float" />
                                <argument op="multiply" round="1" roundType="round" idref="ThreeAndFourFamilySurchargePrivate.Factor" type="float" />
                              </calculation>
                            </else>
                          </if>
                        </value>
                        <affects>
                          <reference idref="ThreeAndFourFamilySurchargePrivate.SetBasePremium" effect="postEffect" />
                        </affects>
                      </rules>
                      <definition>
                        <caption value="Three And Four Family Surcharge" />
                        <formatMask idref="FormatMask.PremiumPennies" />
                        <readOnly idref="True" />
                        <maxLength idref="MaxLength.Premium" />
                      </definition>
                      <worksheet>
                        <summarize idref="True" />
                      </worksheet>
                    </public>
                  </object>
                  <object id="ThreeAndFourFamilySurchargePrivate">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="ThreeAndFourFamilySurchargePrivate.Factor" caption="" type="float" override="1">
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="ThreeAndFourFamilySurchargeInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <lookup>
                              <tableRef value="DiscountSurchargeFactors" />
                              <fieldRef value="Value" />
                              <keyRef type="string" value="ThreeAndFourFamily" name="Surcharge" />
                            </lookup>
                          </else>
                        </if>
                      </value>
                      <worksheet>
                        <caption value="Three And Four Family Surcharge Factor" />
                      </worksheet>
                    </private>
                    <private id="ThreeAndFourFamilySurchargePrivate.SetBasePremium" caption="" type="float">
                      <value>
                        <calculation>
                          <argument op="eq" idref="DwellingOutputNonShredded.BasePremiumAccumulativeValue" type="float" />
                          <argument op="add" idref="ThreeAndFourFamilySurchargeOutput.Amount" type="float" />
                        </calculation>
                      </value>
                      <affects>
                        <reference idref="DwellingOutputNonShredded.BasePremiumAccumulativeValue" effect="setValue" />
                      </affects>
                    </private>
                  </object>
                </object>
                <object id="TownhouseRowhouseSurcharge" path="creditOrSurcharge[Type=&quot;TownhouseRowhouse&quot;]">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <object id="TownhouseRowhouseSurchargeOutput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="TownhouseRowhouseSurchargeOutput.Amount" path="Amount" type="float">
                      <rules>
                        <value>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="TownhouseRowhouseSurchargeInput.Indicator" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                            </condition>
                            <then value="0" />
                            <else>
                              <calculation>
                                <argument op="eq" idref="DwellingOutputNonShredded.BasePremiumAccumulativeValue" type="float" />
                                <argument op="multiply">
                                  <calculation>
                                    <argument op="eq" idref="TownhouseRowhouseSurchargePrivate.Factor" type="float" />
                                    <argument op="subtract" type="int" value="1" />
                                  </calculation>
                                </argument>
                                <argument op="multiply" round="1" roundType="round" type="int" value="1" />
                              </calculation>
                            </else>
                          </if>
                        </value>
                        <affects>
                          <reference idref="TownhouseRowhouseSurchargePrivate.SetBasePremium" effect="postEffect" />
                        </affects>
                      </rules>
                      <definition>
                        <caption value="Townhouse Or Row House Surcharge" />
                        <formatMask idref="FormatMask.PremiumPennies" />
                        <readOnly idref="True" />
                        <maxLength idref="MaxLength.Premium" />
                      </definition>
                      <worksheet>
                        <summarize idref="True" />
                      </worksheet>
                    </public>
                  </object>
                  <object id="TownhouseRowhouseSurchargePrivate">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="TownhouseRowhouseSurchargePrivate.Factor" caption="" type="float" override="1">
                      <value>
                        <if>
                          <condition>
                            <comparison compare="or">
                              <comparison compare="contains">
                                <operand idref="DwellingInput.RatedProtectionClass" type="string" />
                                <operand type="string" value="/" />
                              </comparison>
                              <comparison compare="eq">
                                <operand idref="TownhouseRowhouseSurchargeInput.Indicator" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <lookup>
                              <tableRef value="TownhouseRowhouseSurchargeFactors" />
                              <fieldRef value="Factor" />
                              <keyRef idref="DwellingInput.NumberOfFamilies" type="int" name="Number Of Families" />
                              <keyRef idref="DwellingInput.RatedProtectionClass" type="string" name="Protection Class" />
                            </lookup>
                          </else>
                        </if>
                      </value>
                      <worksheet>
                        <caption value="Town/Row Surcharge Factor" />
                      </worksheet>
                    </private>
                    <private id="TownhouseRowhouseSurchargePrivate.SetBasePremium" caption="" type="float">
                      <value>
                        <calculation>
                          <argument op="eq" idref="DwellingOutputNonShredded.BasePremiumAccumulativeValue" type="float" />
                          <argument op="add" idref="TownhouseRowhouseSurchargeOutput.Amount" type="float" />
                        </calculation>
                      </value>
                      <affects>
                        <reference idref="DwellingOutputNonShredded.BasePremiumAccumulativeValue" effect="setValue" />
                      </affects>
                    </private>
                  </object>
                  <object id="TownhouseRowhouseSurchargeInput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="TownhouseRowhouseSurchargeInput.Indicator" type="boolean" comment="" path="Indicator">
                      <rules>
                        <value>
                          <comparison compare="and">
                            <comparison compare="and">
                              <comparison compare="is">
                                <operand idref="DwellingInput.BuildingType" type="string" />
                                <operand type="string" value="Townhouse,Rowhouse" />
                              </comparison>
                              <operand idref="DwellingPrivate.FormIsDwelling" type="boolean" />
                            </comparison>
                            <comparison compare="le">
                              <operand idref="DwellingInput.NumberOfFamilies" type="int" />
                              <operand type="int" value="8" />
                            </comparison>
                          </comparison>
                        </value>
                      </rules>
                      <definition>
                        <caption value="Townhouse Rowhouse Surcharge" />
                      </definition>
                    </public>
                  </object>
                </object>
                <object id="WoodStoveSurcharge" path="creditOrSurcharge[Type=&quot;WoodStove&quot;]">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <object id="WoodStoveSurchargeOutput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="WoodStoveSurchargeOutput.Amount" path="Amount" type="float">
                      <rules>
                        <value>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="WoodStoveSurchargeInput.Indicator" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                            </condition>
                            <then value="0" />
                            <else>
                              <calculation>
                                <argument op="eq" idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" type="float" />
                                <argument op="multiply" round="1" roundType="round" idref="WoodStoveSurchargePrivate.Factor" type="float" />
                              </calculation>
                            </else>
                          </if>
                        </value>
                        <affects>
                          <reference idref="WoodStoveSurchargePrivate.SetAdjustedBaseRate" effect="postEffect" />
                        </affects>
                      </rules>
                      <definition>
                        <caption value="Wood Stove Surcharge" />
                        <formatMask idref="FormatMask.PremiumPennies" />
                        <readOnly idref="True" />
                        <maxLength idref="MaxLength.Premium" />
                      </definition>
                      <worksheet>
                        <summarize idref="True" />
                      </worksheet>
                    </public>
                  </object>
                  <object id="WoodStoveSurchargePrivate">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="WoodStoveSurchargePrivate.Factor" caption="" type="float" override="1">
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="WoodStoveSurchargeInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <lookup>
                              <tableRef value="DiscountSurchargeFactors" />
                              <fieldRef value="Value" />
                              <keyRef type="string" value="WoodStove" name="Surcharge" />
                            </lookup>
                          </else>
                        </if>
                      </value>
                      <worksheet>
                        <caption value="Woodstove Factor" />
                      </worksheet>
                    </private>
                    <private id="WoodStoveSurchargePrivate.SetAdjustedBaseRate" caption="" type="float">
                      <value>
                        <calculation>
                          <argument op="eq" idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" type="float" />
                          <argument op="add" idref="WoodStoveSurchargeOutput.Amount" type="float" />
                        </calculation>
                      </value>
                      <affects>
                        <reference idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" effect="setValue" />
                      </affects>
                    </private>
                  </object>
                  <object id="WoodStoveSurchargeInput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="WoodStoveSurchargeInput.Indicator" type="boolean" comment="" path="Indicator">
                      <rules>
                        <value>
                          <comparison compare="gt">
                            <operand idref="DwellingInput.NumberOfWoodStoves" type="int" />
                            <operand type="int" value="0" />
                          </comparison>
                        </value>
                      </rules>
                      <definition>
                        <caption value="Wood Stove Surcharge" />
                      </definition>
                    </public>
                  </object>
                </object>
                <object id="FireResistiveDiscount" path="creditOrSurcharge[Type=&quot;FireResistive&quot;]">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <object id="FireResistiveDiscountOutput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="FireResistiveDiscountOutput.Amount" path="Amount" type="float">
                      <definition>
                        <caption value="Fire Resistive Discount" />
                        <formatMask idref="FormatMask.PremiumPennies" />
                        <readOnly idref="True" />
                        <maxLength idref="MaxLength.Premium" />
                      </definition>
                      <rules>
                        <value>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="FireResistiveDiscountInput.Indicator" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                            </condition>
                            <then value="0" />
                            <else>
                              <calculation>
                                <argument op="eq" idref="DwellingOutputNonShredded.BasePremiumAccumulativeValue" type="float" />
                                <argument op="multiply" round="1" roundType="round" idref="FireResistiveDiscountPrivate.Factor" type="float" />
                                <argument op="multiply" type="int" value="-1" />
                              </calculation>
                            </else>
                          </if>
                        </value>
                        <affects>
                          <reference idref="FireResistiveDiscountPrivate.SetBasePremium" effect="postEffect" />
                        </affects>
                      </rules>
                      <worksheet>
                        <comparison idref="True" type="int" />
                        <summarize idref="True" />
                      </worksheet>
                    </public>
                  </object>
                  <object id="FireResistiveDiscountPrivate">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="FireResistiveDiscountPrivate.Factor" caption="" type="float" override="1">
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="FireResistiveDiscountInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <lookup>
                              <tableRef value="DiscountSurchargeFactors" />
                              <fieldRef value="Value" />
                              <keyRef type="string" value="FireResistive" name="Surcharge" />
                            </lookup>
                          </else>
                        </if>
                      </value>
                      <worksheet>
                        <caption value="Fire Resistive Factor" />
                      </worksheet>
                    </private>
                    <private id="FireResistiveDiscountPrivate.SetBasePremium" caption="" type="float">
                      <value>
                        <calculation>
                          <argument op="eq" idref="DwellingOutputNonShredded.BasePremiumAccumulativeValue" type="float" />
                          <argument op="add" idref="FireResistiveDiscountOutput.Amount" type="float" />
                        </calculation>
                      </value>
                      <affects>
                        <reference idref="DwellingOutputNonShredded.BasePremiumAccumulativeValue" effect="setValue" />
                      </affects>
                    </private>
                  </object>
                  <object id="FireResistiveDiscountInput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="FireResistiveDiscountInput.Indicator" path="Indicator" type="boolean">
                      <definition>
                        <caption value="Indicator" />
                      </definition>
                      <rules>
                        <value>
                          <comparison compare="eq">
                            <operand idref="DwellingInput.Construction" type="string" />
                            <operand type="string" value="Superior" />
                          </comparison>
                        </value>
                      </rules>
                    </public>
                  </object>
                </object>
                <object id="LossSurcharge" path="creditOrSurcharge[Type=&quot;Loss&quot;]">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <object id="LossSurchargeInput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="LossSurchargeInput.Indicator" type="boolean" comment="" path="Indicator">
                      <rules>
                        <value idref="False" />
                        <default idref="False" />
                      </rules>
                      <definition>
                        <caption value="Loss Surcharge" />
                      </definition>
                    </public>
                  </object>
                  <object id="LossSurchargeOutput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="LossSurchargeOutput.Amount" path="Amount" type="float">
                      <definition>
                        <caption value="Loss Surcharge" />
                        <formatMask idref="FormatMask.PremiumPennies" />
                        <readOnly idref="True" />
                        <maxLength idref="MaxLength.Premium" />
                      </definition>
                      <rules>
                        <value>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="LossSurchargeInput.Indicator" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                            </condition>
                            <then value="0" />
                            <else>
                              <calculation>
                                <argument op="eq" idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" type="float" />
                                <argument op="multiply" round="1" roundType="round" idref="LossSurchargePrivate.Factor" type="float" />
                              </calculation>
                            </else>
                          </if>
                        </value>
                        <affects>
                          <reference idref="LossSurchargePrivate.SetAdjustedBasePremium" effect="postEffect" />
                        </affects>
                      </rules>
                      <worksheet>
                        <summarize idref="True" />
                      </worksheet>
                    </public>
                  </object>
                  <object id="LossSurchargePrivate">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="LossSurchargePrivate.Factor" caption="" type="float" override="1">
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="LossSurchargeInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <lookup>
                              <tableRef value="DiscountSurchargeFactors" />
                              <fieldRef value="Value" />
                              <keyRef type="string" value="Loss" name="Surcharge" />
                            </lookup>
                          </else>
                        </if>
                      </value>
                      <worksheet>
                        <caption value="Loss Surcharge Factor" />
                      </worksheet>
                    </private>
                    <private id="LossSurchargePrivate.SetAdjustedBasePremium" caption="" type="float">
                      <value>
                        <calculation>
                          <argument op="eq" idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" type="float" />
                          <argument op="add" idref="LossSurchargeOutput.Amount" type="float" />
                        </calculation>
                      </value>
                      <affects>
                        <reference idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" effect="setValue" />
                      </affects>
                    </private>
                  </object>
                </object>
                <object id="NewHomeDiscount" path="creditOrSurcharge[Type=&quot;NewHome&quot;]">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <object id="NewHomeDiscountOutput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="NewHomeDiscountOutput.Amount" path="Amount" type="float">
                      <definition>
                        <caption value="New Home Discount" />
                        <formatMask idref="FormatMask.PremiumPennies" />
                        <readOnly idref="True" />
                        <maxLength idref="MaxLength.Premium" />
                      </definition>
                      <rules>
                        <value>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="NewHomeDiscountInput.Indicator" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                            </condition>
                            <then value="0" />
                            <else>
                              <calculation>
                                <argument op="eq" idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" type="float" />
                                <argument op="multiply" round="1" roundType="round" idref="NewHomeDiscountOutput.Factor" type="float" />
                                <argument op="multiply" type="int" value="-1" />
                              </calculation>
                            </else>
                          </if>
                        </value>
                        <affects>
                          <reference idref="NewHomeDiscountPrivate.SetAdjustedBasePremium" effect="postEffect" />
                        </affects>
                      </rules>
                      <worksheet>
                        <summarize idref="True" />
                      </worksheet>
                    </public>
                    <public id="NewHomeDiscountOutput.Factor" path="Factor" type="float" override="1">
                      <definition>
                        <caption value="New Home Factor" />
                        <maxLength value="8" />
                        <formatMask idref="FormatMask.Percent" />
                      </definition>
                      <rules>
                        <value>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="NewHomeDiscountInput.Indicator" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                            </condition>
                            <then value="0" />
                            <else>
                              <lookup>
                                <tableRef value="NewHomeDiscountFactors" />
                                <fieldRef value="Factor" />
                                <keyRef idref="DwellingPrivate.AgeOfDwelling" type="int" name="Age" />
                              </lookup>
                            </else>
                          </if>
                        </value>
                      </rules>
                    </public>
                  </object>
                  <object id="NewHomeDiscountPrivate">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="NewHomeDiscountPrivate.SetAdjustedBasePremium" caption="" type="float">
                      <value>
                        <calculation>
                          <argument op="eq" idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" type="float" />
                          <argument op="add" idref="NewHomeDiscountOutput.Amount" type="float" />
                        </calculation>
                      </value>
                      <affects>
                        <reference idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" effect="setValue" />
                      </affects>
                    </private>
                  </object>
                  <object id="NewHomeDiscountInput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="NewHomeDiscountInput.Indicator" type="boolean" comment="" path="Indicator">
                      <rules>
                        <value>
                          <comparison compare="and">
                            <operand idref="DwellingPrivate.FormIsDwelling" type="boolean" />
                            <comparison compare="le">
                              <operand idref="DwellingPrivate.AgeOfDwelling" type="int" />
                              <operand type="int" value="20" />
                            </comparison>
                          </comparison>
                        </value>
                      </rules>
                      <definition>
                        <caption value="New Home Discount" />
                      </definition>
                    </public>
                  </object>
                </object>
                <object id="NonSmokerDiscount" path="creditOrSurcharge[Type=&quot;NonSmoker&quot;]">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <object id="NonSmokerDiscountInput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="NonSmokerDiscountInput.Indicator" path="Indicator" type="boolean">
                      <definition>
                        <caption value="Non Smoker" />
                      </definition>
                      <rules>
                        <value>
                          <comparison compare="and">
                            <comparison compare="and">
                              <comparison compare="eq">
                                <operand idref="DwellingInput.NonSmoker" type="boolean" />
                                <operand idref="True" type="int" />
                              </comparison>
                              <operand idref="DwellingPrivate.FormIsDwelling" type="boolean" />
                            </comparison>
                            <comparison compare="eq">
                              <operand idref="DwellingInput.NumberOfFamilies" type="int" />
                              <operand type="int" value="1" />
                            </comparison>
                          </comparison>
                        </value>
                      </rules>
                    </public>
                  </object>
                  <object id="NonSmokerDiscountOutput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="NonSmokerDiscountOutput.Amount" path="Amount" type="float">
                      <definition>
                        <caption value="Non-Smoker Discount" />
                        <formatMask idref="FormatMask.PremiumPennies" />
                        <readOnly idref="True" />
                        <maxLength idref="MaxLength.Premium" />
                      </definition>
                      <rules>
                        <value>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="NonSmokerDiscountInput.Indicator" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                            </condition>
                            <then value="0" />
                            <else>
                              <calculation>
                                <argument op="eq" idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" type="float" />
                                <argument op="multiply" round="1" roundType="round" idref="NonSmokerDiscountPrivate.Factor" type="float" />
                                <argument op="multiply" type="int" value="-1" />
                              </calculation>
                            </else>
                          </if>
                        </value>
                        <affects>
                          <reference idref="NonSmokerDiscountPrivate.SetAdjustedBasePremium" effect="postEffect" />
                        </affects>
                      </rules>
                      <worksheet>
                        <summarize idref="True" />
                      </worksheet>
                    </public>
                  </object>
                  <object id="NonSmokerDiscountPrivate">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="NonSmokerDiscountPrivate.Factor" caption="" type="float" override="1">
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="NonSmokerDiscountInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <lookup>
                              <tableRef value="DiscountSurchargeFactors" />
                              <fieldRef value="Value" />
                              <keyRef type="string" value="NonSmoker" name="Surcharge" />
                            </lookup>
                          </else>
                        </if>
                      </value>
                      <worksheet>
                        <caption value="Non-Smoker Factor" />
                      </worksheet>
                    </private>
                    <private id="NonSmokerDiscountPrivate.SetAdjustedBasePremium" caption="" type="float">
                      <value>
                        <calculation>
                          <argument op="eq" idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" type="float" />
                          <argument op="add" idref="NonSmokerDiscountOutput.Amount" type="float" />
                        </calculation>
                      </value>
                      <affects>
                        <reference idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" effect="setValue" />
                      </affects>
                    </private>
                  </object>
                </object>
                <object id="ProtectiveDeviceDiscount" path="creditOrSurcharge[Type=&quot;ProtectiveDevice&quot;]">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <object id="ProtectiveDeviceDiscountOutput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="ProtectiveDeviceDiscountOutput.Amount" path="Amount" type="float">
                      <definition>
                        <caption value="Protective Device Discount" />
                        <formatMask idref="FormatMask.PremiumPennies" />
                        <readOnly idref="True" />
                        <maxLength idref="MaxLength.Premium" />
                      </definition>
                      <rules>
                        <value>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="ProtectiveDeviceDiscountInput.Indicator" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                            </condition>
                            <then value="0" />
                            <else>
                              <calculation>
                                <argument op="eq" idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" type="float" />
                                <argument op="multiply" round="1" roundType="round" idref="ProtectiveDeviceDiscountPrivate.Factor" type="float" />
                                <argument op="multiply" type="int" value="-1" />
                              </calculation>
                            </else>
                          </if>
                        </value>
                        <affects>
                          <reference idref="ProtectiveDeviceDiscountPrivate.SetAdjustedBasePremium" effect="postEffect" />
                        </affects>
                      </rules>
                      <worksheet>
                        <summarize idref="True" />
                      </worksheet>
                    </public>
                  </object>
                  <object id="ProtectiveDeviceDiscountPrivate">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="ProtectiveDeviceDiscountPrivate.Factor" caption="" type="float" override="1">
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="ProtectiveDeviceDiscountInput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="ProtectiveDeviceDiscountPrivate.BurglarProtectiveDeviceDiscountPercent" type="float" />
                              <argument op="add" idref="ProtectiveDeviceDiscountPrivate.FireProtectiveDeviceDiscountPercent" type="float" />
                              <argument op="add" idref="ProtectiveDeviceDiscountPrivate.SprinklerProtectiveDeviceDiscountPercent" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                      <worksheet>
                        <caption value="Protective Device Factor" />
                      </worksheet>
                    </private>
                    <private id="ProtectiveDeviceDiscountPrivate.SetAdjustedBasePremium" caption="" type="float">
                      <value>
                        <calculation>
                          <argument op="eq" idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" type="float" />
                          <argument op="add" idref="ProtectiveDeviceDiscountOutput.Amount" type="float" />
                        </calculation>
                      </value>
                      <affects>
                        <reference idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" effect="setValue" />
                      </affects>
                    </private>
                    <private id="ProtectiveDeviceDiscountPrivate.BurglarProtectiveDeviceDiscountPercent" type="float" comment="" caption="Burglar Protective Device Discount">
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="DwellingInput.BurglarAlarm" type="string" />
                              <operand type="string" value="" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <lookup>
                              <tableRef value="BurglarProtectiveDeviceFactors" />
                              <fieldRef value="Factor" />
                              <keyRef idref="DwellingInput.BurglarAlarm" type="string" name="BurglarProtectiveDevice" />
                            </lookup>
                          </else>
                        </if>
                      </value>
                      <worksheet>
                        <caption value="Burglar" />
                      </worksheet>
                    </private>
                    <private id="ProtectiveDeviceDiscountPrivate.FireProtectiveDeviceDiscountPercent" type="float" comment="" caption="Fire Protective Device Discount Percent">
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="DwellingInput.FireAlarm" type="string" />
                              <operand type="string" value="" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <lookup>
                              <tableRef value="FireProtectiveDeviceFactors" />
                              <fieldRef value="Factor" />
                              <keyRef idref="DwellingInput.FireAlarm" type="string" name="FireProtectiveDevice" />
                            </lookup>
                          </else>
                        </if>
                      </value>
                      <worksheet>
                        <caption value="Fire" />
                      </worksheet>
                    </private>
                    <private id="ProtectiveDeviceDiscountPrivate.SprinklerProtectiveDeviceDiscountPercent" type="float" comment="" caption="Protective Device Discount Private Sprinkler Protective Device Discount Percent">
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="DwellingInput.Sprinkler" type="string" />
                              <operand type="string" value="" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <lookup>
                              <tableRef value="SprinklerProtectiveDeviceFactors" />
                              <fieldRef value="Factor" />
                              <keyRef idref="DwellingInput.Sprinkler" type="string" name="Sprinkler System" />
                            </lookup>
                          </else>
                        </if>
                      </value>
                      <worksheet>
                        <caption value="Sprinkler" />
                      </worksheet>
                    </private>
                  </object>
                  <object id="ProtectiveDeviceDiscountInput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="ProtectiveDeviceDiscountInput.Indicator" type="boolean" comment="" path="Indicator">
                      <rules>
                        <value>
                          <comparison compare="and">
                            <operand idref="DwellingPrivate.FormIsDwelling" type="boolean" />
                            <comparison compare="or">
                              <comparison compare="or">
                                <comparison compare="ne">
                                  <operand idref="DwellingInput.BurglarAlarm" type="string" />
                                  <operand type="string" value="" />
                                </comparison>
                                <comparison compare="ne">
                                  <operand idref="DwellingInput.FireAlarm" type="string" />
                                  <operand type="string" value="" />
                                </comparison>
                              </comparison>
                              <comparison compare="ne">
                                <operand idref="DwellingInput.Sprinkler" type="string" />
                                <operand type="string" value="" />
                              </comparison>
                            </comparison>
                          </comparison>
                        </value>
                      </rules>
                      <definition>
                        <caption value="Protective Device Indicator" />
                      </definition>
                    </public>
                  </object>
                </object>
                <object id="WindDeductible" path="winddeductible">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <object id="WindDeductibleInput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="WindDeductibleInput.Indicator" type="boolean" comment="" path="Indicator">
                      <rules>
                        <value>
                          <comparison compare="and">
                            <comparison compare="ne">
                              <operand idref="DwellingInput.WindDeductible" type="string" />
                              <operand type="string" value="" />
                            </comparison>
                            <comparison compare="ne">
                              <operand idref="DwellingInput.WindDeductible" type="string" />
                              <operand type="string" value="N" />
                            </comparison>
                          </comparison>
                        </value>
                      </rules>
                      <definition>
                        <caption value="Wind Deductible Input Indicator" />
                      </definition>
                    </public>
                  </object>
                  <object id="WindDeductibleOutput">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="WindDeductibleOutput.Amount" path="Amount" type="float">
                      <rules>
                        <value>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="WindDeductibleInput.Indicator" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                            </condition>
                            <then value="0" />
                            <else>
                              <calculation>
                                <argument op="eq" idref="DwellingOutputNonShredded.BasePremiumAccumulativeValue" type="float" />
                                <argument op="multiply">
                                  <calculation>
                                    <argument op="eq" idref="WindDeductiblePrivate.Factor" type="float" />
                                    <argument op="subtract" type="int" value="1" />
                                  </calculation>
                                </argument>
                                <argument op="multiply" round="1" roundType="round" type="int" value="1" />
                              </calculation>
                            </else>
                          </if>
                        </value>
                        <affects>
                          <reference idref="TownhouseRowhouseSurchargePrivate.SetBasePremium" effect="postEffect" />
                        </affects>
                      </rules>
                      <definition>
                        <caption value="Wind Deductible Output Amount" />
                        <formatMask idref="FormatMask.PremiumPennies" />
                        <readOnly idref="True" />
                        <maxLength idref="MaxLength.Premium" />
                      </definition>
                      <worksheet>
                        <summarize idref="True" />
                      </worksheet>
                    </public>
                  </object>
                  <object id="WindDeductiblePrivate">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="WindDeductiblePrivate.Factor" caption="" type="float">
                      <value>
                        <lookup>
                          <tableRef value="WindDeductibles" />
                          <fieldRef value="Factor" />
                          <keyRef idref="DwellingInput.WindDeductible" type="string" name="Deductible" />
                        </lookup>
                      </value>
                      <worksheet>
                        <caption value="Town/Row Surcharge Factor" />
                      </worksheet>
                    </private>
                    <private id="WindDeductiblePrivate.SetBasePremium" caption="" type="float">
                      <value>
                        <calculation>
                          <argument op="eq" idref="DwellingOutputNonShredded.BasePremiumAccumulativeValue" type="float" />
                          <argument op="add" idref="WindDeductibleOutput.Amount" type="float" />
                        </calculation>
                      </value>
                      <affects>
                        <reference idref="DwellingOutputNonShredded.BasePremiumAccumulativeValue" effect="setValue" />
                      </affects>
                    </private>
                  </object>
                </object>
              </object>
              <object id="AutoHomeDiscount" path="coverage[Type=&quot;AutoHomeDiscount&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="AutoHomeDiscountInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="AutoHomeDiscountInput.Selected" path="Selected" type="boolean" override="1">
                    <definition>
                      <caption value="Do you have a Personal Auto Insurance policy with our company?" />
                      <maxLength value="1" />
                    </definition>
                    <rules>
                      <default idref="False" />
                    </rules>
                  </public>
                </object>
                <object id="AutoHomeDiscountOutput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="AutoHomeDiscountOutput.Premium" path="Premium" type="float" class="Premium">
                    <definition>
                      <caption value="Auto Home Discount" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="AutoHomeDiscountOutput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="AutoHomeDiscountPrivate.RiskPremium" type="float" />
                              <argument op="multiply" round="1" roundType="round" idref="AutoHomeDiscountPrivate.Factor" type="float" />
                              <argument op="multiply" type="int" value="-1" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                    <worksheet>
                      <summarize idref="True" />
                    </worksheet>
                  </public>
                  <public id="AutoHomeDiscountOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Auto Home Discount Premium Written" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="1">
                          <writtenRef idref="AutoHomeDiscountOutput.Premium" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        </written>
                      </value>
                    </rules>
                  </public>
                  <public id="AutoHomeDiscountOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                    <definition>
                      <caption value="Auto Home Discount Premium Change" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                  </public>
                  <public id="AutoHomeDiscountOutput.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Auto Home Discount Indicator" />
                      <maxLength value="1" />
                      <readOnly idref="True" />
                    </definition>
                    <rules>
                      <default idref="False" />
                      <value>
                        <comparison compare="eq">
                          <operand idref="AutoHomeDiscountInput.Selected" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                </object>
                <object id="AutoHomeDiscountPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="AutoHomeDiscountPrivate.Factor" caption="" type="float">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="AutoHomeDiscountOutput.Indicator" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="1.00" />
                        <else>
                          <lookup>
                            <tableRef value="DiscountSurchargeFactors" />
                            <fieldRef value="Value" />
                            <keyRef type="string" value="AutoHome" name="Surcharge" />
                          </lookup>
                        </else>
                      </if>
                    </value>
                    <worksheet>
                      <caption value="Auto Home Discount Factor" />
                    </worksheet>
                  </private>
                  <private id="AutoHomeDiscountPrivate.RiskPremium" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="RiskPrivate.Premium" type="float" />
                      </calculation>
                    </value>
                    <worksheet suppress="1">
                      <caption value="Dwelling Premium" />
                    </worksheet>
                  </private>
                </object>
              </object>
            </object>
            <object id="Dwelling" path="dwelling">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="DwellingInput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="DwellingInput.BuildingType" path="BuildingType" type="string">
                  <definition>
                    <caption value="Structure" />
                    <options>
                      <option value="Apartment" caption="Apartment" validRef="DwellingPrivate.FormIsHO4" />
                      <option value="Condo" caption="Condo" validRef="DwellingPrivate.FormIsHO6" />
                      <option value="Dwelling" caption="Dwelling" validRef="DwellingPrivate.FormIsDwelling" />
                      <option value="Rowhouse" caption="Rowhouse" validRef="DwellingPrivate.FormIsDwelling" />
                      <option value="Townhouse" caption="Townhouse" validRef="DwellingPrivate.FormIsDwellingOrCondo" />
                      <option value="ModularPrefab" caption="Modular/Prefab" validRef="DwellingPrivate.FormIsDwelling" />
                    </options>
                    <maxLength value="30" />
                    <formatMask idref="FormatMask.BlankOption" />
                    <required idref="True" />
                  </definition>
                  <rules>
                    <misc>
                      <if>
                        <condition idref="DwellingPrivate.FormIsHO4" />
                        <then value="Apartment" />
                      </if>
                    </misc>
                    <default value="Dwelling" />
                  </rules>
                </public>
                <public id="DwellingInput.BurglarAlarm" path="BurglarAlarm" type="string">
                  <definition>
                    <caption value="Burglar Alarm" />
                    <options>
                      <option value="Central" caption="Central Station Reporting" />
                      <option value="PoliceStation" caption="Police Station Reporting" />
                      <option value="Local" caption="Local " />
                    </options>
                    <maxLength value="15" />
                    <formatMask idref="FormatMask.BlankOption" />
                  </definition>
                </public>
                <public id="DwellingInput.Construction" path="Construction" type="string">
                  <definition>
                    <caption value="Construction" />
                    <options>
                      <option value="Frame" caption="Frame" default="1" />
                      <option value="Aluminum" caption="Aluminum" />
                      <option value="PlasticSiding" caption="Plastic Siding" />
                      <option value="Masonry" caption="Masonry" />
                      <option value="MasonryVeneer" caption="Masonry Veneer" />
                      <option value="Superior" caption="Superior" />
                    </options>
                    <maxLength value="30" />
                    <required idref="True" />
                    <formatMask idref="FormatMask.BlankOption" />
                  </definition>
                  <rules>
                    <default value="Frame" />
                  </rules>
                </public>
                <public id="DwellingInput.Deductible" path="deductible[Type=&quot;Standard&quot;]/iValue" type="int" override="1">
                  <definition>
                    <caption value="All-Peril Deductible" />
                    <options>
                      <option value="100250" caption="$100 / $250 Theft" validRef="False" />
                      <option value="500" caption="$500" default="1" />
                      <option value="750" caption="$750" />
                      <option value="1000" caption="$1,000" />
                      <option value="2500" caption="$2,500" />
                      <option value="5000" caption="$5,000" />
                      <option value="7500" caption="$7,500" />
                      <option value="10000" caption="$10,000" />
                    </options>
                    <maxLength value="6" />
                    <readOnly>
                      <comparison idref="LinePrivate.IsCoveragePackageNotCustom" type="boolean" />
                    </readOnly>
                  </definition>
                  <rules>
                    <default value="500" />
                  </rules>
                </public>
                <public id="DwellingInput.DistanceToFireStation" path="DistanceToFireStation" type="int">
                  <definition>
                    <caption value="Miles To Fire Station" />
                    <maxLength value="3" />
                  </definition>
                </public>
                <public id="DwellingInput.DistanceToHydrant" path="DistanceToHydrant" type="int">
                  <definition>
                    <caption value="Feet To Hydrant" />
                    <maxLength value="4" />
                  </definition>
                </public>
                <public id="DwellingInput.DistanceToWaterSource" path="DistanceToWaterSource" type="int">
                  <definition>
                    <caption value="Feet To Water Source" />
                    <maxLength value="4" />
                  </definition>
                </public>
                <public id="DwellingInput.DwellingAccessibleToFireEquipment" path="DwellingAccessibleToFireEquipment" type="string">
                  <definition>
                    <caption value="Accessible all year" />
                    <maxLength value="1" />
                    <options>
                      <option value="N" caption="No" />
                      <option value="Y" caption="Yes" />
                    </options>
                    <formatMask idref="FormatMask.BlankOption" />
                  </definition>
                </public>
                <public id="DwellingInput.EligibleForSuburbanRating" path="EligibleForSuburbanRating" type="boolean">
                  <definition>
                    <caption value="Dwelling Eligible for Suburban Rating?" />
                    <options>
                      <option value="0" caption="No" default="1" />
                      <option value="1" caption="Yes" />
                    </options>
                    <maxLength value="1" />
                  </definition>
                  <rules>
                    <default value="0" />
                  </rules>
                </public>
                <public id="DwellingInput.FireAlarm" path="FireAlarm" type="string">
                  <definition>
                    <caption value="Fire Protection Device" />
                    <options>
                      <option value="Central" caption="Central Station Reporting" />
                      <option value="FireDepartment" caption="Fire Department Reporting" />
                      <option value="Local" caption="Local / Smoke Detector" />
                    </options>
                    <maxLength value="15" />
                    <formatMask idref="FormatMask.BlankOption" />
                  </definition>
                </public>
                <public id="DwellingInput.Form" path="DwellingForm" type="string">
                  <definition>
                    <options>
                      <option value="HO1" caption="Homeowner - Basic" validRef="False" />
                      <option value="HO2" caption="Homeowner - Broad" validRef="False" />
                      <option value="HO3" caption="Homeowner" />
                      <option value="HO4" caption="Renter" />
                      <option value="HO6" caption="Condo" />
                    </options>
                    <required idref="True" />
                    <caption>
                      <if>
                        <condition idref="Context.IsConsumer" />
                        <then value="Coverage Type" />
                        <else value="Form" />
                      </if>
                    </caption>
                    <formatMask idref="FormatMask.BlankOption" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="DwellingPrivate.SetOccupancyType" effect="postEffect" />
                    </affects>
                    <default value="HO3" />
                  </rules>
                </public>
                <public id="DwellingInput.WindDeductible" path="deductible[Type=&quot;WindDeductible&quot;]/WindDeductible" type="string">
                  <definition>
                    <caption value="Wind Deductible" />
                    <options>
                      <option value="N" caption="None" default="1" />
                      <option value="1" caption="1%" validRef="DwellingPrivate.IsOnePercentValid" />
                      <option value="2" caption="2%" validRef="DwellingPrivate.IsTwoPercentValid" />
                      <option value="5" caption="5%" validRef="DwellingPrivate.IsFivePercentValid" />
                      <option value="10" caption="10%" validRef="DwellingPrivate.IsTenPercentValid" />
                    </options>
                  </definition>
                  <rules>
                    <default value="N" />
                  </rules>
                </public>
                <public id="DwellingInput.NonSmoker" path="NonSmoker" type="boolean">
                  <definition>
                    <caption value="Are are all household residents non-smokers?" />
                  </definition>
                  <rules>
                    <default idref="False" />
                  </rules>
                </public>
                <public id="DwellingInput.NumberOfFamilies" path="NumberOfFamilies" type="int">
                  <definition>
                    <caption value="Number of Families" />
                    <options>
                      <option value="1" caption="1" />
                      <option value="2" caption="2" />
                      <option value="3" caption="3" />
                      <option value="4" caption="4" />
                    </options>
                    <maxLength value="1" />
                  </definition>
                  <rules>
                    <default value="1" />
                  </rules>
                </public>
                <public id="DwellingInput.NumberOfUnits" path="NumberOfUnits" type="int">
                  <definition>
                    <caption value="No. of Family Units within building or approved firewalls" />
                    <formatMask idref="FormatMask.BlankOption" />
                    <options>
                      <option value="1" caption="1" />
                      <option value="2" caption="2" />
                      <option value="3" caption="3" />
                      <option value="4" caption="4" />
                      <option value="5" caption="5" />
                      <option value="6" caption="6" />
                      <option value="7" caption="7" />
                      <option value="8" caption="8" />
                      <option value="9" caption="9 and Over" />
                    </options>
                    <maxLength value="1" />
                  </definition>
                </public>
                <public id="DwellingInput.NumberOfWoodStoves" path="NumberOfWoodStoves" type="int">
                  <definition>
                    <caption value="# of Wood Stoves" />
                    <maxLength value="2" />
                  </definition>
                  <rules>
                    <default value="0" />
                    <minimum value="0" />
                    <maximum value="99" />
                  </rules>
                </public>
                <public id="DwellingInput.OccupancyType" path="OccupancyType" type="string">
                  <definition>
                    <caption value="Occupancy" />
                    <options>
                      <option value="Owner" caption="Owner" default="1" />
                      <option value="Tenant" caption="Tenant" />
                      <option value="Unoccupied" caption="Unoccupied" />
                      <option value="Vacant" caption="Vacant" />
                    </options>
                    <maxLength value="10" />
                  </definition>
                  <rules>
                    <default value="Owner" />
                  </rules>
                </public>
                <public id="DwellingInput.PoolApprovedFence" path="PoolApprovedFence" type="string">
                  <definition>
                    <caption value="Approved Fence?" />
                    <options>
                      <option value="N" caption="No" />
                      <option value="Y" caption="Yes" />
                    </options>
                    <required>
                      <comparison compare="ne">
                        <operand idref="DwellingInput.SwimmingPool" type="string" />
                        <operand type="string" value="None" />
                      </comparison>
                    </required>
                    <formatMask idref="FormatMask.BlankOption" />
                    <maxLength value="1" />
                  </definition>
                </public>
                <public id="DwellingInput.PoolDivingBoard" path="PoolDivingBoard" type="string">
                  <definition>
                    <caption value="Diving Board" />
                    <options>
                      <option value="N" caption="No" />
                      <option value="Y" caption="Yes" />
                    </options>
                    <required>
                      <comparison compare="ne">
                        <operand idref="DwellingInput.SwimmingPool" type="string" />
                        <operand type="string" value="None" />
                      </comparison>
                    </required>
                    <formatMask idref="FormatMask.BlankOption" />
                    <maxLength value="1" />
                  </definition>
                </public>
                <public id="DwellingInput.PoolSlide" path="PoolSlide" type="string">
                  <definition>
                    <caption value="Pool Slide" />
                    <options>
                      <option value="N" caption="No" />
                      <option value="Y" caption="Yes" />
                    </options>
                    <required>
                      <comparison compare="ne">
                        <operand idref="DwellingInput.SwimmingPool" type="string" />
                        <operand type="string" value="None" />
                      </comparison>
                    </required>
                    <formatMask idref="FormatMask.BlankOption" />
                    <maxLength value="1" />
                  </definition>
                </public>
                <public id="DwellingInput.PrimaryHeatType" path="PrimaryHeatType" type="string">
                  <definition>
                    <caption value="Primary Heat Type" />
                    <options>
                      <option value="Electric" caption="Electric" />
                      <option value="Gas" caption="Gas" />
                      <option value="OilTankOutdoorsAboveGround" caption="Oil - Tank Outdoors Above Ground" />
                      <option value="OilTankOutdoorsBelowGround" caption="Oil - Tank Outdoors Below Ground" />
                      <option value="WoodStove" caption="Wood Stove (Standard)" />
                    </options>
                    <maxLength value="30" />
                    <formatMask idref="FormatMask.BlankOption" />
                  </definition>
                </public>
                <public id="DwellingInput.PrimaryPolicyNumber" path="PrimaryPolicyNumber" type="string">
                  <definition>
                    <caption value="Primary Policy Number" />
                    <maxLength value="15" />
                  </definition>
                </public>
                <public id="DwellingInput.RatedProtectionClass" path="RatedProtectionClass" type="string">
                  <definition>
                    <caption value="Protection Class" />
                    <options>
                      <option value="1" caption="1" />
                      <option value="2" caption="2" />
                      <option value="3" caption="3" />
                      <option value="4" caption="4" />
                      <option value="5" caption="5" />
                      <option value="6" caption="6" />
                      <option value="7" caption="7" />
                      <option value="8" caption="8" />
                      <option value="9" caption="9" />
                      <option value="10" caption="10" />
                      <option value="88" caption="88" validRef="DwellingPrivate.Is88Valid" />
                      <option value="1/9" caption="1/9" />
                      <option value="2/9" caption="2/9" validRef="DwellingPrivate.ShowSplitPPCOptions" />
                      <option value="3/9" caption="3/9" validRef="DwellingPrivate.ShowSplitPPCOptions" />
                      <option value="4/9" caption="4/9" validRef="DwellingPrivate.ShowSplitPPCOptions" />
                      <option value="5/9" caption="5/9" validRef="DwellingPrivate.ShowSplitPPCOptions" />
                      <option value="6/9" caption="6/9" validRef="DwellingPrivate.ShowSplitPPCOptions" />
                      <option value="7/9" caption="7/9" validRef="DwellingPrivate.ShowSplitPPCOptions" />
                      <option value="8/9" caption="8/9" validRef="DwellingPrivate.ShowSplitPPCOptions" />
                      <option value="10/9" caption="10/9" validRef="DwellingPrivate.ShowSplitPPCOptions" />
                      <option value="1/10" caption="1/10" validRef="DwellingPrivate.ShowSplitPPCOptions" />
                      <option value="2/10" caption="2/10" validRef="DwellingPrivate.ShowSplitPPCOptions" />
                      <option value="3/10" caption="3/10" validRef="DwellingPrivate.ShowSplitPPCOptions" />
                      <option value="4/10" caption="4/10" validRef="DwellingPrivate.ShowSplitPPCOptions" />
                      <option value="5/10" caption="5/10" validRef="DwellingPrivate.ShowSplitPPCOptions" />
                      <option value="6/10" caption="6/10" validRef="DwellingPrivate.ShowSplitPPCOptions" />
                      <option value="7/10" caption="7/10" validRef="DwellingPrivate.ShowSplitPPCOptions" />
                      <option value="8/10" caption="8/10" validRef="DwellingPrivate.ShowSplitPPCOptions" />
                      <option value="9/10" caption="9/10" validRef="DwellingPrivate.ShowSplitPPCOptions" />
                    </options>
                    <maxLength value="3" />
                    <required idref="True" />
                    <formatMask idref="FormatMask.BlankOption" />
                  </definition>
                  <rules>
                    <misc>
                      <if>
                        <condition>
                          <comparison compare="and">
                            <comparison compare="and">
                              <comparison compare="contains">
                                <operand idref="DwellingInput.RatedProtectionClass" type="string" />
                                <operand type="string" value="/" />
                              </comparison>
                              <comparison compare="gt">
                                <operand idref="DwellingInput.DistanceToFireStation" type="int" />
                                <operand type="int" value="0" />
                              </comparison>
                            </comparison>
                            <comparison compare="gt">
                              <operand idref="DwellingInput.DistanceToHydrant" type="int" />
                              <operand type="int" value="0" />
                            </comparison>
                          </comparison>
                        </condition>
                        <then idref="DwellingPrivate.SplitPPCDetermination" />
                      </if>
                      <if>
                        <condition>
                          <comparison compare="and">
                            <comparison compare="and">
                              <comparison compare="and">
                                <comparison compare="and">
                                  <comparison compare="and">
                                    <comparison compare="contains">
                                      <operand idref="DwellingInput.RatedProtectionClass" type="string" />
                                      <operand type="int" value="9" />
                                    </comparison>
                                    <comparison compare="is">
                                      <operand idref="DwellingInput.Form" type="string" />
                                      <operand type="string" value="HO2,HO3" />
                                    </comparison>
                                  </comparison>
                                  <comparison compare="eq">
                                    <operand idref="DwellingInput.UseType" type="string" />
                                    <operand type="string" value="Primary" />
                                  </comparison>
                                </comparison>
                                <comparison compare="gt">
                                  <operand idref="DwellingInput.DistanceToFireStation" type="int" />
                                  <operand type="int" value="0" />
                                </comparison>
                              </comparison>
                              <comparison compare="gt">
                                <operand idref="DwellingInput.DistanceToWaterSource" type="int" />
                                <operand type="int" value="0" />
                              </comparison>
                            </comparison>
                            <comparison compare="ne">
                              <operand idref="DwellingInput.DwellingAccessibleToFireEquipment" type="string" />
                              <operand type="string" value="" />
                            </comparison>
                          </comparison>
                        </condition>
                        <then idref="DwellingPrivate.SuburbanPPCDetermination" />
                      </if>
                    </misc>
                    <default value="5" />
                  </rules>
                </public>
                <public id="DwellingInput.RoofingMaterial" path="RoofingMaterial" type="string">
                  <definition>
                    <caption value="Roofing Material" />
                    <options>
                      <option value="Composition" caption="Composition" />
                      <option value="Metal" caption="Metal" />
                      <option value="Other" caption="Other" />
                      <option value="Poured" caption="Poured" />
                      <option value="Rolled" caption="Rolled" />
                      <option value="Slate" caption="Slate" />
                      <option value="Solar" caption="Solar" />
                      <option value="Tile" caption="Tile" />
                      <option value="WoodShake/Shingle" caption="Wood Shake/Shingle" />
                    </options>
                    <maxLength value="20" />
                    <formatMask idref="FormatMask.BlankOption" />
                  </definition>
                </public>
                <public id="DwellingInput.Sprinkler" path="Sprinkler" type="string" alwaysRun="1">
                  <definition>
                    <caption value="Sprinkler System" />
                    <options>
                      <option value="None" caption="None" />
                      <option value="SprinklersAllAreas" caption="Automatic - All Areas" />
                      <option value="SprinklersExcludedAreas" caption="Automatic - Excluded Areas" />
                    </options>
                    <maxLength value="23" />
                  </definition>
                </public>
                <public id="DwellingInput.SupplementalHeatType" path="SupplementalHeatType" type="string">
                  <definition>
                    <caption value="Supplemental Heat Type" />
                    <options>
                      <option value="WoodStove" caption="Wood Stove" />
                      <option value="CoalStove" caption="Coal Stove" />
                      <option value="Electric" caption="Electric (Portable)" />
                      <option value="Kerosene" caption="Kerosene (Portable)" />
                      <option value="Propane" caption="Liquid Propane (Portable)" />
                      <option value="FireplaceInsert" caption="Fireplace Insert" />
                      <option value="Pellet" caption="Pellet Stove" />
                      <option value="Solar" caption="Solar" />
                      <option value="Other" caption="Other" />
                    </options>
                    <maxLength value="20" />
                    <formatMask idref="FormatMask.BlankOption" />
                  </definition>
                </public>
                <public id="DwellingInput.SwimmingPool" path="SwimmingPool" type="string">
                  <definition>
                    <caption value="Swimming Pool/Type" />
                    <options>
                      <option value="None" caption="None" default="1" />
                      <option value="AboveGround" caption="Above Ground" />
                      <option value="Inground" caption="Inground" />
                    </options>
                    <maxLength value="11" />
                  </definition>
                  <rules>
                    <default value="None" />
                  </rules>
                </public>
                <public id="DwellingInput.Trampoline" path="Trampoline" type="string">
                  <definition>
                    <caption value="Trampoline" />
                    <options>
                      <option value="N" caption="No" />
                      <option value="Y" caption="Yes" />
                    </options>
                    <formatMask idref="FormatMask.BlankOption" />
                    <maxLength value="1" />
                    <required idref="True" />
                  </definition>
                </public>
                <public id="DwellingInput.TrampolineSafetyNet" path="TrampolineSafetyNet" type="string">
                  <definition>
                    <caption value="Safety Net?" />
                    <options>
                      <option value="N" caption="No" />
                      <option value="Y" caption="Yes" />
                    </options>
                    <formatMask idref="FormatMask.BlankOption" />
                    <maxLength value="1" />
                  </definition>
                </public>
                <public id="DwellingInput.UnderConstruction" path="UnderConstruction" type="boolean">
                  <definition>
                    <caption value="Under Construction?" />
                    <options>
                      <option value="0" caption="No" default="1" />
                      <option value="1" caption="Yes" />
                    </options>
                    <maxLength value="1" />
                  </definition>
                  <rules>
                    <default value="0" />
                  </rules>
                </public>
                <public id="DwellingInput.UseType" path="UseType" type="string">
                  <definition>
                    <caption value="Usage" />
                    <options>
                      <option value="Primary" caption="Primary" default="1" />
                      <option value="Secondary" caption="Secondary" />
                      <option value="Seasonal" caption="Seasonal" />
                    </options>
                    <maxLength value="9" />
                  </definition>
                  <rules>
                    <default value="Primary" />
                  </rules>
                </public>
                <public id="DwellingInput.YearBuilt" path="YearBuilt" type="int">
                  <definition>
                    <caption value="Year Built" />
                    <maxLength idref="MaxLength.Year" />
                    <formatMask idref="FormatMask.Year" />
                    <required>
                      <comparison compare="eq">
                        <operand idref="DwellingPrivate.FormIsCondoOrTenant" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </required>
                    <readOnly idref="DwellingPrivate.FormIsCondoOrTenant" />
                  </definition>
                  <rules>
                    <misc>
                      <if>
                        <condition>
                          <comparison compare="and">
                            <comparison compare="ne">
                              <operand idref="DwellingInput.YearBuilt" type="int" />
                              <operand type="string" value="" />
                            </comparison>
                            <comparison compare="or">
                              <comparison compare="lt">
                                <operand idref="DwellingInput.YearBuilt" type="int" />
                                <operand type="int" value="1600" />
                              </comparison>
                              <comparison compare="gt">
                                <operand idref="DwellingInput.YearBuilt" type="int" />
                                <operand idref="DwellingPrivate.MaximumYearBuilt" type="int" />
                              </comparison>
                            </comparison>
                          </comparison>
                        </condition>
                        <then idref="DwellingInput.YearBuilt" message="RiskInput.YearBuiltMsg1" type="int" />
                      </if>
                      <if>
                        <condition>
                          <comparison compare="gt">
                            <operand idref="DwellingInput.YearBuilt" type="int" />
                            <operand idref="DwellingPrivate.MaximumYearBuilt" type="int" />
                          </comparison>
                        </condition>
                        <then idref="DwellingInput.YearBuilt" message="RiskInput.YearBuiltMsg2" type="int" />
                      </if>
                      <if>
                        <condition idref="DwellingPrivate.FormIsCondoOrTenant" />
                        <then value="" />
                      </if>
                    </misc>
                    <default value="" />
                  </rules>
                </public>
                <public id="DwellingInput.BuildingCodeEffectivenessGrading" path="BuildingCodeEffectivenessGrading" type="int">
                  <definition>
                    <caption value="BCEG" />
                    <options>
                      <option value="1" caption="1" />
                      <option value="2" caption="2" />
                      <option value="3" caption="3" />
                      <option value="4" caption="4" />
                      <option value="5" caption="5" />
                      <option value="6" caption="6" />
                      <option value="7" caption="7" />
                      <option value="8" caption="8" />
                      <option value="9" caption="9" />
                      <option value="10" caption="10" />
                      <option value="99" caption="Ungraded" />
                    </options>
                    <formatMask idref="FormatMask.BlankOption" />
                  </definition>
                </public>
                <public id="DwellingInput.BuildingCodeEffectivenessGradingCommunity" path="BuildingCodeEffectivenessGradingCommunity" type="int">
                  <definition>
                    <caption value="BCEG Community" />
                    <options>
                      <option value="1" caption="1" />
                      <option value="2" caption="2" />
                      <option value="3" caption="3" />
                      <option value="4" caption="4" />
                      <option value="5" caption="5" />
                      <option value="6" caption="6" />
                      <option value="7" caption="7" />
                      <option value="8" caption="8" />
                      <option value="9" caption="9" />
                      <option value="10" caption="10" />
                      <option value="99" caption="Ungraded" />
                    </options>
                    <formatMask idref="FormatMask.BlankOption" />
                  </definition>
                </public>
                <public id="DwellingInput.CurrentMarketValue" path="CurrentMarketValue" type="float">
                  <definition>
                    <caption value="Current Market Value" />
                    <maxLength value="15" />
                    <formatMask idref="FormatMask.Premium" />
                  </definition>
                </public>
                <public id="DwellingInput.Description" path="Description" type="string">
                  <definition>
                    <caption value="Description" />
                  </definition>
                  <rules>
                    <value idref="LocationOutputNonShredded.AddressDisplay" />
                  </rules>
                </public>
                <public id="DwellingInput.DistanceToCoast" path="DistanceToCoast" type="int">
                  <definition>
                    <caption value="Distance To Coast" />
                    <maxLength value="4" />
                  </definition>
                </public>
                <public id="DwellingInput.DistanceToMajorWaterway" path="DistanceToMajorWaterway" type="int">
                  <definition>
                    <caption value="Distance To Major Waterway" />
                    <maxLength value="4" />
                  </definition>
                </public>
                <public id="DwellingInput.DistanceToTidalWater" path="DistanceToTidalWater" type="int">
                  <definition>
                    <caption value="Distance To Tidal Water" />
                    <maxLength value="4" />
                  </definition>
                </public>
                <public id="DwellingInput.ElectricalSystem" path="ElectricalSystem" type="string">
                  <definition>
                    <caption value="Electrical System" />
                    <options>
                      <option value="Breaker" caption="Breaker" />
                      <option value="Fuse" caption="Fuse" />
                      <option value="Other" caption="Other" />
                    </options>
                    <formatMask idref="FormatMask.BlankOption" />
                  </definition>
                </public>
                <public id="DwellingInput.FoundationType" path="FoundationType" type="string">
                  <definition>
                    <caption value="Foundation Type" />
                    <options>
                      <option value="PouredConcrete" caption="Poured Concrete" />
                      <option value="ConcreteBlock" caption="Concrete Block" />
                      <option value="Stone" caption="Stone" />
                      <option value="Brick" caption="Brick" />
                      <option value="TreatedLumber" caption="Treated Lumber" />
                    </options>
                    <formatMask idref="FormatMask.BlankOption" />
                  </definition>
                </public>
                <public id="DwellingInput.OpeningProtection" path="OpeningProtection" type="boolean">
                  <definition>
                    <caption value="Opening Protection" />
                    <formatMask idref="FormatMask.Radio" />
                  </definition>
                </public>
                <public id="DwellingInput.PurchaseDate" path="PurchaseDate" type="date">
                  <definition>
                    <caption value="Purchase Date" />
                  </definition>
                </public>
                <public id="DwellingInput.PurchasePrice" path="PurchasePrice" type="float">
                  <definition>
                    <caption value="Purchase Price" />
                    <formatMask idref="FormatMask.Premium" />
                    <maxLength value="15" />
                  </definition>
                </public>
                <public id="DwellingInput.RespondingFireDepartment" path="RespondingFireDepartment" type="string">
                  <definition>
                    <caption value="Responding Fire Department" />
                    <maxLength value="30" />
                  </definition>
                </public>
                <public id="DwellingInput.RoofGeometry" path="RoofGeometry" type="string">
                  <definition>
                    <caption value="Roof Geometry" />
                    <options>
                      <option value="PeakedNonHip" caption="Peaked - Non Hip Shape" />
                      <option value="PeakedHip" caption="Peaked - Hip Shape" />
                      <option value="Flat" caption="Flat" />
                    </options>
                  </definition>
                </public>
                <public id="DwellingInput.SquareFeet" path="SquareFeet" type="int">
                  <definition>
                    <caption value="Square Feet" />
                    <maxLength value="10" />
                    <formatMask idref="FormatMask.Limit" />
                  </definition>
                </public>
                <public id="DwellingInput.TerritoryCode" path="TerritoryCode" type="int">
                  <definition>
                    <caption value="Territory Code" />
                  </definition>
                  <rules>
                    <value idref="AccountOutputNonShredded.Territory" />
                    <default idref="AccountOutputNonShredded.Territory" />
                  </rules>
                </public>
                <public id="DwellingInput.Wiring" path="Wiring" type="string">
                  <definition>
                    <caption value="Wiring" />
                    <options>
                      <option value="Copper" caption="Copper" />
                      <option value="Aluminum" caption="Aluminum" />
                      <option value="KnobAndTube" caption="Knob and Tube" />
                    </options>
                    <formatMask idref="FormatMask.BlankOption" />
                  </definition>
                </public>
                <object id="UpdatedServicesInfo">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="UpdatedServicesInfo.ElectricSystemUpdateType" path="ElectricSystemUpdateType" type="string">
                    <definition>
                      <caption value="Electric System Update Type" />
                      <options>
                        <option value="Full" caption="Full" />
                        <option value="Partial" caption="Partial" />
                      </options>
                      <formatMask idref="FormatMask.BlankOption" />
                    </definition>
                  </public>
                  <public id="UpdatedServicesInfo.ElectricSystemUpdateYear" path="ElectricSystemUpdateYear" type="int">
                    <definition>
                      <caption value="Year the electrical system was installed or updated" />
                      <maxLength idref="MaxLength.Year" />
                      <formatMask idref="FormatMask.Year" />
                    </definition>
                  </public>
                  <public id="UpdatedServicesInfo.HeatingUpdateType" path="HeatingUpdateType" type="string">
                    <definition>
                      <caption value="Heating Update Type" />
                      <options>
                        <option value="Full" caption="Full" />
                        <option value="Partial" caption="Partial" />
                      </options>
                      <formatMask idref="FormatMask.BlankOption" />
                    </definition>
                  </public>
                  <public id="UpdatedServicesInfo.HeatingUpdateYear" path="HeatingUpdateYear" type="int">
                    <definition>
                      <caption value="Year heating was installed or updated" />
                      <maxLength idref="MaxLength.Year" />
                      <formatMask idref="FormatMask.Year" />
                    </definition>
                  </public>
                  <public id="UpdatedServicesInfo.PlumbingUpdateType" path="PlumbingUpdateType" type="string">
                    <definition>
                      <caption value="Plumbing Update Type" />
                      <options>
                        <option value="Full" caption="Full" />
                        <option value="Partial" caption="Partial" />
                      </options>
                      <formatMask idref="FormatMask.BlankOption" />
                    </definition>
                  </public>
                  <public id="UpdatedServicesInfo.PlumbingUpdateYear" path="PlumbingUpdateYear" type="int">
                    <definition>
                      <caption value="Year plumbing was installed or updated" />
                      <maxLength idref="MaxLength.Year" />
                      <formatMask idref="FormatMask.Year" />
                    </definition>
                  </public>
                  <public id="UpdatedServicesInfo.RoofUpdateType" path="RoofUpdateType" type="string">
                    <definition>
                      <caption value="Roof Update Type" />
                      <formatMask idref="FormatMask.BlankOption" />
                      <options>
                        <option value="Full" caption="Full" />
                        <option value="Partial" caption="Partial" />
                      </options>
                    </definition>
                  </public>
                  <public id="UpdatedServicesInfo.RoofUpdateYear" path="RoofUpdateYear" type="int">
                    <definition>
                      <caption value="Year roof was installed or updated" />
                      <maxLength idref="MaxLength.Year" />
                      <formatMask idref="FormatMask.Year" />
                    </definition>
                  </public>
                  <public id="UpdatedServicesInfo.UpdatedServices" path="UpdatedServices" type="boolean">
                    <definition>
                      <caption value="Updated Services" />
                    </definition>
                  </public>
                </object>
              </object>
              <object id="DwellingOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="DwellingOutput.AdjustedBasePremium" type="float" comment="" path="AdjustedBasePremium" class="excludeInChangeSummary" override="1">
                  <rules>
                    <value>
                      <select idref="DwellingInput.Form">
                        <case idref="CoverageADwellingOutput.Premium" type="float" select="HO1" />
                        <case idref="CoverageADwellingOutput.Premium" type="float" select="HO2" />
                        <case idref="CoverageADwellingOutput.Premium" type="float" select="HO3" />
                        <case idref="CoverageADwellingOutput.Premium" type="float" select="HO15" />
                        <case idref="CoverageCPersonalPropertyHO46Output.Premium" type="float" select="HO4" />
                        <case idref="CoverageCPersonalPropertyHO46Output.Premium" type="float" select="HO6" />
                        <otherwise idref="CoverageADwellingOutput.Premium" type="float" />
                      </select>
                    </value>
                    <affects>
                      <reference idref="DwellingPrivate.InitializePremium" effect="preEffect" />
                    </affects>
                  </rules>
                  <definition>
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.Premium" />
                    <readOnly idref="True" />
                    <caption>
                      <if>
                        <condition idref="DwellingPrivate.FormIsDwelling" />
                        <then value="Dwelling (A)" />
                        <else value="Personal Property (C)" />
                      </if>
                    </caption>
                  </definition>
                </public>
                <public id="DwellingOutput.AdjustedBasePremiumChange" type="float" comment="" path="AdjustedBasePremiumChange" class="excludeInChangeSummary">
                  <rules>
                    <value>
                      <select idref="DwellingInput.Form">
                        <case idref="CoverageADwellingOutput.PremiumChange" type="float" select="HO1" />
                        <case idref="CoverageADwellingOutput.PremiumChange" type="float" select="HO2" />
                        <case idref="CoverageADwellingOutput.PremiumChange" type="float" select="HO3" />
                        <case idref="CoverageADwellingOutput.PremiumChange" type="float" select="HO15" />
                        <case idref="CoverageCPersonalPropertyHO46Output.PremiumChange" type="float" select="HO4" />
                        <case idref="CoverageCPersonalPropertyHO46Output.PremiumChange" type="float" select="HO6" />
                        <otherwise idref="CoverageADwellingOutput.PremiumChange" type="float" />
                      </select>
                    </value>
                  </rules>
                  <definition>
                    <caption value="Adjusted Base Premium Change" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <maxLength idref="MaxLength.Premium" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public id="DwellingOutput.AdjustedBasePremiumWritten" type="float" comment="" path="AdjustedBasePremiumWritten" class="excludeInChangeSummary">
                  <rules>
                    <value>
                      <select idref="DwellingInput.Form">
                        <case idref="CoverageADwellingOutput.PremiumWritten" type="float" select="HO1" />
                        <case idref="CoverageADwellingOutput.PremiumWritten" type="float" select="HO2" />
                        <case idref="CoverageADwellingOutput.PremiumWritten" type="float" select="HO3" />
                        <case idref="CoverageADwellingOutput.PremiumWritten" type="float" select="HO15" />
                        <case idref="CoverageCPersonalPropertyHO46Output.PremiumWritten" type="float" select="HO4" />
                        <case idref="CoverageCPersonalPropertyHO46Output.PremiumWritten" type="float" select="HO6" />
                        <otherwise idref="CoverageADwellingOutput.PremiumWritten" type="float" />
                      </select>
                    </value>
                  </rules>
                  <definition>
                    <caption value="Adjusted Base Premium Written" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <maxLength idref="MaxLength.Premium" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public id="DwellingOutput.GeneratedTerritory" path="exposure[Type=&quot;GeneratedTerritory&quot;]/GeneratedTerritory" type="int">
                  <definition>
                    <caption value="Generated Territory" />
                    <options>
                      <option value="30" caption="30" />
                      <option value="31" caption="31" />
                      <option value="32" caption="32" />
                      <option value="33" caption="33" />
                      <option value="34" caption="34" />
                    </options>
                    <maxLength value="3" />
                  </definition>
                </public>
                <public id="DwellingOutput.ISOProtectionClass" path="ISOProtectionClass" type="string">
                  <definition>
                    <caption value="Protection Class" />
                    <maxLength value="7" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public id="DwellingOutput.RatedTerritory" path="RatedTerritory" type="string">
                  <definition>
                    <caption value="Territory" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <lookup>
                        <tableRef value="TerritoriesByCounty" />
                        <fieldRef value="Territory" />
                        <keyRef idref="LocationInput.County" type="string" name="County" />
                      </lookup>
                    </value>
                  </rules>
                </public>
                <object id="DwellingOutputNonShredded">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" path="AdjustedBasePremiumAccumulativeValue" type="float" class="excludeInChangeSummary" alwaysRun="1">
                    <definition>
                      <caption value="Adjusted Base Premium Accumulative Value" />
                      <maxLength idref="MaxLength.Premium" />
                    </definition>
                    <rules>
                      <default value="0" />
                    </rules>
                  </public>
                  <public id="DwellingOutputNonShredded.BasePremiumAccumulativeValue" type="float" comment="" path="BasePremiumAccumulativeValue" class="excludeInChangeSummary" alwaysRun="1">
                    <definition>
                      <maxLength idref="MaxLength.Premium" />
                      <caption value="Base Premium Accumulative Value" />
                    </definition>
                    <rules>
                      <default value="0" />
                    </rules>
                  </public>
                  <public id="DwellingOutputNonShredded.RatedProtectionClassIsSet" path="RatedProtectionClassIsSet" type="boolean">
                    <definition>
                      <caption value="Rated Protection Class Is Set" />
                    </definition>
                    <rules>
                      <default idref="False" />
                    </rules>
                  </public>
                </object>
                <public id="DwellingOutput.DeductibleCalculation" path="DeductibleCalculation" type="float">
                  <definition>
                    <caption value="Deductible Adjustment" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                    <maxLength idref="MaxLength.Premium" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" type="float" />
                        <argument op="multiply">
                          <calculation>
                            <argument op="eq" idref="DeductiblePrivate.Factor" type="float" />
                            <argument op="subtract" type="int" value="1" />
                          </calculation>
                        </argument>
                        <argument op="multiply" round="1" roundType="round" type="int" value="1" />
                      </calculation>
                    </value>
                    <affects>
                      <reference idref="DeductiblePrivate.SetAdjustedBasePremium" effect="postEffect" />
                    </affects>
                  </rules>
                  <worksheet>
                    <summarize idref="True" />
                  </worksheet>
                </public>
              </object>
              <object id="DwellingPrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="DwellingPrivate.AdditionalResidenceCount" caption="" type="int" path="AdditionalResidenceCount">
                  <value>
                    <iterator type="int" scope="all" action="count" idref="AdditionalResidence" />
                  </value>
                </private>
                <private id="DwellingPrivate.AgeOfDwelling" caption="" type="int" path="AgeOfDwelling">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="DwellingInput.YearBuilt" type="int" />
                          <operand type="string" value="" />
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="EffectiveDate.EffectiveYear" type="int" />
                          <argument op="subtract" idref="DwellingInput.YearBuilt" type="int" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                </private>
                <private id="DwellingPrivate.BaseLimit" type="float" path="BaseLimit">
                  <value>
                    <if>
                      <condition idref="DwellingPrivate.FormIsCondoOrTenant" />
                      <then idref="CoverageCPersonalPropertyHO46Input.Limit" />
                      <else idref="CoverageADwellingInput.Limit" />
                    </if>
                  </value>
                </private>
                <private id="DwellingPrivate.DollarAmountOfFivePercentDeductible" caption="" type="float" path="DollarAmountOfFivePercentDeductible">
                  <value>
                    <calculation>
                      <argument op="eq" idref="CoverageADwellingInput.Limit" type="int" />
                      <argument op="multiply" type="float" value="0.05" />
                    </calculation>
                  </value>
                </private>
                <private id="DwellingPrivate.DollarAmountOfOnePercentDeductible" caption="" type="float" path="DollarAmountOfOnePercentDeductible">
                  <value>
                    <calculation>
                      <argument op="eq" idref="CoverageADwellingInput.Limit" type="int" />
                      <argument op="multiply" type="float" value="0.01" />
                    </calculation>
                  </value>
                </private>
                <private id="DwellingPrivate.DollarAmountOfTwoPercentDeductible" caption="" type="float" path="DollarAmountOfTwoPercentDeductible">
                  <value>
                    <calculation>
                      <argument op="eq" idref="CoverageADwellingInput.Limit" type="int" />
                      <argument op="multiply" type="float" value="0.02" />
                    </calculation>
                  </value>
                </private>
                <private id="DwellingPrivate.FirstProtectionClassOfSplit" caption="" type="string" path="FirstProtectionClassOfSplit">
                  <value>
                    <subString subStrMethod="startPosition">
                      <sourceString idref="DwellingPrivate.ProtectionClassCheck" />
                      <startPos value="1" />
                      <length value="1" />
                    </subString>
                  </value>
                </private>
                <private id="DwellingPrivate.FormIsCondoOrTenant" caption="" type="boolean" path="FormIsCondoOrTenant">
                  <value>
                    <comparison compare="is">
                      <operand idref="DwellingInput.Form" type="string" />
                      <operand type="string" value="HO4,HO6" />
                    </comparison>
                  </value>
                </private>
                <private id="DwellingPrivate.FormIsDwelling" caption="" type="boolean" path="FormIsDwelling">
                  <value>
                    <comparison compare="is">
                      <operand idref="DwellingInput.Form" type="string" />
                      <operand type="string" value="HO1,HO2,HO3,HO15,HO8" />
                    </comparison>
                  </value>
                </private>
                <private id="DwellingPrivate.FormIsHO1" caption="" type="boolean" path="FormIsHO1">
                  <value>
                    <comparison compare="eq">
                      <operand idref="DwellingInput.Form" type="string" />
                      <operand type="string" value="HO1" />
                    </comparison>
                  </value>
                </private>
                <private id="DwellingPrivate.FormIsHO15" caption="" type="boolean" path="FormIsHO15">
                  <value>
                    <comparison compare="eq">
                      <operand idref="DwellingInput.Form" type="string" />
                      <operand type="string" value="HO15" />
                    </comparison>
                  </value>
                </private>
                <private id="DwellingPrivate.FormIsHO2" caption="" type="boolean" path="FormIsHO2">
                  <value>
                    <comparison compare="eq">
                      <operand idref="DwellingInput.Form" type="string" />
                      <operand type="string" value="HO2" />
                    </comparison>
                  </value>
                </private>
                <private id="DwellingPrivate.FormIsHO3" caption="" type="boolean" path="FormIsHO3">
                  <value>
                    <comparison compare="eq">
                      <operand idref="DwellingInput.Form" type="string" />
                      <operand type="string" value="HO3" />
                    </comparison>
                  </value>
                </private>
                <private id="DwellingPrivate.FormIsHO4" caption="" type="boolean" path="FormIsHO4">
                  <value>
                    <comparison compare="eq">
                      <operand idref="DwellingInput.Form" type="string" />
                      <operand type="string" value="HO4" />
                    </comparison>
                  </value>
                </private>
                <private id="DwellingPrivate.FormIsHO6" caption="" type="boolean" path="FormIsHO6">
                  <value>
                    <comparison compare="eq">
                      <operand idref="DwellingInput.Form" type="string" />
                      <operand type="string" value="HO6" />
                    </comparison>
                  </value>
                </private>
                <private id="DwellingPrivate.FormIsHO8" caption="" type="boolean" path="FormIsHO8">
                  <value>
                    <comparison compare="eq">
                      <operand idref="DwellingInput.Form" type="string" />
                      <operand type="string" value="HO8" />
                    </comparison>
                  </value>
                </private>
                <private id="DwellingPrivate.HideCoverageCLimit" caption="" type="boolean" path="HideCoverageCLimit">
                  <value>
                    <comparison compare="or">
                      <comparison compare="is">
                        <operand idref="DwellingInput.Form" type="string" />
                        <operand type="string" value="HO1,HO2,HO3,HO15,HO8" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="DwellingInput.Form" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="DwellingPrivate.IsFivePercentValid" caption="" type="boolean" path="IsFivePercentValid">
                  <value>
                    <comparison compare="gt">
                      <operand idref="DwellingPrivate.DollarAmountOfFivePercentDeductible" type="float" />
                      <operand idref="DwellingInput.Deductible" type="int" />
                    </comparison>
                  </value>
                </private>
                <private id="DwellingPrivate.IsOnePercentValid" caption="" type="boolean" path="IsOnePercentValid">
                  <value>
                    <comparison compare="gt">
                      <operand idref="DwellingPrivate.DollarAmountOfOnePercentDeductible" type="float" />
                      <operand idref="DwellingInput.Deductible" type="int" />
                    </comparison>
                  </value>
                </private>
                <private id="DwellingPrivate.IsTwoPercentValid" caption="" type="boolean" path="IsTwoPercentValid">
                  <value>
                    <comparison compare="gt">
                      <operand idref="DwellingPrivate.DollarAmountOfTwoPercentDeductible" type="float" />
                      <operand idref="DwellingInput.Deductible" type="int" />
                    </comparison>
                  </value>
                </private>
                <private id="DwellingPrivate.MaximumYearBuilt" caption="" type="int" path="MaximumYearBuilt">
                  <value>
                    <calculation>
                      <argument op="eq" idref="EffectiveDate.EffectiveYear" type="int" />
                      <argument op="add" type="int" value="1" />
                    </calculation>
                  </value>
                </private>
                <private id="DwellingPrivate.ProtectionClassCheck" caption="" type="string" path="ProtectionClassCheck">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="ne">
                          <operand idref="DwellingOutput.ISOProtectionClass" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </condition>
                      <then idref="DwellingOutput.ISOProtectionClass" />
                      <else idref="DwellingInput.RatedProtectionClass" />
                    </if>
                  </value>
                </private>
                <private id="DwellingPrivate.QualifiesForSuburbanRating" caption="" type="boolean" path="QualifiesForSuburbanRating">
                  <value>
                    <comparison compare="and">
                      <comparison compare="and">
                        <comparison compare="or">
                          <comparison compare="contains">
                            <operand idref="DwellingInput.RatedProtectionClass" type="string" />
                            <operand type="int" value="9" />
                          </comparison>
                          <comparison compare="contains">
                            <operand idref="DwellingInput.RatedProtectionClass" type="string" />
                            <operand type="int" value="88" />
                          </comparison>
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="DwellingInput.UseType" type="string" />
                          <operand type="string" value="Primary" />
                        </comparison>
                      </comparison>
                      <comparison compare="is">
                        <operand idref="DwellingInput.Form" type="string" />
                        <operand type="string" value="HO2,HO3" />
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="DwellingPrivate.SetOccupancyType" caption="" type="string" path="SetOccupancyType">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="DwellingInput.Form" type="string" />
                          <operand type="string" value="HO4" />
                        </comparison>
                      </condition>
                      <then value="Tenant" />
                      <else value="Owner" />
                    </if>
                  </value>
                  <affects>
                    <reference idref="DwellingInput.OccupancyType" effect="setValue" />
                  </affects>
                </private>
                <private id="DwellingPrivate.SplitPPCDetermination" caption="" type="string" path="SplitPPCDetermination">
                  <misc>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="le">
                            <operand idref="DwellingInput.DistanceToFireStation" type="int" />
                            <operand type="int" value="5" />
                          </comparison>
                          <comparison compare="lt">
                            <operand idref="DwellingInput.DistanceToHydrant" type="int" />
                            <operand type="int" value="1000" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="DwellingPrivate.FirstProtectionClassOfSplit" />
                    </if>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="le">
                            <operand idref="DwellingInput.DistanceToFireStation" type="int" />
                            <operand type="int" value="5" />
                          </comparison>
                          <comparison compare="ge">
                            <operand idref="DwellingInput.DistanceToHydrant" type="int" />
                            <operand type="int" value="1000" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then value="9" />
                    </if>
                    <if>
                      <condition>
                        <comparison compare="gt">
                          <operand idref="DwellingInput.DistanceToFireStation" type="int" />
                          <operand type="int" value="5" />
                        </comparison>
                      </condition>
                      <then value="10" />
                    </if>
                  </misc>
                </private>
                <private id="DwellingPrivate.SuburbanPPCDetermination" caption="" type="string" path="SuburbanPPCDetermination">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="and">
                            <comparison compare="lt">
                              <operand idref="DwellingInput.DistanceToFireStation" type="int" />
                              <operand type="int" value="6" />
                            </comparison>
                            <comparison compare="eq">
                              <operand idref="DwellingInput.DwellingAccessibleToFireEquipment" type="string" />
                              <operand type="string" value="Y" />
                            </comparison>
                          </comparison>
                          <comparison compare="lt">
                            <operand idref="DwellingInput.DistanceToWaterSource" type="int" />
                            <operand type="int" value="1000" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then value="88" />
                    </if>
                  </value>
                  <misc>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="DwellingPrivate.SuburbanPPCDetermination" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                          <comparison compare="ne">
                            <operand idref="DwellingOutput.ISOProtectionClass" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="DwellingOutput.ISOProtectionClass" />
                    </if>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="and">
                            <comparison compare="eq">
                              <operand idref="DwellingPrivate.SuburbanPPCDetermination" type="string" />
                              <operand type="string" value="" />
                            </comparison>
                            <comparison compare="eq">
                              <operand idref="DwellingOutput.ISOProtectionClass" type="string" />
                              <operand type="string" value="" />
                            </comparison>
                          </comparison>
                          <comparison compare="ne">
                            <operand idref="DwellingInput.RatedProtectionClass" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="DwellingInput.RatedProtectionClass" />
                    </if>
                  </misc>
                </private>
                <object id="DeductiblePrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="DeductiblePrivate.AllPerilsWindDeductibleFactor" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="DeductibleFactors" />
                        <fieldRef value="Factor" />
                        <keyRef idref="DwellingInput.Deductible" type="int" name="Deductible" />
                        <keyRef idref="DwellingInput.WindDeductible" type="string" name="Wind Deductible" />
                      </lookup>
                    </value>
                  </private>
                  <private id="DeductiblePrivate.SetAdjustedBasePremium" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" type="float" />
                        <argument op="add" idref="DwellingOutput.DeductibleCalculation" type="float" />
                      </calculation>
                    </value>
                    <affects>
                      <reference idref="DwellingOutputNonShredded.AdjustedBasePremiumAccumulativeValue" effect="setValue" />
                    </affects>
                  </private>
                  <private id="DeductiblePrivate.TheftDeductibleFactor" caption="" type="float">
                    <value>
                      <lookup>
                        <tableRef value="TheftDeductibleFactors" />
                        <fieldRef value="Factor" />
                        <keyRef idref="DwellingInput.Form" type="string" name="Form" />
                      </lookup>
                    </value>
                  </private>
                  <private id="DeductiblePrivate.Factor" type="float" comment="" caption="Factor">
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="DwellingInput.Deductible" type="int" />
                            <operand type="int" value="100250" />
                          </comparison>
                        </condition>
                        <then idref="DeductiblePrivate.TheftDeductibleFactor" />
                        <else idref="DeductiblePrivate.AllPerilsWindDeductibleFactor" />
                      </if>
                    </value>
                    <worksheet suppress="1">
                      <caption value="Deductible Factor" />
                    </worksheet>
                  </private>
                </object>
                <private id="DwellingPrivate.PolicyCoverageCLimit" caption="" type="float">
                  <value>
                    <if>
                      <condition idref="DwellingPrivate.FormIsCondoOrTenant" />
                      <then idref="CoverageCPersonalPropertyHO46Input.Limit" />
                      <else idref="CoverageCPersonalPropertyHO3Input.Limit" />
                    </if>
                  </value>
                </private>
                <private id="DwellingPrivate.PolicyCoverageCPremium" caption="" type="string">
                  <value>
                    <if>
                      <condition idref="DwellingPrivate.FormIsCondoOrTenant" />
                      <then idref="CoverageCPersonalPropertyHO46Output.Premium" />
                      <else value="Incl In Cov A" />
                    </if>
                  </value>
                </private>
                <private id="DwellingPrivate.InitializePremium" caption="" type="float">
                  <value>
                    <if>
                      <condition idref="DwellingPrivate.FormIsCondoOrTenant" />
                      <then idref="CoverageADwellingPrivate.ClearDwellingPremiums" />
                      <else idref="CoverageCPersonalPropertyHO46Private.ClearCoverageCHO46Premiums" />
                    </if>
                  </value>
                </private>
                <private id="DwellingPrivate.Is88Valid" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <comparison compare="and">
                        <comparison compare="and">
                          <comparison compare="and">
                            <comparison compare="is">
                              <operand idref="DwellingInput.Form" type="string" />
                              <operand type="string" value="HO2,HO3" />
                            </comparison>
                            <comparison compare="eq">
                              <operand idref="DwellingInput.UseType" type="string" />
                              <operand type="string" value="Primary" />
                            </comparison>
                          </comparison>
                          <comparison compare="lt">
                            <operand idref="DwellingInput.DistanceToFireStation" type="int" />
                            <operand type="int" value="6" />
                          </comparison>
                        </comparison>
                        <comparison compare="lt">
                          <operand idref="DwellingInput.DistanceToWaterSource" type="int" />
                          <operand type="int" value="1000" />
                        </comparison>
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="DwellingInput.DwellingAccessibleToFireEquipment" type="string" />
                        <operand type="string" value="Y" />
                      </comparison>
                    </comparison>
                  </value>
                  <affects>
                    <reference idref="DwellingInput.DistanceToHydrant" effect="postEffect" />
                  </affects>
                </private>
                <private id="DwellingPrivate.ShowSplitPPCOptions" caption="" type="boolean">
                  <value>
                    <comparison compare="contains">
                      <operand idref="DwellingOutput.ISOProtectionClass" type="string" />
                      <operand type="string" value="/" />
                    </comparison>
                  </value>
                </private>
                <private id="DwellingPrivate.UseTypeIsNotPrimary" caption="" type="boolean">
                  <value>
                    <comparison compare="ne">
                      <operand idref="DwellingInput.UseType" type="string" />
                      <operand type="string" value="Primary" />
                    </comparison>
                  </value>
                </private>
                <private id="DwellingPrivate.FormIsDwellingOrCondo" caption="" type="boolean" path="FormIsDwelling">
                  <value>
                    <comparison compare="is">
                      <operand idref="DwellingInput.Form" type="string" />
                      <operand type="string" value="HO1,HO2,HO3,HO15,HO8,HO6" />
                    </comparison>
                  </value>
                </private>
                <private id="DwellingPrivate.DollarAmountOfTenPercentDeductible" caption="" type="float" path="DollarAmountOfFivePercentDeductible">
                  <value>
                    <calculation>
                      <argument op="eq" idref="CoverageADwellingInput.Limit" type="int" />
                      <argument op="multiply" type="float" value="0.10" />
                    </calculation>
                  </value>
                </private>
                <private id="DwellingPrivate.IsTenPercentValid" caption="" type="boolean" path="IsFivePercentValid">
                  <value>
                    <comparison compare="gt">
                      <operand idref="DwellingPrivate.DollarAmountOfTenPercentDeductible" type="float" />
                      <operand idref="DwellingInput.Deductible" type="int" />
                    </comparison>
                  </value>
                </private>
                <private id="DwellingPrivate.FormIsDwellingNot" caption="" type="boolean" path="FormIsDwelling">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="is">
                          <operand idref="DwellingInput.Form" type="string" />
                          <operand type="string" value="HO1,HO2,HO3,HO15,HO8" />
                        </comparison>
                      </condition>
                      <then value="0" />
                    </if>
                  </value>
                </private>
              </object>
            </object>
          </object>
          <object id="LineInput" abstract="1">
            <public id="LineInput.Tier" path="Tier" type="string">
              <definition>
                <caption value="Tier" />
                <options>
                  <option value="Standard" caption="Standard" />
                  <option value="Preferred" caption="Preferred" />
                </options>
                <formatMask idref="FormatMask.BlankOption" />
                <readOnly idref="True" />
              </definition>
              <rules>
                <default value="Standard" />
              </rules>
            </public>
            <object id="UnderwritingQuestions" path="underwritingPersonalHome">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="UnderwritingQuestionsPrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="UnderwritingQuestionsPrivate.IsAnyBusinessConducted" caption="" type="boolean" path="IsAnyBusinessConducted">
                  <value>
                    <comparison compare="eq">
                      <operand idref="UnderwritingQuestionsInput.AnyBusinessConducted" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </value>
                </private>
                <private id="UnderwritingQuestionsPrivate.IsAnyOtherInsurance" caption="" type="boolean" path="IsAnyOtherInsurance">
                  <value>
                    <comparison compare="eq">
                      <operand idref="UnderwritingQuestionsInput.AnyOtherInsurance" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </value>
                </private>
                <private id="UnderwritingQuestionsPrivate.IsAnySwimmingPool" caption="" type="boolean" path="IsAnyBusinessConducted">
                  <value>
                    <comparison compare="eq">
                      <operand idref="UnderwritingQuestionsInput.SwimmingPool" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </value>
                </private>
              </object>
              <object id="BusinessSubQuestions">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="BusinessSubQuestions.BusinessConductedTypeOfBusiness" path="BusinessConductedTypeOfBusiness" type="string">
                  <definition>
                    <caption value="Type of business" />
                    <maxLength value="13" />
                    <formatMask idref="FormatMask.BlankOption" />
                    <required idref="True" />
                    <options>
                      <option value="Office" caption="Office" />
                      <option value="Professional" caption="Professional" />
                      <option value="ServiceRepair" caption="Service/repair" />
                      <option value="Childcare" caption="Childcare" />
                      <option value="Mercantile" caption="Mercantile" />
                      <option value="Manufacturing" caption="Manufacturing" />
                    </options>
                  </definition>
                </public>
                <public id="BusinessSubQuestions.BusinessConductedOwnership" path="BusinessConductedOwnership" type="string">
                  <definition>
                    <caption value="Ownership" />
                    <maxLength value="7" />
                    <formatMask idref="FormatMask.BlankOption" />
                    <required idref="True" />
                    <options>
                      <option value="Insured" caption="Insured" />
                      <option value="Other" caption="Other" />
                    </options>
                  </definition>
                </public>
                <public id="BusinessSubQuestions.BusinessConductedLocation" path="BusinessConductedLocation" type="string">
                  <definition>
                    <caption value="Location" />
                    <maxLength value="14" />
                    <formatMask idref="FormatMask.BlankOption" />
                    <required idref="True" />
                    <options>
                      <option value="Dwelling" caption="Dwelling" />
                      <option value="OtherStructure" caption="Other structure" />
                    </options>
                  </definition>
                </public>
                <public id="BusinessSubQuestions.BusinessConductedCustomers" path="BusinessConductedCustomers" type="string">
                  <definition>
                    <caption value="# of customers on premises (per week)" />
                    <maxLength value="6" />
                    <formatMask idref="FormatMask.BlankOption" />
                    <required idref="True" />
                    <options>
                      <option value="0" caption="0" />
                      <option value="1" caption="1 - 10" />
                      <option value="10" caption="10 +" />
                    </options>
                  </definition>
                </public>
                <public id="BusinessSubQuestions.BusinessConductedNonResidentEmployees" path="BusinessConductedNonResidentEmployees" type="string">
                  <definition>
                    <caption value="Any non-resident employees" />
                    <maxLength value="3" />
                    <formatMask idref="FormatMask.BlankOption" />
                    <required idref="True" />
                    <options>
                      <option value="0" caption="No" />
                      <option value="1" caption="Yes" />
                    </options>
                  </definition>
                </public>
                <public id="BusinessSubQuestions.BusinessConductedCommercialCoverageInForce" path="BusinessConductedCommercialCoverageInForce" type="string">
                  <definition>
                    <caption value="Commercial coverage in force with our company" />
                    <maxLength value="3" />
                    <formatMask idref="FormatMask.BlankOption" />
                    <required idref="True" />
                    <options>
                      <option value="0" caption="No" />
                      <option value="1" caption="Yes" />
                    </options>
                  </definition>
                </public>
              </object>
              <object id="OtherInsurancePolicies" path="otherInsurancePolicies">
                <minOccurs value="1" />
                <maxOccurs value="*" />
                <public id="OtherInsurancePolicies.PolicyNumber" path="PolicyNumber" type="string">
                  <definition>
                    <caption value="Policy Number" />
                    <maxLength value="12" />
                  </definition>
                </public>
              </object>
              <object id="UnderwritingQuestionsInput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="UnderwritingQuestionsInput.AnyBusinessConducted" path="AnyBusinessConducted" type="boolean">
                  <definition>
                    <caption value="Any business conducted on premises? (including child care/day care)" />
                    <maxLength value="1" />
                    <formatMask idref="FormatMask.Radio" />
                    <options>
                      <option value="0" caption="No" />
                      <option value="1" caption="Yes" />
                    </options>
                  </definition>
                </public>
                <public id="UnderwritingQuestionsInput.AnyCoverageDeclinedCancelled" path="AnyCoverageDeclinedCancelled" type="boolean">
                  <definition>
                    <caption value="Any Coverage Declined, cancelled or non-renewed (not at the Insured's request) during the last 3 years?" />
                    <maxLength value="1" />
                    <formatMask idref="FormatMask.Radio" />
                    <options>
                      <option value="0" caption="No" />
                      <option value="1" caption="Yes" />
                    </options>
                  </definition>
                </public>
                <public id="UnderwritingQuestionsInput.AnyOtherInsurance" path="AnyOtherInsurance" type="boolean">
                  <definition>
                    <caption value="Any other insurance with this company? (List policy numbers)" />
                    <maxLength value="1" />
                    <formatMask idref="FormatMask.Radio" />
                    <options>
                      <option value="0" caption="No" />
                      <option value="1" caption="Yes" />
                    </options>
                  </definition>
                </public>
                <public id="UnderwritingQuestionsInput.ForeclosureBankruptcy" path="ForeclosureBankruptcy" type="string">
                  <definition>
                    <caption value="Has applicant had a foreclosure, repossessions, bankruptcy, judgement or lien during the past five years?" />
                    <maxLength value="1" />
                    <formatMask idref="FormatMask.Radio" />
                    <options>
                      <option value="0" caption="No" />
                      <option value="1" caption="Yes" />
                    </options>
                  </definition>
                </public>
                <public id="UnderwritingQuestionsInput.IndictedOrConvicted" path="IndictedOrConvicted" type="string">
                  <definition>
                    <caption value="During the last ten (10) years, has any applicant been indicted for or convicted of any degree of the crime of fraud, bribery, arson or any other arson-related crime in connection with this or any other property? (In RI, failure to disclose the existence of an arson conviction is a misdemeanor punishable by a sentence of up to one (1) year of imprisonment.)" />
                    <maxLength value="1" />
                    <formatMask idref="FormatMask.Radio" />
                    <options>
                      <option value="0" caption="No" />
                      <option value="1" caption="Yes" />
                    </options>
                  </definition>
                </public>
                <public id="UnderwritingQuestionsInput.IsBuildingUndergoingRenovation" path="IsBuildingUndergoingRenovation" type="string">
                  <definition>
                    <caption value="Is building undergoing renovation or reconstruction?" />
                    <maxLength value="1" />
                    <formatMask idref="FormatMask.Radio" />
                    <options>
                      <option value="0" caption="No" />
                      <option value="1" caption="Yes" />
                    </options>
                  </definition>
                </public>
                <public id="UnderwritingQuestionsInput.IsHouseForSale" path="IsHouseForSale" type="string">
                  <definition>
                    <caption value="Is house for sale?" />
                    <maxLength value="1" />
                    <formatMask idref="FormatMask.Radio" />
                    <options>
                      <option value="0" caption="No" />
                      <option value="1" caption="Yes" />
                    </options>
                  </definition>
                </public>
                <public id="UnderwritingQuestionsInput.IsPropertyWithin300FtOfCommercialProp" path="IsPropertyWithin300FtOfCommercialProp" type="string">
                  <definition>
                    <caption value="Is property within 300 ft of a commercial or non-residential property?" />
                    <maxLength value="1" />
                    <formatMask idref="FormatMask.Radio" />
                    <options>
                      <option value="0" caption="No" />
                      <option value="1" caption="Yes" />
                    </options>
                  </definition>
                </public>
                <public id="UnderwritingQuestionsInput.IsThereATrampolineOnPremises" path="IsThereATrampolineOnPremises" type="string">
                  <definition>
                    <caption value="Is there a trampoline on the premises?" />
                    <maxLength value="1" />
                    <formatMask idref="FormatMask.Radio" />
                    <options>
                      <option value="0" caption="No" />
                      <option value="1" caption="Yes" />
                    </options>
                  </definition>
                </public>
                <public id="UnderwritingQuestionsInput.AnyAnimalsOrExoticPets" path="AnyAnimalsOrExoticPets" type="string">
                  <definition>
                    <caption value="Are there any animals or exotic pets kept on premises?" />
                    <maxLength value="1" />
                    <formatMask idref="FormatMask.Radio" />
                    <options>
                      <option value="0" caption="No" />
                      <option value="1" caption="Yes" />
                    </options>
                  </definition>
                </public>
                <public id="UnderwritingQuestionsInput.IsHouseInGatedCommunity" path="IsHouseInGatedCommunity" type="string">
                  <definition>
                    <caption value="Is house In gated community?" />
                    <options>
                      <option value="0" caption="No" />
                      <option value="1" caption="Yes" />
                    </options>
                    <maxLength value="1" />
                    <formatMask idref="FormatMask.Radio" />
                  </definition>
                </public>
                <public id="UnderwritingQuestionsInput.IsolatedProperty" path="IsolatedProperty" type="string">
                  <definition>
                    <caption value="Is the property isolated and/or not visable from a paved road or neighboring residence?" />
                    <maxLength value="1" />
                    <formatMask idref="FormatMask.Radio" />
                    <options>
                      <option value="0" caption="No" />
                      <option value="1" caption="Yes" />
                    </options>
                  </definition>
                </public>
                <public id="UnderwritingQuestionsInput.SwimmingPool" path="SwimmingPool" type="boolean">
                  <definition>
                    <caption value="Is there a swimming pool?" />
                    <maxLength value="1" />
                    <formatMask idref="FormatMask.Radio" />
                    <options>
                      <option value="0" caption="No" />
                      <option value="1" caption="Yes" />
                    </options>
                  </definition>
                </public>
                <object id="AnimalPetSubQuestions">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="AnimalPetSubQuestions.IneligibleDogBreeds" path="IneligibleDogBreeds" type="boolean">
                    <definition>
                      <caption value="Are there any dogs classified as, or a mix of one of the following breeds? Akita; American Pit Bull Terrier; American Staffordshire Terrier; Catahoula Leopard; Chow; Doberman Pinscher; Gernam Shepherd; Husky; Malamute; Pit Bull; Persa Canario; Rottweill" />
                      <options>
                        <option value="0" caption="No" />
                        <option value="1" caption="Yes" />
                      </options>
                      <formatMask idref="FormatMask.Radio" />
                    </definition>
                  </public>
                  <public id="AnimalPetSubQuestions.LivestockSaddleAnimals" path="LivestockSaddleAnimals" type="boolean">
                    <definition>
                      <caption value="Are there any livestock or saddle animals on the premises?" />
                      <options>
                        <option value="0" caption="No" />
                        <option value="1" caption="Yes" />
                      </options>
                      <formatMask idref="FormatMask.Radio" />
                    </definition>
                  </public>
                  <public id="AnimalPetSubQuestions.Reptilesamphibians" path="Reptilesamphibians" type="boolean">
                    <definition>
                      <caption value="Are there any reptiles or amphibians on premises?" />
                      <options>
                        <option value="0" caption="No" />
                        <option value="1" caption="Yes" />
                      </options>
                      <formatMask idref="FormatMask.Radio" />
                    </definition>
                  </public>
                  <public id="AnimalPetSubQuestions.ViciousAnimal" path="ViciousAnimal" type="boolean">
                    <definition>
                      <caption value="Are there any animals that are vicious, aggressive or have a history of biting or attacking?" />
                      <options>
                        <option value="0" caption="No" />
                        <option value="1" caption="Yes" />
                      </options>
                      <formatMask idref="FormatMask.Radio" />
                    </definition>
                  </public>
                  <public id="AnimalPetSubQuestions.AnimalWeight" path="AnimalWeight" type="int">
                    <definition>
                      <caption value="Weight of animal" />
                    </definition>
                  </public>
                  <public id="AnimalPetSubQuestions.AnimalDescription" path="AnimalDescription" type="string">
                    <definition>
                      <caption value="Animal Description" />
                    </definition>
                  </public>
                </object>
              </object>
              <object id="SwimmingPoolSubQuestions">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="SwimmingPoolSubQuestions.ApprovedFence" path="ApprovedFence" type="boolean">
                  <definition>
                    <caption value="Approved Fence" />
                  </definition>
                </public>
                <public id="SwimmingPoolSubQuestions.DivingBoard" path="DivingBoard" type="boolean">
                  <definition>
                    <caption value="Diving Board" />
                  </definition>
                </public>
                <public id="SwimmingPoolSubQuestions.PoolType" path="PoolType" type="string">
                  <definition>
                    <caption value="Pool Type" />
                    <options>
                      <option value="In" caption="In ground" />
                      <option value="Above" caption="Above ground" />
                    </options>
                  </definition>
                </public>
                <public id="SwimmingPoolSubQuestions.Slide" path="Slide" type="boolean">
                  <definition>
                    <caption value="Slide" />
                  </definition>
                </public>
              </object>
            </object>
            <public id="LineInput.CoveragePackage" path="CoveragePackage" type="string" override="1">
              <definition>
                <caption value="Coverage Package" />
                <options>
                  <option value="Economy" caption="Economy" />
                  <option value="Standard" caption="Standard" default="1" />
                  <option value="Deluxe" caption="Deluxe" />
                  <option value="Plus" caption="Plus" />
                  <option value="Custom" caption="Custom" />
                </options>
              </definition>
              <rules>
                <affects>
                  <reference idref="LinePrivate.SetDefaults" effect="onChange" />
                  <reference idref="data.TotalPremiumChange" effect="onChange" />
                  <reference idref="ExecutePremiums.Value" effect="onChange" />
                </affects>
                <default value="Standard" />
              </rules>
            </public>
          </object>
          <object id="SPP" path="SPP">
            <minOccurs value="0" />
            <maxOccurs value="*" />
            <object id="SPPInput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="SPPInput.Limit" path="Limit" type="int">
                <definition>
                  <caption value="SPP Limit" />
                  <maxLength value="8" />
                  <formatMask idref="FormatMask.Limit" />
                </definition>
                <rules>
                  <default value="0" />
                  <minimum value="0" />
                  <maximum idref="MaxValue.MaxValueLimitInt" />
                </rules>
                <worksheet />
              </public>
              <public id="SPPInput.Type" path="Type" type="string">
                <definition>
                  <caption value="Type" />
                  <options>
                    <option value="Cameras" caption="Cameras" />
                    <option value="Coins" caption="Coins" />
                    <option value="FineArts" caption="Fine Arts" />
                    <option value="Furs" caption="Furs" />
                    <option value="GolfEquipment" caption="Golf Equipment" />
                    <option value="Jewelry" caption="Jewelry" />
                    <option value="MusicalInstruments" caption="Musical Instruments (non prof)" />
                    <option value="Silverware" caption="Silverware" />
                    <option value="Stamps" caption="Stamps" />
                    <option value="SportsEquipment" caption="Sports Equipment" />
                  </options>
                  <maxLength value="18" />
                  <formatMask idref="FormatMask.BlankOption" />
                  <required idref="True" />
                </definition>
              </public>
              <public id="SPPInput.Description" path="Description" type="string">
                <definition>
                  <caption value="Description" />
                  <maxLength value="30" />
                </definition>
              </public>
              <public id="SPPInput.BreakageCoverage" path="BreakageCoverage" type="boolean">
                <definition>
                  <caption value="Breakage" />
                  <maxLength value="1" />
                  <readOnly>
                    <comparison compare="ne">
                      <operand idref="SPPInput.Type" type="string" />
                      <operand type="string" value="FineArts" />
                    </comparison>
                  </readOnly>
                </definition>
                <rules>
                  <default idref="False" />
                  <misc>
                    <if>
                      <condition>
                        <comparison compare="ne">
                          <operand idref="SPPInput.Type" type="string" />
                          <operand type="string" value="FineArts" />
                        </comparison>
                      </condition>
                      <then idref="False" />
                    </if>
                  </misc>
                </rules>
              </public>
              <public id="SPPInput.Vaulted" path="Vaulted" type="boolean">
                <definition>
                  <caption value="Vaulted" />
                  <maxLength value="1" />
                  <readOnly>
                    <comparison compare="isnot">
                      <operand idref="SPPInput.Type" type="string" />
                      <operand type="string" value="Stamps,Coins,Jewelry" />
                    </comparison>
                  </readOnly>
                </definition>
                <rules>
                  <misc>
                    <if>
                      <condition>
                        <comparison compare="isnot">
                          <operand idref="SPPInput.Type" type="string" />
                          <operand type="string" value="Stamps,Coins,Jewelry" />
                        </comparison>
                      </condition>
                      <then idref="False" />
                    </if>
                  </misc>
                </rules>
              </public>
              <public id="SPPInput.Blanket" path="Blanket" type="boolean">
                <definition>
                  <caption value="Blanket" />
                  <maxLength value="1" />
                  <readOnly>
                    <comparison compare="isnot">
                      <operand idref="SPPInput.Type" type="string" />
                      <operand type="string" value="Cameras,MusicalInstruments,FineArts,Stamps" />
                    </comparison>
                  </readOnly>
                </definition>
                <rules>
                  <misc>
                    <if>
                      <condition>
                        <comparison compare="isnot">
                          <operand idref="SPPInput.Type" type="string" />
                          <operand type="string" value="Cameras,MusicalInstruments,FineArts,Stamps" />
                        </comparison>
                      </condition>
                      <then idref="False" />
                    </if>
                  </misc>
                </rules>
              </public>
              <object id="SPPInputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="SPPInputNonShredded.AddAttachmentRequest" caption="" type="string" path="AddAttachmentRequest">
                  <value>
                    <request verb="OnlineData.addAttachmentRq" get="@status">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default value="" />
                      <nameValues>
                        <nameValue idref="ConstantsPolicy.PolicyID" name="policyID" dataType="attribute" />
                        <nameValue idref="SPPInputNonShredded.AttachmentFilePath" name="url" dataType="attribute" />
                        <nameValue idref="SPPOutput.SummaryDescription" name="caption" dataType="attribute" />
                      </nameValues>
                    </request>
                  </value>
                </private>
                <public id="SPPInputNonShredded.AttachmentFilePath" path="AttachmentFilePath" type="string">
                  <definition>
                    <caption value="Select the Attachment" />
                    <formatMask value="file" />
                  </definition>
                </public>
              </object>
            </object>
            <object id="SPPOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="SPPOutput.SummaryDescription" path="SummaryDescription" type="string">
                <definition>
                  <caption value="Summary Description" />
                  <maxLength value="100" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="SPPPrivate.SummaryDescription" type="string" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public id="SPPOutput.AppraisalAttachedMessage" path="AppraisalAttachedMessage" type="string">
                <definition>
                  <caption value="Your files has been uploaded and attached to the policy." />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value value="" />
                </rules>
              </public>
              <public id="SPPOutput.Attached" path="Attached" type="boolean">
                <definition>
                  <caption value="Attached" />
                </definition>
                <rules>
                  <default idref="False" />
                </rules>
              </public>
            </object>
            <object id="SPPPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="SPPPrivate.SummaryDescription" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" idref="SPPPrivate.TypeCaption" type="string" />
                    <argument op="add" type="string" value=" - " />
                    <argument op="add" idref="SPPInput.Description" type="string" />
                  </calculation>
                </value>
              </private>
              <private id="SPPPrivate.TypeCaption" caption="" type="string">
                <value>
                  <select idref="SPPInput.Type">
                    <case type="string" value="Cameras" select="Cameras" />
                    <case type="string" value="Coins" select="Coins" />
                    <case type="string" value="Fine Arts" select="FineArts" />
                    <case type="string" value="Furs" select="Furs" />
                    <case type="string" value="Golf Equipment" select="GolfEquipment" />
                    <case type="string" value="Jewelry" select="Jewelry" />
                    <case type="string" value="Musical Instruments (non prof)" select="MusicalInstruments" />
                    <case type="string" value="Silverware" select="Silverware" />
                    <case type="string" value="Stamps" select="Stamps" />
                    <case type="string" value="Sports Equipment" select="SportsEquipment" />
                    <otherwise idref="SPPInput.Type" type="string" />
                  </select>
                </value>
              </private>
              <private id="SPPPrivate.IsAppraisalAttached" caption="" type="boolean">
                <value>
                  <comparison idref="SPPOutput.Attached" type="boolean" />
                </value>
              </private>
              <private id="SPPPrivate.IsNotAppraisalAttached" caption="" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="SPPOutput.Attached" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="SPPPrivate.SPPAttachIcon" caption="" type="string">
                <value>
                  <if>
                    <condition idref="SPPPrivate.IsAppraisalAttached" />
                    <then value="tick.png" />
                    <else value="attach.png" />
                  </if>
                </value>
              </private>
              <private id="SPPPrivate.SetAttachedTrue" caption="" type="boolean">
                <value idref="True" />
                <affects>
                  <reference idref="SPPOutput.Attached" effect="setValue" />
                </affects>
              </private>
              <private id="SPPPrivate.UploadButtonPostActions" caption="" type="string" path="UploadButtonPostActions">
                <value value="" />
                <affects>
                  <reference idref="SPPInputNonShredded.AddAttachmentRequest" effect="postEffect" />
                  <reference idref="PolicyPrivate.ClearUploadFields" effect="postEffect" />
                  <reference idref="SPPPrivate.SetAttachedTrue" effect="postEffect" />
                </affects>
              </private>
              <private id="SPPPrivate.ShowApprisal" caption="" type="boolean">
                <value>
                  <comparison compare="and">
                    <comparison compare="ge">
                      <operand idref="SPPInput.Limit" type="int" />
                      <operand type="int" value="5000" />
                    </comparison>
                    <comparison compare="gt">
                      <operand idref="UserInterface.PolicyIdSet" type="string" />
                      <operand type="int" value="0" />
                    </comparison>
                  </comparison>
                </value>
              </private>
            </object>
            <object id="SPPCoverage" path="coverage[Type=&quot;SPP&quot;]">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="SPPCoverageInput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
              </object>
              <object id="SPPCoverageOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="SPPCoverageOutput.Premium" path="Premium" type="float" class="Premium:excludeInChangeSummary">
                  <definition>
                    <caption value="SPP Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                    <maxLength idref="MaxLength.Premium" />
                  </definition>
                  <rules>
                    <value>
                      <select idref="SPPInput.Type">
                        <case type="int" value="0" select="None" />
                        <case idref="SPPCoveragePrivate.FineArtsPremium" type="float" select="FineArts" />
                        <case idref="SPPCoveragePrivate.StandardPremium" type="float" select="Cameras" />
                        <case idref="SPPCoveragePrivate.StandardPremium" type="float" select="Coins" />
                        <case idref="SPPCoveragePrivate.StandardPremium" type="float" select="FineArts" />
                        <case idref="SPPCoveragePrivate.StandardPremium" type="float" select="Furs" />
                        <case idref="SPPCoveragePrivate.StandardPremium" type="float" select="GolfEquipment" />
                        <case idref="SPPCoveragePrivate.JewelryPremium" type="float" select="Jewelry" />
                        <case idref="SPPCoveragePrivate.StandardPremium" type="float" select="MusicalInstruments" />
                        <case idref="SPPCoveragePrivate.StandardPremium" type="float" select="Silverware" />
                        <case idref="SPPCoveragePrivate.StandardPremium" type="float" select="Stamps" />
                        <case idref="SPPCoveragePrivate.StandardPremium" type="float" select="SportsEquipment" />
                        <otherwise type="int" value="0" />
                      </select>
                    </value>
                  </rules>
                  <worksheet>
                    <caption idref="SPPCoveragePrivate.WorksheetCaption" />
                  </worksheet>
                </public>
                <public id="SPPCoverageOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                  <definition>
                    <caption value="SPP Premium Change" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                    <maxLength idref="MaxLength.Premium" />
                  </definition>
                </public>
                <public id="SPPCoverageOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                  <definition>
                    <caption value="SPP Premium Written" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                    <maxLength idref="MaxLength.Premium" />
                  </definition>
                  <rules>
                    <value>
                      <written useShared="1">
                        <writtenRef idref="SPPCoverageOutput.Premium" type="float" infoType="term" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                      </written>
                    </value>
                  </rules>
                </public>
                <public id="SPPCoverageOutput.Indicator" path="Indicator" type="boolean">
                  <definition>
                    <caption value="Indicator" />
                  </definition>
                  <rules>
                    <default idref="True" />
                    <misc>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="SPPCoverageOutput.Deleted" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </condition>
                        <then idref="False" />
                      </if>
                    </misc>
                    <value idref="True" />
                  </rules>
                </public>
                <public id="SPPCoverageOutput.Deleted" path="@deleted" type="boolean">
                  <definition>
                    <caption value="Deleted" />
                  </definition>
                </public>
              </object>
              <object id="SPPCoveragePrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="SPPCoveragePrivate.BaseRate" caption="" type="string" path="BaseRate">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="SPPInput.Type" type="string" />
                          <operand type="string" value="FineArts" />
                        </comparison>
                      </condition>
                      <then idref="SPPCoveragePrivate.FineArtsRate" />
                      <else idref="SPPCoveragePrivate.StandardRateLookup" />
                    </if>
                  </value>
                </private>
                <private id="SPPCoveragePrivate.FineArtsBreakageRate" caption="" type="float" path="FineArtsBreakageRate">
                  <value>
                    <lookup>
                      <tableRef value="SPPRates" />
                      <fieldRef value="Rate" />
                      <keyRef type="string" value="FineArtsBreakage" name="Type" />
                    </lookup>
                  </value>
                  <worksheet>
                    <caption value="Fine Arts Breakage Rate" />
                  </worksheet>
                </private>
                <private id="SPPCoveragePrivate.FineArtsPremium" caption="" type="float" path="FineArtsPremium">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="SPPCoverageOutput.Indicator" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq">
                            <calculation>
                              <argument op="eq" idref="SPPCoveragePrivate.FineArtsRate" type="float" />
                              <argument op="add">
                                <calculation>
                                  <argument op="eq" idref="SPPInput.Limit" type="int" />
                                  <argument op="divide" type="int" value="1000" />
                                  <argument op="multiply" round="1" roundType="round" idref="SPPCoveragePrivate.FineArtsBreakageRate" type="float" />
                                </calculation>
                              </argument>
                            </calculation>
                          </argument>
                          <argument op="multiply" round="1" roundType="round" type="int" value="1" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                </private>
                <private id="SPPCoveragePrivate.FineArtsRate" caption="" type="float" path="FineArtsRate">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="contains">
                          <operand idref="DwellingInput.RatedProtectionClass" type="string" />
                          <operand type="string" value="/" />
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <lookup>
                          <tableRef value="SPPFineArtsRate" />
                          <fieldRef value="Rate" />
                          <keyRef idref="SPPInput.Limit" type="int" name="Limit" />
                          <keyRef idref="DwellingInput.NumberOfFamilies" type="int" name="Number of Families" />
                          <keyRef idref="DwellingInput.RatedProtectionClass" type="string" name="Protection Class" />
                        </lookup>
                      </else>
                    </if>
                  </value>
                  <worksheet>
                    <caption value="Fine Arts Rate" />
                  </worksheet>
                </private>
                <private id="SPPCoveragePrivate.JewelryFieldForLookup" caption="" type="string" path="JewelryFieldForLookup">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="SPPInput.Vaulted" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </condition>
                      <then value="JewelryVaulted" />
                      <else value="Jewelry" />
                    </if>
                  </value>
                </private>
                <private id="SPPCoveragePrivate.JewelryPremium" caption="" type="float" path="JewelryPremium">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="SPPCoverageOutput.Indicator" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="SPPInput.Limit" type="int" />
                          <argument op="divide" type="int" value="100" />
                          <argument op="multiply" round="1" roundType="round" idref="SPPCoveragePrivate.JewelryRate" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                </private>
                <private id="SPPCoveragePrivate.JewelryRate" caption="" type="float" path="JewelryRate">
                  <value>
                    <lookup>
                      <tableRef value="SPPRates" />
                      <fieldRef value="Rate" />
                      <keyRef idref="SPPCoveragePrivate.JewelryFieldForLookup" type="string" name="Type" />
                    </lookup>
                  </value>
                  <worksheet>
                    <caption value="Jewelry Rate" />
                  </worksheet>
                </private>
                <private id="SPPCoveragePrivate.StandardPremium" caption="" type="float" path="StandardPremium">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="SPPCoverageOutput.Indicator" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="SPPInput.Limit" type="int" />
                          <argument op="divide" type="int" value="100" />
                          <argument op="multiply" round="1" roundType="round" idref="SPPCoveragePrivate.BaseRate" type="string" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                </private>
                <private id="SPPCoveragePrivate.StandardRateLookup" caption="" type="float" path="StandardRateLookup">
                  <value>
                    <lookup>
                      <tableRef value="SPPRates" />
                      <fieldRef value="Rate" />
                      <keyRef idref="SPPInput.Type" type="string" name="Type" />
                    </lookup>
                  </value>
                  <worksheet>
                    <caption value="SPP Standard Rate" />
                  </worksheet>
                </private>
                <private id="SPPCoveragePrivate.WorksheetCaption" caption="" type="string" path="WorksheetCaption">
                  <value>
                    <select idref="SPPInput.Type">
                      <case type="string" value="Cameras Premium" select="Cameras" />
                      <case type="string" value="Coins Premium" select="Coins" />
                      <case type="string" value="Fine Arts Premium" select="FineArts" />
                      <case type="string" value="Furs Premium" select="Furs" />
                      <case type="string" value="Golf Equipment Premium" select="GolfEquipment" />
                      <case type="string" value="Jewelry Premium" select="Jewelry" />
                      <case type="string" value="Musical Instruments Premium" select="MusicalInstruments" />
                      <case type="string" value="Silverware Premium" select="Silverware" />
                      <case type="string" value="Stamps Premium" select="Stamps" />
                      <case type="string" value="Sports Equipment Premium" select="SportsEquipment" />
                      <otherwise type="string" value="SPP Premium" />
                    </select>
                  </value>
                </private>
              </object>
            </object>
          </object>
          <object id="LinePrivate" abstract="1">
            <private id="LinePrivate.TierIsPreferred" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="LineInput.Tier" type="string" />
                  <operand type="string" value="Preferred" />
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.SetDefaults" caption="" type="string">
              <value value="" />
              <affects>
                <reference idref="CoverageDefault.CreditCard" effect="postEffect" />
                <reference idref="CoverageDefault.Deductible" effect="postEffect" />
                <reference idref="CoverageDefault.LiabilityLimit" effect="postEffect" />
                <reference idref="CoverageDefault.MedicalLimit" effect="postEffect" />
                <reference idref="CoverageDefault.RefrigeratedProperty" effect="postEffect" />
                <reference idref="CoverageDefault.ReplacementCostContents" effect="postEffect" />
                <reference idref="CoverageDefault.ReplacementCostDwelling" effect="postEffect" />
              </affects>
            </private>
            <private id="LinePrivate.LOBName" type="string" override="1">
              <value value="Personal Home" />
            </private>
            <private id="LinePrivate.ShowSPPSummary" caption="" type="boolean">
              <value>
                <comparison compare="gt">
                  <operand idref="SPPSubtotals.SPPCount" type="int" />
                  <operand type="int" value="0" />
                </comparison>
              </value>
            </private>
            <object id="CoverageDefault">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="CoverageDefault.LiabilityLimit" caption="" type="string" override="1">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LineInput.CoveragePackage" type="string" />
                        <operand type="string" value="Custom" />
                      </comparison>
                    </condition>
                    <then idref="CoverageELiabilityInput.Limit" />
                    <else>
                      <lookup>
                        <tableRef value="CoverageDefaults" />
                        <fieldRef value="Liability" />
                        <keyRef idref="LineInput.CoveragePackage" type="string" name="Coverage Package" />
                      </lookup>
                    </else>
                  </if>
                </value>
                <affects>
                  <reference idref="CoverageELiabilityInput.Limit" effect="setValue" />
                </affects>
              </private>
              <private id="CoverageDefault.MedicalLimit" caption="" type="string" override="1">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LineInput.CoveragePackage" type="string" />
                        <operand type="string" value="Custom" />
                      </comparison>
                    </condition>
                    <then idref="CoverageFMedicalInput.Limit" />
                    <else>
                      <lookup>
                        <tableRef value="CoverageDefaults" />
                        <fieldRef value="Medical" />
                        <keyRef idref="LineInput.CoveragePackage" type="string" name="Coverage Package" />
                      </lookup>
                    </else>
                  </if>
                </value>
                <affects>
                  <reference idref="CoverageFMedicalInput.Limit" effect="setValue" />
                </affects>
              </private>
              <private id="CoverageDefault.Deductible" caption="" type="string" override="1">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LineInput.CoveragePackage" type="string" />
                        <operand type="string" value="Custom" />
                      </comparison>
                    </condition>
                    <then idref="DwellingInput.Deductible" />
                    <else>
                      <lookup>
                        <tableRef value="CoverageDefaults" />
                        <fieldRef value="Deductible" />
                        <keyRef idref="LineInput.CoveragePackage" type="string" name="Coverage Package" />
                      </lookup>
                    </else>
                  </if>
                </value>
                <affects>
                  <reference idref="DwellingInput.Deductible" effect="setValue" />
                </affects>
              </private>
              <private id="CoverageDefault.CreditCard" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="CoverageDefaults" />
                    <fieldRef value="CreditCard" />
                    <keyRef idref="LineInput.CoveragePackage" type="string" name="Coverage Package" />
                  </lookup>
                </value>
                <affects>
                  <reference idref="CreditCardInput.Limit" effect="setValue" />
                </affects>
              </private>
              <private id="CoverageDefault.RefrigeratedProperty" caption="" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="CoverageDefaults" />
                    <fieldRef value="RefrigeratedProperty" />
                    <keyRef idref="LineInput.CoveragePackage" type="string" name="Coverage Package" />
                  </lookup>
                </value>
                <affects>
                  <reference idref="RefrigeratedPersonalPropertyInput.Indicator" effect="setValue" />
                </affects>
              </private>
              <private id="CoverageDefault.ReplacementCostContents" caption="" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="CoverageDefaults" />
                    <fieldRef value="ReplacementCostContents" />
                    <keyRef idref="LineInput.CoveragePackage" type="string" name="Coverage Package" />
                  </lookup>
                </value>
                <affects>
                  <reference idref="ReplacementCostContentsInput.Indicator" effect="setValue" />
                </affects>
              </private>
              <private id="CoverageDefault.ReplacementCostDwelling" caption="" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="CoverageDefaults" />
                    <fieldRef value="ReplacementCostDwelling" />
                    <keyRef idref="LineInput.CoveragePackage" type="string" name="Coverage Package" />
                  </lookup>
                </value>
                <affects>
                  <reference idref="ReplacementCostDwellingInput.Indicator" effect="setValue" />
                </affects>
              </private>
              <private id="CoverageDefault.CoverageB" caption="" type="float">
                <value value="0" />
                <affects>
                  <reference idref="CoverageBOtherStructuresInput.Limit" effect="setValue" />
                </affects>
              </private>
              <private id="CoverageDefault.CoverageD" caption="" type="float">
                <value value="0" />
                <affects>
                  <reference idref="CoverageDLossOfUseInput.Limit" effect="setValue" />
                </affects>
              </private>
              <private id="CoverageDefault.CoverageC" caption="" type="float">
                <value idref="CoverageCPersonalPropertyHO3Private.IncludedLimit" />
                <affects>
                  <reference idref="CoverageCPersonalPropertyHO3Input.Limit" effect="setValue" />
                </affects>
              </private>
              <private id="CoverageDefault.CoverageOtherStructuresRentedToOthers" caption="" type="float">
                <value idref="OtherStructuresRentedToOthersPrivate.IncludedLimit" />
                <affects>
                  <reference idref="OtherStructuresRentedToOthersInput.Limit" effect="setValue" />
                </affects>
              </private>
              <private id="CoverageDefault.CoveragePersonalPropertyOtherResidence" caption="" type="float">
                <value idref="PersonalPropertyOtherResidencePrivate.IncludedLimit" />
                <affects>
                  <reference idref="PersonalPropertyOtherResidenceInput.Limit" effect="setValue" />
                </affects>
              </private>
            </object>
            <private id="LinePrivate.ShowWatercraftSummary" caption="" type="boolean">
              <value>
                <comparison compare="gt">
                  <operand idref="WatercraftSubtotals.WatercraftCount" type="int" />
                  <operand type="int" value="0" />
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.ShowDelete" caption="" type="boolean">
              <misc>
                <if>
                  <condition>
                    <comparison compare="is">
                      <operand idref="PolicyOutput.Status" type="string" />
                      <operand type="string" value="Quote,FullQuote,Application" />
                    </comparison>
                  </condition>
                  <then idref="True" />
                </if>
                <if>
                  <condition idref="AllPage.ReadOnly" />
                  <then idref="False" />
                </if>
              </misc>
            </private>
            <private id="LinePrivate.ShowDeleteMark" caption="" type="boolean">
              <misc>
                <if>
                  <condition>
                    <comparison compare="isnot">
                      <operand idref="PolicyOutput.Status" type="string" />
                      <operand type="string" value="Quote,FullQuote,Application" />
                    </comparison>
                  </condition>
                  <then idref="True" />
                </if>
                <if>
                  <condition idref="AllPage.ReadOnly" />
                  <then idref="False" />
                </if>
              </misc>
            </private>
            <private id="LinePrivate.SPPNotAttachedCount" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="count" idref="SPP">
                  <where idref="SPPPrivate.IsNotAppraisalAttached" />
                </iterator>
              </value>
            </private>
            <private id="LinePrivate.IsCoveragePackageCustom" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="LineInput.CoveragePackage" type="string" />
                  <operand type="string" value="Custom" />
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.IsCoveragePackageNotCustom" caption="" type="boolean">
              <value>
                <comparison compare="ne">
                  <operand idref="LineInput.CoveragePackage" type="string" />
                  <operand type="string" value="Custom" />
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.MultipleWatercraft" caption="" type="boolean">
              <value>
                <comparison compare="gt">
                  <operand idref="WatercraftSubtotals.WatercraftCount" type="int" />
                  <operand type="int" value="1" />
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.SingleWatercraft" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="WatercraftSubtotals.WatercraftCount" type="int" />
                  <operand type="int" value="1" />
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.MultipleSPP" caption="" type="boolean">
              <value>
                <comparison compare="gt">
                  <operand idref="SPPSubtotals.SPPCount" type="int" />
                  <operand type="int" value="1" />
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.SingleSPP" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="SPPSubtotals.SPPCount" type="int" />
                  <operand type="int" value="1" />
                </comparison>
              </value>
            </private>
          </object>
          <object id="LineOutput" abstract="1">
            <object id="LinePremiumTotals" abstract="1">
              <object id="LinePurePremiums" abstract="1">
                <public id="LinePurePremiums.Premium" path="PurePremium" type="float" class="excludeInChangeSummary" override="1">
                  <definition>
                    <caption value="Premium" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" idref="RiskTotalPurePremiums.Premium" type="float" />
                        <argument op="add" idref="WatercraftSubtotals.WatercraftTotalPremium" type="float" />
                        <argument op="add" idref="SPPSubtotals.SPPTotalPremium" type="float" />
                        <argument op="add" idref="ManuScriptCoverageSubtotals.Premium" type="float" />
                      </calculation>
                    </value>
                  </rules>
                  <worksheet>
                    <comparison idref="True" type="int" />
                    <caption value="Policy Premium" />
                  </worksheet>
                </public>
                <public id="LinePurePremiums.PremiumChange" path="PurePremium/@change" type="float" class="excludeInChangeSummary" override="1">
                  <definition>
                    <caption value="Premium Change" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" idref="RiskTotalPurePremiums.PremiumChange" type="float" />
                        <argument op="add" idref="WatercraftSubtotals.WatercraftTotalPremiumChange" type="float" />
                        <argument op="add" idref="SPPSubtotals.SPPTotalPremiumChange" type="float" />
                        <argument op="add" idref="ManuScriptCoverageSubtotals.PremiumChange" type="float" />
                      </calculation>
                    </value>
                  </rules>
                </public>
                <public id="LinePurePremiums.PremiumWritten" path="PurePremium/@written" type="float" class="excludeInChangeSummary" override="1">
                  <definition>
                    <caption value="Premium Written" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" idref="RiskTotalPurePremiums.PremiumWritten" type="float" />
                        <argument op="add" idref="WatercraftSubtotals.WatercraftTotalPremiumWritten" type="float" />
                        <argument op="add" idref="SPPSubtotals.SPPTotalPremiumWritten" type="float" />
                        <argument op="add" idref="ManuScriptCoverageSubtotals.PremiumWritten" type="float" />
                      </calculation>
                    </value>
                  </rules>
                  <worksheet>
                    <comparison idref="True" type="int" />
                  </worksheet>
                </public>
              </object>
              <object id="LinePremiums" abstract="1">
                <public id="LinePremiums.PremiumWritten" path="@written" type="float" class="excludeInChangeSummary" override="1">
                  <definition>
                    <caption value="Line Premiums Premium Written" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" idref="LinePurePremiums.PremiumWritten" type="float" />
                        <argument op="add" idref="LineTaxesAndSurcharges.TaxesSurchargesWritten" type="float" />
                      </calculation>
                    </value>
                  </rules>
                  <worksheet>
                    <comparison idref="True" type="int" />
                  </worksheet>
                </public>
              </object>
            </object>
            <object id="LineSubtotals" path="" caption="" abstract="1">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="SPPSubtotals">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="SPPSubtotals.SPPTotalPremium" path="SPPTotalPremium" type="float" class="excludeInChangeSummary">
                  <definition>
                    <caption value="Scheduled Personal Property Total Premium" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="SPP">
                        <reference idref="SPPCoverageOutput.Premium" type="float" />
                      </iterator>
                    </value>
                  </rules>
                </public>
                <public id="SPPSubtotals.SPPTotalPremiumChange" path="SPPTotalPremium/@change" type="float" class="excludeInChangeSummary">
                  <definition>
                    <caption value="SPP SubtotalsSPP Total Premium Change" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="SPP">
                        <reference idref="SPPCoverageOutput.PremiumChange" type="float" />
                      </iterator>
                    </value>
                  </rules>
                </public>
                <public id="SPPSubtotals.SPPTotalPremiumWritten" path="SPPTotalPremium/@written" type="float" class="excludeInChangeSummary">
                  <definition>
                    <caption value="SPP Total Premium Written" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="SPP">
                        <reference idref="SPPCoverageOutput.PremiumWritten" type="float" />
                      </iterator>
                    </value>
                  </rules>
                </public>
                <private id="SPPSubtotals.SPPCount" caption="" type="int">
                  <value>
                    <iterator type="int" scope="all" action="count" idref="SPP" />
                  </value>
                </private>
              </object>
              <object id="RiskSubTotals" abstract="1">
                <object id="RiskTotalPremiums" abstract="1">
                </object>
                <object id="RiskTotalPurePremiums" abstract="1">
                  <public id="RiskTotalPurePremiums.Premium" path="RiskTotalPurePremiums" type="float" class="excludeInChangeSummary" alwaysRun="1" override="1">
                    <definition>
                      <caption value="Risk Total Pure Premium" />
                      <maxLength idref="MaxLength.fValue" />
                      <formatMask idref="FormatMask.PremiumPennies" />
                      <readOnly idref="True" />
                    </definition>
                    <rules>
                      <misc>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="LinePrivate.RiskCountIncludeDeleted" type="int" />
                              <operand type="int" value="0" />
                            </comparison>
                          </condition>
                          <then value="0" />
                        </if>
                      </misc>
                    </rules>
                    <worksheet>
                      <comparison idref="True" type="int" />
                      <caption value="Total Premium" />
                    </worksheet>
                  </public>
                </object>
              </object>
              <object id="WatercraftSubtotals">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="WatercraftSubtotals.WatercraftTotalPremium" path="WatercraftTotalPremium" type="float" class="excludeInChangeSummary">
                  <definition>
                    <caption value="Watercraft Total Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                    <maxLength idref="MaxLength.Premium" />
                  </definition>
                  <rules>
                    <value>
                      <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="Watercraft">
                        <reference idref="WatercraftCoverageOutput.Premium" type="float" />
                      </iterator>
                    </value>
                  </rules>
                </public>
                <public id="WatercraftSubtotals.WatercraftTotalPremiumChange" path="WatercraftTotalPremium/@change" type="float" class="excludeInChangeSummary">
                  <definition>
                    <caption value="Watercraft Total Premium Change" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                    <maxLength idref="MaxLength.Premium" />
                  </definition>
                  <rules>
                    <value>
                      <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="Watercraft">
                        <reference idref="WatercraftCoverageOutput.PremiumChange" type="float" />
                      </iterator>
                    </value>
                  </rules>
                </public>
                <public id="WatercraftSubtotals.WatercraftTotalPremiumWritten" path="WatercraftTotalPremium/@written" type="float" class="excludeInChangeSummary">
                  <definition>
                    <caption value="Watercraft Total Premium Written" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                    <maxLength idref="MaxLength.Premium" />
                  </definition>
                  <rules>
                    <value>
                      <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="Watercraft">
                        <reference idref="WatercraftCoverageOutput.PremiumWritten" type="float" />
                      </iterator>
                    </value>
                  </rules>
                </public>
                <private id="WatercraftSubtotals.WatercraftCount" caption="" type="int" path="WatercraftCount">
                  <value>
                    <iterator type="int" scope="all" action="count" idref="Watercraft" />
                  </value>
                </private>
              </object>
            </object>
            <public id="LineOutput.Type" path="Type" type="string" override="1">
              <definition>
                <caption value="Line Code" />
                <readOnly idref="True" />
                <maxLength idref="MaxLength.Type" />
              </definition>
              <rules>
                <default value="PersonalHome" />
              </rules>
            </public>
          </object>
          <object id="LineCoverages" abstract="1">
          </object>
          <object id="Loss" abstract="1">
            <object id="LossInput" abstract="1">
              <public id="LossInput.LossType" path="LossType" type="string" comment=" " override="1">
                <definition>
                  <caption value="Loss Type" />
                  <options>
                    <option value="EarthMovement" caption="Earth Movement" />
                    <option value="Fire" caption="Fire" />
                    <option value="Freezing" caption="Freezing/Weight of Ice and Snow" />
                    <option value="Liability" caption="Liability" />
                    <option value="Lightning" caption="Lightning" />
                    <option value="MedicalPayments" caption="Medical Payments" />
                    <option value="Mold" caption="Mold" />
                    <option value="Pollution" caption="Pollution" />
                    <option value="TheftBurglary" caption="Theft/Burglary" />
                    <option value="Vandalism" caption="Vandalism &amp; Malicious Mischief" />
                    <option value="Water" caption="Water - all other" />
                    <option value="Weather" caption="Weather related water" />
                    <option value="WindHail" caption="Wind/Hail" />
                    <option value="Other" caption="Other Property Damage" />
                  </options>
                  <maxLength value="100" />
                  <formatMask idref="FormatMask.BlankOption" />
                  <required idref="True" />
                </definition>
              </public>
              <public id="LossInput.CategoryCode" path="CategoryCode" type="string">
                <definition>
                  <caption value="Category Code" />
                  <maxLength value="10" />
                </definition>
              </public>
              <public id="LossInput.InDispute" path="InDispute" type="string">
                <definition>
                  <caption value="In Dispute" />
                  <options>
                    <option value="0" caption="No" />
                    <option value="1" caption="Yes" />
                  </options>
                  <maxLength value="1" />
                  <formatMask idref="FormatMask.Radio" />
                </definition>
              </public>
              <public id="LossInput.ClaimIDNumber" path="ClaimIDNumber" type="string">
                <definition>
                  <caption value="Claim ID Number" />
                </definition>
              </public>
              <public id="LossInput.Source" path="Source" type="string">
                <definition>
                  <caption value="Source" />
                  <maxLength value="5" />
                </definition>
                <rules>
                  <default value="Manual" />
                </rules>
              </public>
            </object>
            <object id="LossOutput" abstract="1">
            </object>
            <object id="LossPrivate" abstract="1">
              <private id="LossPrivate.IsManual" caption="" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="LossInput.Source" type="string" />
                    <operand type="string" value="Manual" />
                  </comparison>
                </value>
              </private>
              <private id="LossPrivate.IsNotManual" caption="" type="boolean">
                <value>
                  <comparison compare="ne">
                    <operand idref="LossInput.Source" type="string" />
                    <operand type="string" value="Manual" />
                  </comparison>
                </value>
              </private>
              <private id="LossPrivate.IsMatched" caption="" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="LossOutput.Matched" type="string" />
                    <operand type="string" value="Matched" />
                  </comparison>
                </value>
              </private>
            </object>
          </object>
          <object id="Watercraft" path="watercraft">
            <minOccurs value="0" />
            <maxOccurs value="*" />
            <object id="WatercraftInput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="WatercraftInput.Horsepower" path="Horsepower" type="int">
                <definition>
                  <caption value="Horsepower" />
                  <maxLength value="3" />
                </definition>
                <rules>
                  <default value="0" />
                  <minimum value="0" />
                  <maximum value="999" />
                </rules>
              </public>
              <public id="WatercraftInput.Length" path="Length" type="int">
                <definition>
                  <caption value="Length (feet)" />
                  <maxLength value="3" />
                </definition>
                <rules>
                  <default value="0" />
                  <minimum value="0" />
                  <maximum value="999" />
                </rules>
              </public>
              <public id="WatercraftInput.MilesPerHour" path="MilesPerHour" type="int">
                <definition>
                  <caption value="Miles Per Hour" />
                  <maxLength value="3" />
                  <readOnly>
                    <comparison compare="isnot">
                      <operand idref="WatercraftInput.Type" type="string" />
                      <operand type="string" value="Inboard,InboardOutboard" />
                    </comparison>
                  </readOnly>
                </definition>
                <rules>
                  <default value="0" />
                  <minimum value="0" />
                  <maximum value="999" />
                  <misc>
                    <if>
                      <condition>
                        <comparison compare="isnot">
                          <operand idref="WatercraftInput.Type" type="string" />
                          <operand type="string" value="Inboard,InboardOutboard" />
                        </comparison>
                      </condition>
                      <then value="0" />
                    </if>
                  </misc>
                </rules>
              </public>
              <public id="WatercraftInput.Type" path="Type" type="string">
                <definition>
                  <caption value="Type" />
                  <options>
                    <option value="Inboard" caption="Inboard" />
                    <option value="InboardOutboard" caption="Inboard-Outboard" />
                    <option value="Outboard" caption="Outboard" />
                    <option value="Sailboat" caption="Sailboat" />
                  </options>
                  <maxLength value="15" />
                  <required idref="True" />
                  <formatMask idref="FormatMask.BlankOption" />
                </definition>
              </public>
            </object>
            <object id="WatercraftCoverage" path="coverage[Type=&quot;Watercraft&quot;]">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="WatercraftCoverageOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="WatercraftCoverageOutput.Premium" path="Premium" type="float" class="Premium">
                  <definition>
                    <caption value="Watercraft Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <maxLength idref="MaxLength.Premium" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <if>
                        <condition>
                          <comparison compare="or">
                            <comparison compare="eq">
                              <operand idref="WatercraftCoverageOutput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                            <comparison compare="eq">
                              <operand idref="WatercraftCoveragePrivate.IsIncluded" type="boolean" />
                              <operand idref="True" type="int" />
                            </comparison>
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="WatercraftCoveragePrivate.BaseRate" type="float" />
                            <argument op="multiply" round="1" roundType="round" idref="CoverageELiabilityPrivate.LiabilityLimitFactor" type="float" />
                            <argument op="add" idref="WatercraftCoveragePrivate.MedicalRate" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </rules>
                </public>
                <public id="WatercraftCoverageOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary">
                  <definition>
                    <caption value="Watercraft Written Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <maxLength idref="MaxLength.Premium" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <written useShared="1">
                        <writtenRef idref="WatercraftCoverageOutput.Premium" type="float" infoType="term" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                      </written>
                    </value>
                  </rules>
                </public>
                <public id="WatercraftCoverageOutput.PremiumChange" path="change" type="float" class="excludeInChangeSummary">
                  <definition>
                    <caption value="Watercraft Coverage Premium Change" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <maxLength idref="MaxLength.Premium" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public id="WatercraftCoverageOutput.Indicator" path="Indicator" type="boolean">
                  <definition>
                    <caption value="Indicator" />
                  </definition>
                  <rules>
                    <default idref="True" />
                    <value>
                      <comparison idref="WatercraftCoveragePrivate.IsEligible" type="boolean" />
                    </value>
                    <misc>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="WatercraftCoverageOutput.Deleted" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </condition>
                        <then idref="False" />
                      </if>
                    </misc>
                  </rules>
                </public>
                <public id="WatercraftCoverageOutput.Deleted" path="@deleted" type="boolean">
                  <definition>
                    <caption value="Deleted" />
                  </definition>
                </public>
              </object>
              <object id="WatercraftCoveragePrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="WatercraftCoveragePrivate.InboardOutboardRate" caption="" type="float">
                  <value>
                    <lookup>
                      <tableRef value="WatercraftRates" />
                      <fieldRef value="Rate" />
                      <keyRef idref="WatercraftInput.Horsepower" type="int" name="Horsepower" />
                      <keyRef idref="WatercraftInput.Length" type="int" name="Length" />
                    </lookup>
                  </value>
                  <worksheet>
                    <caption value="Inboard-Outboard Rate" />
                  </worksheet>
                </private>
                <private id="WatercraftCoveragePrivate.BaseRate" caption="" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="WatercraftInput.Type" type="string" />
                          <operand type="string" value="Sailboat" />
                        </comparison>
                      </condition>
                      <then idref="WatercraftCoveragePrivate.SailboatRate" />
                      <else idref="WatercraftCoveragePrivate.InboardOutboardRate" />
                    </if>
                  </value>
                </private>
                <private id="WatercraftCoveragePrivate.SailboatRate" caption="" type="float">
                  <value>
                    <lookup>
                      <tableRef value="WatercraftSailboatRates" />
                      <fieldRef value="Rate" />
                      <keyRef idref="WatercraftInput.Length" type="int" name="Length" />
                    </lookup>
                  </value>
                  <worksheet>
                    <caption value="Sailboat Rate" />
                  </worksheet>
                </private>
                <private id="WatercraftCoveragePrivate.InboardOutboardMedicalRate" caption="" type="float">
                  <value>
                    <lookup>
                      <tableRef value="WatercraftMedicalRates" />
                      <fieldRef value="Rate" />
                      <keyRef idref="WatercraftInput.Length" type="int" name="Length" />
                      <keyRef idref="WatercraftInput.Horsepower" type="int" name="Horsepower" />
                      <keyRef idref="CoverageFMedicalInput.Limit" type="string" name="Medical Limit" />
                    </lookup>
                  </value>
                  <worksheet>
                    <caption value="Inboard-Outboard Medical Rate" />
                  </worksheet>
                </private>
                <private id="WatercraftCoveragePrivate.SailboatMedicalRate" caption="" type="float">
                  <value>
                    <lookup>
                      <tableRef value="WatercraftSailboatMedicalRates" />
                      <fieldRef value="Rate" />
                      <keyRef idref="WatercraftInput.Length" type="int" name="Length" />
                      <keyRef idref="CoverageFMedicalInput.Limit" type="string" name="Medical Limit" />
                    </lookup>
                  </value>
                  <worksheet>
                    <caption value="Sailboat Medical Rate" />
                  </worksheet>
                </private>
                <private id="WatercraftCoveragePrivate.IsIncluded" caption="" type="boolean">
                  <value idref="False" />
                  <misc>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="is">
                            <operand idref="WatercraftInput.Type" type="string" />
                            <operand type="string" value="InboardOutboard,Outboard" />
                          </comparison>
                          <comparison compare="le">
                            <operand idref="WatercraftInput.Horsepower" type="int" />
                            <operand type="int" value="25" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="True" />
                    </if>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="is">
                            <operand idref="WatercraftInput.Type" type="string" />
                            <operand type="string" value="Sailboat" />
                          </comparison>
                          <comparison compare="le">
                            <operand idref="WatercraftInput.Length" type="int" />
                            <operand type="int" value="25" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="True" />
                    </if>
                  </misc>
                </private>
                <private id="WatercraftCoveragePrivate.IsEligible" caption="" type="boolean">
                  <value idref="True" />
                  <misc>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="and">
                            <comparison compare="is">
                              <operand idref="WatercraftInput.Type" type="string" />
                              <operand type="string" value="Inboard,InboardOutboard,Outboard" />
                            </comparison>
                            <comparison compare="le">
                              <operand idref="WatercraftInput.Length" type="int" />
                              <operand type="int" value="15" />
                            </comparison>
                          </comparison>
                          <comparison compare="ge">
                            <operand idref="WatercraftInput.Horsepower" type="int" />
                            <operand type="int" value="151" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="False" />
                    </if>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="and">
                            <comparison compare="is">
                              <operand idref="WatercraftInput.Type" type="string" />
                              <operand type="string" value="Inboard,InboardOutboard,Outboard" />
                            </comparison>
                            <comparison compare="ge">
                              <operand idref="WatercraftInput.Length" type="int" />
                              <operand type="int" value="16" />
                            </comparison>
                          </comparison>
                          <comparison compare="ge">
                            <operand idref="WatercraftInput.Horsepower" type="int" />
                            <operand type="int" value="201" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="False" />
                    </if>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="WatercraftInput.Type" type="string" />
                            <operand type="string" value="Sailboat" />
                          </comparison>
                          <comparison compare="ge">
                            <operand idref="WatercraftInput.Length" type="int" />
                            <operand type="int" value="41" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="False" />
                    </if>
                  </misc>
                </private>
                <private id="WatercraftCoveragePrivate.MedicalRate" caption="" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="WatercraftInput.Type" type="string" />
                          <operand type="string" value="Sailboat" />
                        </comparison>
                      </condition>
                      <then idref="WatercraftCoveragePrivate.SailboatMedicalRate" />
                      <else idref="WatercraftCoveragePrivate.InboardOutboardMedicalRate" />
                    </if>
                  </value>
                </private>
              </object>
              <object id="WatercraftCoverageInput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
              </object>
            </object>
            <object id="WatercraftOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="WatercraftOutput.SummaryDescription" path="SummaryDescription" type="string">
                <definition>
                  <caption value="Summary Description" />
                  <maxLength value="100" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="WatercraftPrivate.SummaryDescription" type="string" />
                    </calculation>
                  </value>
                </rules>
              </public>
            </object>
            <object id="WatercraftPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="WatercraftPrivate.SummaryDescription" caption="" type="string" path="SummaryDescriptionx">
                <value>
                  <calculation>
                    <argument op="eq" idref="WatercraftPrivate.TypeCaption" type="string" />
                    <argument op="add" type="string" value=" - " />
                    <argument op="add" idref="WatercraftInput.Length" type="int" />
                    <argument op="add" type="string" value=" Feet, " />
                    <argument op="add" idref="WatercraftInput.Horsepower" type="int" />
                    <argument op="add" type="string" value=" HP" />
                  </calculation>
                </value>
              </private>
              <private id="WatercraftPrivate.TypeCaption" caption="" type="string" path="TypeCaptionx" override="1">
                <value>
                  <select idref="WatercraftInput.Type">
                    <case type="string" value="Inboard" select="Inboard" />
                    <case type="string" value="Inboard-Outboard" select="InboardOutboard" />
                    <case type="string" value="Outboard" select="Outboard" />
                    <case type="string" value="Sailboat" select="Sailboat" />
                    <otherwise idref="WatercraftInput.Type" type="string" />
                  </select>
                </value>
              </private>
            </object>
          </object>
          <object id="LineDiscountsAndSurcharges" abstract="1">
          </object>
        </object>
        <object id="PolicyOutput" abstract="1">
          <object id="PolicySubtotals" abstract="1">
            <object id="LineSubTotals" abstract="1">
              <object id="LineTotalPremiums" abstract="1">
              </object>
            </object>
          </object>
          <object id="PolicyPremiumTotals" abstract="1">
            <object id="PolicyPurePremiums" abstract="1" />
          </object>
          <public id="PolicyOutput.FairCreditReportingActWordingSeventhLine" path="FairCreditReportingActWordingSeventhLine" type="string">
            <definition>
              <caption value="Fair Credit Reporting Act Wording Seventh Line" />
            </definition>
          </public>
          <object id="PolicyOutputNonShredded" abstract="1">
            <public id="PolicyOutputNonShredded.IntegrationComplete" path="IntegrationComplete" type="boolean">
              <definition>
                <caption value="Integration Complete" />
              </definition>
              <rules>
                <default idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="IntegrationSetup.IsAnyIntegration" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="PolicyOutputNonShredded.ConsumerPurchaseAvailable" path="ConsumerPurchaseAvailable" type="boolean">
              <definition>
                <caption value="Consumer Purchase Available" />
              </definition>
              <rules>
                <default idref="False" />
              </rules>
            </public>
          </object>
        </object>
        <object id="PolicyInput" abstract="1">
          <public id="PolicyInput.Term" path="Term" type="int" override="1">
            <definition>
              <caption value="Term" />
              <maxLength idref="MaxLength.iValue" />
              <options>
                <option value="6" caption="6 Months" validRef="False" />
                <option value="12" caption="1 Year" />
                <option value="0" caption="Custom" validRef="False" />
              </options>
              <readOnly idref="True" />
            </definition>
            <rules>
              <default value="12" />
            </rules>
          </public>
          <public id="PolicyInput.AgencyWriteAutoPolicy" path="AgencyWriteAutoPolicy" type="boolean">
            <definition>
              <caption value="Does the agency write the applicant's auto policy in-house?" />
              <options>
                <option value="0" caption="No" />
                <option value="1" caption="Yes" />
              </options>
            </definition>
          </public>
          <public id="PolicyInput.BookRollover" path="BookRollover" type="boolean">
            <definition>
              <caption value="Is this a book rollover?" />
              <options>
                <option value="0" caption="No" />
                <option value="1" caption="Yes" />
              </options>
            </definition>
          </public>
          <public id="PolicyInput.EquippedWithStandbyGenerator" path="EquippedWithStandbyGeneratro" type="boolean">
            <definition>
              <caption value="Is home equipped with a whole-house standby generator with a transfer switch?" />
              <options>
                <option value="0" caption="No" />
                <option value="1" caption="Yes" />
              </options>
            </definition>
          </public>
          <public id="PolicyInput.FairCreditReportingAct" path="FairCreditReportingAct" type="boolean">
            <definition>
              <caption value="Fair Credit Reporting Act" />
              <options>
                <option value="1" caption="Yes" default="1" />
                <option value="0" caption="No" />
              </options>
              <formatMask idref="FormatMask.Radio" />
            </definition>
            <rules>
              <default value="1" />
            </rules>
          </public>
          <public id="PolicyInput.FairCreditReportingActPostWording" path="FairCreditReportingActPostWording" type="string" override="1">
            <definition>
              <caption value="Fair Credit Reporting Act Post Wording" />
            </definition>
            <rules>
              <value value="Select 'Yes' to indicate your understanding and acceptance of these terms.  Select 'No' to decline acceptance of these terms." />
            </rules>
          </public>
          <public id="PolicyInput.FairCreditReportingActWording" path="FairCreditReportingActWording" type="string">
            <definition>
              <caption value="Fair Credit Reporting Act Wording" />
            </definition>
            <rules>
              <value>
                <calculation>
                  <argument op="eq" idref="PolicyInput.FairCreditReportingActWordingFirstLine" type="string" />
                  <argument op="add" type="string" value=" " />
                  <argument op="add" idref="PolicyInput.FairCreditReportingActWordingSecondLine" type="string" />
                  <argument op="add" type="string" value=" " />
                  <argument op="add" idref="PolicyInput.FairCreditReportingActWordingThirdLine" type="string" />
                  <argument op="add" type="string" value=" " />
                  <argument op="add" idref="PolicyInput.FairCreditReportingActWordingFourthLine" type="string" />
                  <argument op="add" type="string" value=" " />
                  <argument op="add" idref="PolicyInput.FairCreditReportingActWordingFifthLine" type="string" />
                  <argument op="add" type="string" value=" " />
                  <argument op="add" idref="PolicyInput.FairCreditReportingActWordingSixthLine" type="string" />
                  <argument op="add" type="string" value=" " />
                  <argument op="add" idref="PolicyInput.FairCreditReportingActWordingSeventhLine" type="string" />
                  <argument op="add" type="string" value=" " />
                  <argument op="add" idref="PolicyInput.FairCreditReportingActWordingEighthLine" type="string" />
                </calculation>
              </value>
            </rules>
          </public>
          <public id="PolicyInput.FairCreditReportingActWordingEighthLine" path="FairCreditReportingActWordingEighthLine" type="string">
            <definition>
              <caption value="Policy Input Fair Credit Reporting Act Wording Eighth Line" />
            </definition>
            <rules>
              <value value="insurance score." />
            </rules>
          </public>
          <public id="PolicyInput.FairCreditReportingActWordingFifthLine" path="FairCreditReportingActWordingFifthLine" type="string">
            <definition>
              <caption value="Policy Input Fair Credit Reporting Act Wording Fifth Line" />
            </definition>
            <rules>
              <value value="In it application process, Top Insurance requires the agent (and the agent agrees) to advise its customer (verbally or in writing) as follows: 'To determine your eligibility or premium" />
            </rules>
          </public>
          <public id="PolicyInput.FairCreditReportingActWordingFirstLine" path="FairCreditReportingActWordingFirstLine" type="string">
            <definition>
              <caption value="Fair Credit Reporting Act Wording" />
            </definition>
            <rules>
              <value value="The federal Fair Credit Reporting Act (FCRA) and state laws govern the use of consumer reports delivered via Top Insurance's quoting and application system.  Fines and penalties may" />
            </rules>
          </public>
          <public id="PolicyInput.FairCreditReportingActWordingFourthLine" path="FairCreditReportingActWordingFourthLine" type="string">
            <definition>
              <caption value="Policy Input Fair Credit Reporting Act Wording Fourth Line" />
            </definition>
            <rules>
              <value value="system is used by agent solely in connection with the underwriting and pricing of a Top Insurance insurance policy for the applicant, and for no other purpose." />
            </rules>
          </public>
          <public id="PolicyInput.FairCreditReportingActWordingSecondLine" path="FairCreditReportingActWordingSecondLine" type="string">
            <definition>
              <caption value="Policy Input Fair Credit Reporting Act Wording Second Line" />
            </definition>
            <rules>
              <value value="be imposed against an agent that knowingly and willfully obtains or uses information about a consumer from a consumer reporting agency without a premissible purpose under" />
            </rules>
          </public>
          <public id="PolicyInput.FairCreditReportingActWordingSeventhLine" path="FairCreditReportingActWordingSeventhLine" type="string">
            <definition>
              <caption value="Policy Input Fair Credit Reporting Act Wording Seventh Line" />
            </definition>
            <rules>
              <value value="use a credt-based insurance score based on the information contained in that credit history.  Top Insurance may use a third party in connection with the development of your" />
            </rules>
          </public>
          <public id="PolicyInput.FairCreditReportingActWordingSixthLine" path="FairCreditReportingActWordingSixthLine" type="string">
            <definition>
              <caption value="Policy Input Fair Credit Reporting Act Wording Sixth Line" />
            </definition>
            <rules>
              <value value="for insurance, Top Insurance may obtain loss and claims history information about you from a consumer reporting agency.  Top Insurance also may review your credit history or obtain or" />
            </rules>
          </public>
          <public id="PolicyInput.FairCreditReportingActWordingThirdLine" path="FairCreditReportingActWordingThirdLine" type="string">
            <definition>
              <caption value="Policy Input Fair Credit Reporting Act Wording Third Line" />
            </definition>
            <rules>
              <value value="applicable law. It is the agent's responsibility to ensure that any loss and claim history, credit history, and insurance score obtained using Top Insurance's quoting and application" />
            </rules>
          </public>
          <public id="PolicyInput.NumberOfLosses" path="NumberOfLosses" type="int">
            <definition>
              <caption value="Number of losses other than lightning, tornado, hail, or hurricane, whether or not paid by insurance during the last 3 years at this or any other location?" />
              <maxLength value="2" />
            </definition>
          </public>
          <public id="PolicyInput.PropertyCurrentlyInsured" path="PropertyCurrentlyInsured" type="string">
            <definition>
              <caption value="Is the property currently insured?" />
              <options>
                <option value="No" caption="No" />
                <option value="Yes" caption="Yes" />
                <option value="NewConstruction" caption="New Construction" />
              </options>
            </definition>
          </public>
        </object>
        <object id="PolicyProcessing" abstract="1">
          <object id="FunctionsPolicy" abstract="1">
            <object id="DeclineRules" abstract="1">
              <private id="DeclineRules.IsEligibleManager" type="boolean" comment="" caption="Is Eligible" override="1">
                <value idref="True" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="UnderwritingQuestionsInput.IsThereATrampolineOnPremises" type="string" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" message="DeclineRules.IsEligibleMsg4" />
                  </if>
                </misc>
              </private>
              <private id="DeclineRules.IsEligibleAgent" type="boolean" comment="" caption="Is Eligible" override="1">
                <value idref="True" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="gt">
                        <operand idref="CoverageADwellingInput.Limit" type="int" />
                        <operand type="int" value="500000" />
                      </comparison>
                    </condition>
                    <then idref="False" message="DeclineRules.IsEligibleAgentMsg1" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="AccountPrivate.ZipCodeCheck" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" message="DeclineRules.IsEligibleAgentMsg2" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="QuotePrefill" abstract="1">
              <private id="QuotePrefill.Execute" caption="" type="boolean" override="1">
                <value idref="True" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="AccountInput.PrimaryPhone" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
              <private id="QuotePrefill.ExecutePrefill" caption="" type="string" override="1">
                <value>
                  <if>
                    <condition idref="QuotePrefill.Execute" />
                    <then idref="QuotePrefill.QuotePrefill" />
                  </if>
                </value>
              </private>
            </object>
            <object id="ExecutePremiums" abstract="1">
              <private id="ExecutePremiums.CanExecute" caption="" type="boolean">
                <value idref="True" />
                <misc>
                  <if>
                    <condition idref="LockPolicy.True" />
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="DwellingOutput.RatedTerritory" type="string" />
                        <operand type="int" value="0" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="DwellingInput.RatedProtectionClass" type="string" />
                        <operand type="int" value="0" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="DwellingInput.Construction" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="StatusStarting" abstract="1">
            </object>
            <object id="PolicyNumber" abstract="1">
              <private id="PolicyNumber.LOBCode" caption="" type="string" override="1">
                <value value="PH" />
              </private>
            </object>
            <object id="ReferralRules" abstract="1">
              <private id="ReferralRules.IsBindableAgent" caption="" type="boolean" override="1">
                <value idref="True" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="gt">
                        <operand idref="CoverageADwellingInput.Limit" type="int" />
                        <operand type="int" value="400000" />
                      </comparison>
                    </condition>
                    <then idref="False" message="ReferralRules.IsBindableAgentMsg1" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="GetPhoneNumberFromNewQuote" abstract="1">
            </object>
            <object id="WrittenPremiumSharedConfiguration" abstract="1">
            </object>
            <object id="QuoteNumber" abstract="1">
              <private id="QuoteNumber.LOBCode" caption="" type="string" override="1">
                <value value="PH" />
              </private>
            </object>
          </object>
          <object id="ConstantsPolicy" abstract="1">
          </object>
          <object id="GenerateShopping">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="GenerateShopping.PopulateShoppingGrid" caption="" type="string">
              <value>
                <request verb="ManuScript.generateRatingGridRq" get="@status">
                  <responsePath value="" />
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                    <nameValue value="Dwelling" name="sourceGroup" dataType="attribute" />
                    <nameValue value="ShoppingRisk" name="targetGroup" dataType="attribute" />
                    <nameValue value="Shopping" name="optionGroup" dataType="attribute" />
                    <nameValue value="" name="preRateFields" dataType="element">
                      <nameValue value="" name="fields" dataType="element">
                        <nameValue value="ShoppingRisk.Description" name="from" dataType="attribute" />
                        <nameValue value="DwellingInput.Description" name="to" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="fields" dataType="element">
                        <nameValue value="ShoppingRisk.DwellingLimit" name="from" dataType="attribute" />
                        <nameValue value="CoverageADwellingInput.Limit" name="to" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="fields" dataType="element">
                        <nameValue value="ShoppingRisk.AllPerilDeductible" name="from" dataType="attribute" />
                        <nameValue value="DwellingInput.Deductible" name="to" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="fields" dataType="element">
                        <nameValue value="ShoppingRisk.LiabilityLimit" name="from" dataType="attribute" />
                        <nameValue value="CoverageELiabilityInput.Limit" name="to" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="fields" dataType="element">
                        <nameValue value="ShoppingRisk.MedicalLimit" name="from" dataType="attribute" />
                        <nameValue value="CoverageFMedicalInput.Limit" name="to" dataType="attribute" />
                      </nameValue>
                    </nameValue>
                    <nameValue value="" name="rateFields" dataType="element">
                      <nameValue value="data.SubmissionExecute" name="execute" dataType="attribute" />
                      <nameValue value="" name="fields" dataType="element">
                        <nameValue value="PolicyPremiums.Premium" name="from" dataType="attribute" />
                        <nameValue value="Shopping.Total" name="to" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="fields" dataType="element">
                        <nameValue value="RiskPurePremiums.PremiumWritten" name="from" dataType="attribute" />
                        <nameValue value="ShoppingRisk.Total" name="to" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="fields" dataType="element">
                        <nameValue value="CoverageADwellingInput.Limit" name="from" dataType="attribute" />
                        <nameValue value="ShoppingRisk.DwellingLimit" name="to" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="fields" dataType="element">
                        <nameValue value="DwellingInput.Deductible" name="from" dataType="attribute" />
                        <nameValue value="ShoppingRisk.AllPerilDeductible" name="to" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="fields" dataType="element">
                        <nameValue value="CoverageELiabilityInput.Limit" name="from" dataType="attribute" />
                        <nameValue value="ShoppingRisk.LiabilityLimit" name="to" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="fields" dataType="element">
                        <nameValue value="CoverageFMedicalInput.Limit" name="from" dataType="attribute" />
                        <nameValue value="ShoppingRisk.MedicalLimit" name="to" dataType="attribute" />
                      </nameValue>
                    </nameValue>
                  </nameValues>
                </request>
              </value>
            </private>
            <private id="GenerateShopping.SetupShoppingGrid" caption="" type="string">
              <value>
                <request verb="ManuScript.setupRatingGridRq" get="@status">
                  <responsePath value="" />
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                    <nameValue value="Dwelling" name="sourceGroup" dataType="attribute" />
                    <nameValue value="ShoppingRisk" name="targetGroup" dataType="attribute" />
                    <nameValue value="Shopping" name="optionGroup" dataType="attribute" />
                    <nameValue value="5" name="count" dataType="attribute" />
                    <nameValue value="" name="keyFields" dataType="element">
                      <nameValue value="" name="fields" dataType="element">
                        <nameValue value="PolicyPremiums.Premium" name="from" dataType="attribute" />
                        <nameValue value="Shopping.Total" name="to" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="fields" dataType="element">
                        <nameValue value="DwellingInput.Description" name="from" dataType="attribute" />
                        <nameValue value="ShoppingRisk.Description" name="to" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="fields" dataType="element">
                        <nameValue value="CoverageADwellingInput.Limit" name="from" dataType="attribute" />
                        <nameValue value="ShoppingRisk.DwellingLimit" name="to" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="fields" dataType="element">
                        <nameValue value="CoverageELiabilityInput.Limit" name="from" dataType="attribute" />
                        <nameValue value="ShoppingRisk.LiabilityLimit" name="to" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="fields" dataType="element">
                        <nameValue value="CoverageFMedicalInput.Limit" name="from" dataType="attribute" />
                        <nameValue value="ShoppingRisk.MedicalLimit" name="to" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="fields" dataType="element">
                        <nameValue value="DwellingInput.Deductible" name="from" dataType="attribute" />
                        <nameValue value="ShoppingRisk.AllPerilDeductible" name="to" dataType="attribute" />
                      </nameValue>
                    </nameValue>
                  </nameValues>
                </request>
              </value>
            </private>
            <private id="GenerateShopping.Value" caption="" type="string">
              <value value="" />
              <affects>
                <reference idref="GenerateShopping.SetupShoppingGrid" effect="postEffect" />
                <reference idref="GenerateShopping.PopulateShoppingGrid" effect="postEffect" />
              </affects>
            </private>
          </object>
        </object>
        <object id="PolicyPrivate" abstract="1">
          <private id="PolicyPrivate.ClearUploadFields" caption="" type="string">
            <value value="" />
            <affects>
              <reference idref="SPPInputNonShredded.AttachmentFilePath" effect="setValue" />
            </affects>
          </private>
          <private id="PolicyPrivate.IsQuote" caption="" type="boolean" override="1">
            <value>
              <comparison compare="is">
                <operand idref="PolicyOutput.Status" type="string" />
                <operand type="string" value="Quote,FullQuote,Application" />
              </comparison>
            </value>
          </private>
          <object id="IntegrationSetup" abstract="1">
            <private id="IntegrationSetup.Execute" caption="" type="string">
              <affects>
                <reference idref="IntegrationSetup.SetupIntegrationStatusFields" effect="postEffect" />
                <reference idref="IntegrationTerritorySetup.IntegrationRq" effect="postEffect" />
                <reference idref="IntegrationSetup.SetIntegrationCompleteTrue" effect="postEffect" />
              </affects>
            </private>
            <private id="IntegrationSetup.IsAnyIntegration" caption="" type="boolean">
              <value>
                <comparison idref="IntegrationTerritorySetup.UseIntegration" type="boolean" />
              </value>
            </private>
            <private id="IntegrationSetup.IsIntegrationCompleteFalse" caption="" type="boolean" path="IsIntegrationCompleteFalse">
              <value>
                <comparison compare="eq">
                  <operand idref="PolicyOutputNonShredded.IntegrationComplete" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </value>
            </private>
            <private id="IntegrationSetup.IsIntegrationCompleteTrue" caption="" type="boolean" path="IsIntegrationCompleteTrue">
              <value>
                <comparison compare="eq">
                  <operand idref="PolicyOutputNonShredded.IntegrationComplete" type="boolean" />
                  <operand idref="True" type="int" />
                </comparison>
              </value>
            </private>
            <private id="IntegrationSetup.SetIntegrationCompleteTrue" caption="" type="boolean" path="SetIntegrationCompleteTrue">
              <value idref="True" />
              <affects>
                <reference idref="PolicyOutputNonShredded.IntegrationComplete" effect="setValue" />
              </affects>
            </private>
            <private id="IntegrationSetup.SetupIntegrationStatusFields" caption="" type="string">
              <value value="" />
              <affects>
                <reference idref="IntegrationStatusInfo.TerritoryIntegrationStatus" effect="postEffect" />
              </affects>
            </private>
            <object id="IntegrationAddressSetup" abstract="1">
              <field id="IntegrationAddressSetup.IntegrationRq" />
            </object>
            <object id="IntegrationTerritorySetup" abstract="1">
              <private id="IntegrationTerritorySetup.IntegrationRq" caption="" type="string" path="IntegrationRq" override="1">
                <value>
                  <request verb="ManuScript.getValueRq" get="@status" validRef="IntegrationTerritorySetup.UseIntegration">
                    <responsePath value="" />
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue idref="PolicyAdmin.IntegrationManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue value="TerritoryLookup.integrateRequest" name="field" dataType="attribute" />
                    </nameValues>
                  </request>
                </value>
              </private>
              <private id="IntegrationTerritorySetup.UseIntegration" caption="" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="IntegrationTypeSetup" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Territory" name="Type" />
                  </lookup>
                </value>
              </private>
            </object>
          </object>
          <private id="PolicyPrivate.ShowBuyThisPolicy" caption="" type="float">
            <value>
              <comparison compare="and">
                <operand idref="AllPage.NotReadOnly" type="boolean" />
                <operand idref="SummaryPage.IsOnSummaryPage" type="boolean" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ShowBuyThisPolicyCommit" caption="" type="boolean">
            <value>
              <comparison compare="and">
                <operand idref="AllPage.NotReadOnly" type="boolean" />
                <comparison compare="or">
                  <operand idref="PurchaseInformationPage.IsOnPurchasePage" type="boolean" />
                  <operand idref="SummaryPage.IsOnPaymentDetailsPage" type="boolean" />
                </comparison>
              </comparison>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="or">
                    <comparison compare="eq">
                      <operand idref="PolicyWorkflowDataInput.IsEligible" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="PolicyWorkflowDataInput.IsBindable" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                </condition>
                <then idref="False" type="int" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="UserInterface.RequiredFieldsCompleted" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </condition>
                <then idref="False" type="int" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="UserInterface.BillingDetailsValid" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </condition>
                <then idref="False" type="int" />
              </if>
            </misc>
          </private>
        </object>
        <object id="PriorInsurance" abstract="1">
          <public id="PriorInsurance.InterestName" path="InterestName" type="string">
            <definition>
              <caption value="Interest Name" />
              <maxLength idref="MaxLength.FirstName" />
            </definition>
          </public>
          <public id="PriorInsurance.NewBusinessPayor" path="NewBusinessPayor" type="string">
            <definition>
              <caption value="New Business Payor" />
              <maxLength idref="MaxLength.Name" />
            </definition>
          </public>
          <public id="PriorInsurance.PriorPolicyNumber" path="PriorPolicyNumber" type="string">
            <definition>
              <caption value="Policy Number" />
            </definition>
          </public>
          <public id="PriorInsurance.Rank" path="Rank" type="string">
            <definition>
              <caption value="Rank" />
            </definition>
          </public>
          <public id="PriorInsurance.ReferenceLoanNumber" path="ReferenceLoanNumber" type="string">
            <definition>
              <caption value="Ref / Loan Number" />
            </definition>
          </public>
        </object>
        <object id="Shopping" path="shopping">
          <minOccurs value="0" />
          <maxOccurs value="*" />
          <private id="Shopping.ContextPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="//shopping[@id='" />
                <argument op="add" idref="Shopping.ID" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <public id="Shopping.ID" path="@id" type="string">
            <definition>
              <caption value="ID" />
            </definition>
          </public>
          <private id="Shopping.IsCustom" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="Shopping.Iteration" type="int" />
                <operand type="int" value="5" />
              </comparison>
            </value>
          </private>
          <private id="Shopping.IsFirstIteration" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="Shopping.Iteration" type="int" />
                <operand type="int" value="1" />
              </comparison>
            </value>
          </private>
          <private id="Shopping.IsNotCustom" caption="" type="boolean">
            <value>
              <comparison compare="ne">
                <operand idref="Shopping.Iteration" type="int" />
                <operand type="int" value="1" />
              </comparison>
            </value>
          </private>
          <private id="Shopping.IsNotFirstIteration" caption="" type="boolean">
            <value>
              <comparison compare="ne">
                <operand idref="Shopping.Iteration" type="int" />
                <operand type="int" value="1" />
              </comparison>
            </value>
          </private>
          <private id="Shopping.Iteration" caption="" type="int">
            <value>
              <iterator type="int" scope="all" action="current" idref="Shopping" />
            </value>
          </private>
          <public id="Shopping.OptionName" path="OptionName" type="string" override="1">
            <definition>
              <caption value="" />
            </definition>
            <rules>
              <default>
                <select idref="Shopping.Iteration">
                  <case type="string" value="Custom" select="1" />
                  <case type="string" value="Economy" select="2" />
                  <case type="string" value="Standard" select="3" />
                  <case type="string" value="Deluxe" select="4" />
                  <case type="string" value="Plus" select="5" />
                </select>
              </default>
            </rules>
          </public>
          <private id="Shopping.Select" caption="" type="string" override="1">
            <value>
              <request verb="ManuScript.chooseRatingGridOptionRq" get="@status">
                <responsePath value="" />
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                  <nameValue value="Dwelling" name="sourceGroup" dataType="attribute" />
                  <nameValue value="ShoppingRisk" name="targetGroup" dataType="attribute" />
                  <nameValue value="Shopping" name="optionGroup" dataType="attribute" />
                  <nameValue idref="Shopping.ID" name="selectedOptionID" dataType="attribute" />
                  <nameValue value="" name="keyFields" dataType="element">
                    <nameValue value="" name="fields" dataType="element">
                      <nameValue value="ShoppingRisk.DwellingLimit" name="from" dataType="attribute" />
                      <nameValue value="CoverageADwellingInput.Limit" name="to" dataType="attribute" />
                    </nameValue>
                    <nameValue value="" name="fields" dataType="element">
                      <nameValue value="ShoppingRisk.AllPerilDeductible" name="from" dataType="attribute" />
                      <nameValue value="DwellingInput.Deductible" name="to" dataType="attribute" />
                    </nameValue>
                    <nameValue value="" name="fields" dataType="element">
                      <nameValue value="ShoppingRisk.LiabilityLimit" name="from" dataType="attribute" />
                      <nameValue value="CoverageELiabilityInput.Limit" name="to" dataType="attribute" />
                    </nameValue>
                    <nameValue value="" name="fields" dataType="element">
                      <nameValue value="ShoppingRisk.MedicalLimit" name="from" dataType="attribute" />
                      <nameValue value="CoverageFMedicalInput.Limit" name="to" dataType="attribute" />
                    </nameValue>
                  </nameValue>
                </nameValues>
              </request>
            </value>
            <affects>
              <reference idref="Shopping.SetCoveragePackage" effect="postEffect" />
            </affects>
          </private>
          <public id="Shopping.Total" path="Total" type="float">
            <definition>
              <caption value="Total" />
              <formatMask idref="FormatMask.Premium" />
            </definition>
            <rules>
              <value>
                <iterator type="float" scope="all" action="sum" idref="ShoppingRisk">
                  <reference idref="ShoppingRisk.Total" type="float" />
                </iterator>
              </value>
            </rules>
          </public>
          <object id="ShoppingRisk" path="shoppingrisk">
            <minOccurs value="0" />
            <maxOccurs value="*" />
            <public id="ShoppingRisk.AllPerilDeductible" path="AllPerilDeductible" type="int">
              <definition>
                <caption value="All Peril Deductible" />
                <formatMask idref="FormatMask.Premium" />
              </definition>
              <rules>
                <value>
                  <if>
                    <condition idref="Shopping.IsCustom" />
                    <then idref="DwellingInput.Deductible" />
                    <else>
                      <lookup>
                        <tableRef value="CoverageDefaults" />
                        <fieldRef value="Deductible" />
                        <keyRef idref="Shopping.OptionName" type="string" name="Coverage Package" />
                      </lookup>
                    </else>
                  </if>
                </value>
              </rules>
            </public>
            <private id="ShoppingRisk.ContextPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="shoppingrisk[" />
                  <argument op="add" idref="ShoppingRisk.Iteration" type="int" />
                  <argument op="add" type="string" value="]" />
                </calculation>
              </value>
            </private>
            <public id="ShoppingRisk.Description" path="Description" type="string">
              <definition>
                <caption value="Description" />
              </definition>
            </public>
            <public id="ShoppingRisk.DwellingLimit" path="DwellingLimit" type="float">
              <definition>
                <caption value="Dwelling Limit" />
                <formatMask idref="FormatMask.Premium" />
              </definition>
              <rules>
                <default idref="CoverageADwellingInput.Limit" />
              </rules>
            </public>
            <private id="ShoppingRisk.Iteration" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="current" idref="ShoppingRisk" />
              </value>
            </private>
            <public id="ShoppingRisk.LiabilityLimit" path="LiabilityLimit" type="float">
              <definition>
                <caption value="Liability Limit" />
                <formatMask idref="FormatMask.Premium" />
              </definition>
              <rules>
                <value>
                  <if>
                    <condition idref="Shopping.IsCustom" />
                    <then idref="CoverageELiabilityInput.Limit" />
                    <else>
                      <lookup>
                        <tableRef value="CoverageDefaults" />
                        <fieldRef value="Liability" />
                        <keyRef idref="Shopping.OptionName" type="string" name="Coverage Package" />
                      </lookup>
                    </else>
                  </if>
                </value>
              </rules>
            </public>
            <public id="ShoppingRisk.LossOfUseLimit" path="LossOfUseLimit" type="float">
              <definition>
                <caption value="Loss Of Use Limit" />
              </definition>
            </public>
            <public id="ShoppingRisk.MedicalLimit" path="MedicalLimit" type="float">
              <definition>
                <caption value="Medical Limit" />
                <formatMask idref="FormatMask.Premium" />
              </definition>
              <rules>
                <value>
                  <if>
                    <condition idref="Shopping.IsCustom" />
                    <then idref="CoverageFMedicalInput.Limit" />
                    <else>
                      <lookup>
                        <tableRef value="CoverageDefaults" />
                        <fieldRef value="Medical" />
                        <keyRef idref="Shopping.OptionName" type="string" name="Coverage Package" />
                      </lookup>
                    </else>
                  </if>
                </value>
              </rules>
            </public>
            <public id="ShoppingRisk.OtherStructuresLimit" path="OtherStructuresLimit" type="float">
              <definition>
                <caption value="Other Structures Limit" />
              </definition>
            </public>
            <public id="ShoppingRisk.PersonalPropertyLimit" path="PersonalPropertyLimit" type="float">
              <definition>
                <caption value="Personal Property Limit" />
              </definition>
            </public>
            <public id="ShoppingRisk.Total" path="Total" type="float">
              <definition>
                <caption value="Total" />
                <formatMask idref="FormatMask.Premium" />
              </definition>
            </public>
          </object>
          <private id="Shopping.SetCoveragePackage" caption="" type="string">
            <value>
              <select idref="Shopping.Iteration">
                <case type="string" value="Economy" select="1" />
                <case type="string" value="Standard" select="2" />
                <case type="string" value="Deluxe" select="3" />
                <case type="string" value="Plus" select="4" />
                <case type="string" value="Custom" select="5" />
              </select>
            </value>
            <affects>
              <reference idref="LineInput.CoveragePackage" effect="setValue" />
            </affects>
          </private>
        </object>
      </object>
      <object id="Account" abstract="1">
        <object id="AccountInput" abstract="1">
          <public id="AccountInput.State" path="address/State" type="string" override="1">
            <definition>
              <caption value="State" />
              <maxLength idref="MaxLength.State" />
              <formatMask idref="FormatMask.BlankOption" />
              <required idref="True" />
              <options validRef="AgencyMiscInfo.NoLicenseDefined" idref="StateAbbreviations" name="State" />
              <options codeRef="License.State" captionRef="License.State" referenceListRef="License.IsLOB" />
            </definition>
            <rules>
              <default>
                <request verb="Session.getPropertyRq" get="@value">
                  <responsePath value="" />
                  <onFailure idref="Spacer" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue value="State" name="name" dataType="attribute" />
                  </nameValues>
                </request>
              </default>
            </rules>
          </public>
          <public id="AccountInput.BirthDate" path="BirthDate" type="string">
            <definition>
              <caption value="Birthdate" />
            </definition>
          </public>
          <public id="AccountInput.Email" path="Email" type="string" override="1">
            <definition>
              <caption value="E-mail Address" />
              <maxLength idref="MaxLength.EMail" />
              <formatMask value="email" />
              <required>
                <comparison compare="or">
                  <operand idref="PolicyPrivate.IsNotQuote" type="boolean" />
                  <operand idref="AccountPrivate.IsRequired" type="boolean" />
                </comparison>
              </required>
            </definition>
          </public>
          <public id="AccountInput.EmailNotRequired" path="EmailNotRequired" type="boolean">
            <definition>
              <caption value="Does not have Email" />
            </definition>
          </public>
          <public id="AccountInput.LastName" path="person[1]/LastName" type="string" override="1">
            <definition>
              <caption value="Last Name" />
              <maxLength idref="MaxLength.LastName" />
              <required>
                <comparison compare="or">
                  <operand idref="PolicyPrivate.IsNotQuote" type="boolean" />
                  <operand idref="AccountPrivate.IsRequired" type="boolean" />
                </comparison>
              </required>
            </definition>
            <rules>
              <affects>
                <reference idref="AccountInput.Name" effect="onChange" />
                <reference idref="AccountPrivate.ConsumerLastName" effect="postEffect" />
              </affects>
              <default>
                <request verb="Session.getPropertyRq" get="@value">
                  <responsePath value="" />
                  <onFailure idref="Spacer" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue value="PartyName" name="name" dataType="attribute" />
                  </nameValues>
                </request>
              </default>
            </rules>
          </public>
          <public id="AccountInput.MaritalStatus" path="MaritalStatus" type="string">
            <definition>
              <caption value="Marital Status" />
              <options>
                <option value="Single" caption="Single" />
                <option value="Married" caption="Married" />
                <option value="Divorced" caption="Divorced" />
                <option value="Widowed" caption="Widowed" />
              </options>
            </definition>
          </public>
          <public id="AccountInput.Name" path="Name" type="string" alwaysRun="1" override="1">
            <definition>
              <caption value="Name" />
              <maxLength idref="MaxLength.Name" />
              <required>
                <comparison compare="eq">
                  <operand idref="PolicyOutput.Status" type="string" />
                  <operand type="string" value="Application" />
                </comparison>
              </required>
            </definition>
            <rules>
              <affects>
                <reference idref="QuoteNumber.Value" effect="postEffect" />
              </affects>
              <value>
                <calculation>
                  <argument op="eq" idref="AccountInput.FirstName" type="string" />
                  <argument op="add" type="string" value=" " />
                  <argument op="add" idref="AccountInput.MiddleName" type="string" />
                  <argument op="add" type="string" value=" " />
                  <argument op="add" idref="AccountInput.LastName" type="string" />
                </calculation>
              </value>
            </rules>
          </public>
          <public id="AccountInput.ZipCode" path="address/ZipCode" type="string" override="1">
            <definition>
              <caption value="Zip Code" />
              <maxLength idref="MaxLength.Zip" />
              <formatMask idref="FormatMask.Zipcode" />
              <required>
                <comparison compare="or">
                  <operand idref="PolicyPrivate.IsNotQuote" type="boolean" />
                  <operand idref="AccountPrivate.IsRequired" type="boolean" />
                </comparison>
              </required>
            </definition>
            <rules>
              <affects>
                <reference idref="IntegrationTerritorySetup.IntegrationRq" effect="onChange" />
              </affects>
              <default>
                <request verb="Session.getPropertyRq" get="@value">
                  <responsePath value="" />
                  <onFailure idref="Spacer" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue value="ZipCode" name="name" dataType="attribute" />
                  </nameValues>
                </request>
              </default>
            </rules>
          </public>
          <public id="AccountInput.CityStateZip" path="CityStateZip" type="string" alwaysRun="1">
            <definition>
              <caption value="City State Zip" />
            </definition>
            <rules>
              <value>
                <calculation>
                  <argument op="eq" idref="AccountInput.City" type="string" />
                  <argument op="add" type="string" value=", " />
                  <argument op="add" idref="AccountInput.State" type="string" />
                  <argument op="add" type="string" value=" " />
                  <argument op="add" idref="AccountInput.ZipCode" type="string" />
                </calculation>
              </value>
            </rules>
          </public>
          <public id="AccountInput.CoApplicantName" path="CoApplicantName" type="string">
            <definition>
              <caption value="Co Applicant Name" />
            </definition>
            <rules>
              <value>
                <calculation>
                  <argument op="eq" idref="AccountInput.CoApplicantFirstName" type="string" />
                  <argument op="add" type="string" value=" " />
                  <argument op="add" idref="AccountInput.CoApplicantMiddleName" type="string" />
                  <argument op="add" type="string" value=" " />
                  <argument op="add" idref="AccountInput.CoApplicantLastName" type="string" />
                </calculation>
              </value>
            </rules>
          </public>
          <public id="AccountInput.Address1" path="address/Address1" type="string" override="1">
            <definition>
              <maxLength idref="MaxLength.Address" />
              <caption value="Address 1" />
              <required>
                <comparison compare="or">
                  <operand idref="PolicyPrivate.IsNotQuote" type="boolean" />
                  <operand idref="AccountPrivate.IsRequired" type="boolean" />
                </comparison>
              </required>
            </definition>
            <rules>
              <default>
                <request verb="Session.getPropertyRq" get="@value">
                  <responsePath value="" />
                  <onFailure idref="Address.AddressConcatenation" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default idref="Address.AddressConcatenation" />
                  <nameValues>
                    <nameValue value="Address1" name="name" dataType="attribute" />
                  </nameValues>
                </request>
              </default>
            </rules>
          </public>
          <public id="AccountInput.FirstName" path="person[1]/FirstName" type="string" override="1">
            <definition>
              <caption value="First Name" />
              <maxLength idref="MaxLength.FirstName" />
              <required>
                <comparison compare="or">
                  <operand idref="PolicyPrivate.IsNotQuote" type="boolean" />
                  <operand idref="AccountPrivate.IsRequired" type="boolean" />
                </comparison>
              </required>
            </definition>
            <rules>
              <default>
                <request verb="Session.getPropertyRq" get="@value">
                  <responsePath value="" />
                  <onFailure idref="Spacer" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue value="FirstName" name="name" dataType="attribute" />
                  </nameValues>
                </request>
              </default>
            </rules>
          </public>
          <public id="AccountInput.MiddleName" path="person[1]/MiddleName" type="string" override="1">
            <definition>
              <caption value="Middle Name" />
              <maxLength idref="MaxLength.MiddleName" />
            </definition>
            <rules>
              <default>
                <request verb="Session.getPropertyRq" get="@value">
                  <responsePath value="" />
                  <onFailure idref="Spacer" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue value="MiddleName" name="name" dataType="attribute" />
                  </nameValues>
                </request>
              </default>
            </rules>
          </public>
          <public id="AccountInput.Address2" path="address/Address2" type="string" override="1">
            <definition>
              <caption value="Address 2" />
              <maxLength idref="MaxLength.Address" />
            </definition>
            <rules>
              <default>
                <request verb="Session.getPropertyRq" get="@value">
                  <responsePath value="" />
                  <onFailure idref="Spacer" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue value="Address2" name="name" dataType="attribute" />
                  </nameValues>
                </request>
              </default>
            </rules>
          </public>
          <public id="AccountInput.City" path="address/City" type="string" override="1">
            <definition>
              <caption value="City" />
              <maxLength idref="MaxLength.City" />
              <required>
                <comparison compare="or">
                  <operand idref="PolicyPrivate.IsNotQuote" type="boolean" />
                  <operand idref="AccountPrivate.IsRequired" type="boolean" />
                </comparison>
              </required>
            </definition>
            <rules>
              <default>
                <request verb="Session.getPropertyRq" get="@value">
                  <responsePath value="" />
                  <onFailure idref="Spacer" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue value="City" name="name" dataType="attribute" />
                  </nameValues>
                </request>
              </default>
            </rules>
          </public>
          <public id="AccountInput.PrimaryPhone" path="PrimaryPhone" type="string" override="1">
            <definition>
              <caption value="Primary Phone" />
              <formatMask idref="FormatMask.PhoneFax" />
              <maxLength idref="MaxLength.PhoneFax" />
              <required>
                <comparison compare="or">
                  <operand idref="PolicyPrivate.IsNotQuote" type="boolean" />
                  <operand idref="AccountPrivate.IsRequired" type="boolean" />
                </comparison>
              </required>
            </definition>
            <rules>
              <default idref="GetPhoneNumberFromNewQuote.ExecuteRequest" />
            </rules>
          </public>
        </object>
        <object id="Person" abstract="1">
          <object id="PersonInput" abstract="1" override="1">
            <public id="PersonInput.EmailAddress" path="EmailAddress" type="string">
              <definition>
                <caption value="Email Address" />
              </definition>
            </public>
            <public id="PersonInput.Occupation" path="Occupation" type="string">
              <definition>
                <caption value="Occupation" />
              </definition>
            </public>
            <public id="PersonInput.WorkPhone" path="WorkPhone" type="string">
              <definition>
                <caption value="Work Phone" />
                <formatMask idref="FormatMask.PhoneFax" />
                <maxLength idref="MaxLength.PhoneFax" />
              </definition>
            </public>
            <object id="MailingAddressInfo" path="mailingaddressinfo">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="MailingAddressInfo.MailingAddress1" path="MailingAddress1" type="string" alwaysRun="1">
                <definition>
                  <caption value="Mailing Address 1" />
                  <maxLength idref="MaxLength.Address" />
                </definition>
              </public>
              <public id="MailingAddressInfo.MailingAddress2" path="MailingAddress2" type="string">
                <definition>
                  <caption value="Mailing Address 2" />
                  <maxLength idref="MaxLength.Address" />
                </definition>
              </public>
              <public id="MailingAddressInfo.MailingAddressSame" path="MailingAddressSame" type="boolean">
                <definition>
                  <caption idref="PersonPrivate.MailingAddressSameCaption" />
                  <options>
                    <option value="0" caption="No" />
                    <option value="1" caption="Yes" default="1" />
                  </options>
                </definition>
                <rules>
                  <default value="1" />
                </rules>
              </public>
              <public id="MailingAddressInfo.MailingCity" path="MailingCity" type="string">
                <definition>
                  <caption value="Mailing City" />
                  <maxLength idref="MaxLength.City" />
                </definition>
              </public>
              <public id="MailingAddressInfo.MailingState" path="MailingState" type="string">
                <definition>
                  <caption value="Mailing State" />
                  <maxLength idref="MaxLength.State" />
                  <options>
                    <option value="AK" caption="AK" />
                    <option value="AL" caption="AL" />
                    <option value="AR" caption="AR" />
                    <option value="AZ" caption="AZ" />
                    <option value="CA" caption="CA" />
                    <option value="CO" caption="CO" />
                    <option value="CT" caption="CT" />
                    <option value="DC" caption="DC" />
                    <option value="DE" caption="DE" />
                    <option value="FL" caption="FL" />
                    <option value="GA" caption="GA" />
                    <option value="HI" caption="HI" />
                    <option value="IA" caption="IA" />
                    <option value="ID" caption="ID" />
                    <option value="IL" caption="IL" />
                    <option value="IN" caption="IN" />
                    <option value="KS" caption="KS" />
                    <option value="KY" caption="KY" />
                    <option value="LA" caption="LA" />
                    <option value="MA" caption="MA" />
                    <option value="MD" caption="MD" />
                    <option value="ME" caption="ME" />
                    <option value="MI" caption="MI" />
                    <option value="MN" caption="MN" />
                    <option value="MO" caption="MO" />
                    <option value="MS" caption="MS" />
                    <option value="MT" caption="MT" />
                    <option value="NC" caption="NC" />
                    <option value="ND" caption="ND" />
                    <option value="NE" caption="NE" />
                    <option value="NH" caption="NH" />
                    <option value="NJ" caption="NJ" />
                    <option value="NM" caption="NM" />
                    <option value="NV" caption="NV" />
                    <option value="NY" caption="NY" />
                    <option value="OH" caption="OH" />
                    <option value="OK" caption="OK" />
                    <option value="OR" caption="OR" />
                    <option value="PA" caption="PA" />
                    <option value="RI" caption="RI" />
                    <option value="SC" caption="SC" />
                    <option value="SD" caption="SD" />
                    <option value="TN" caption="TN" />
                    <option value="TX" caption="TX" />
                    <option value="UT" caption="UT" />
                    <option value="VA" caption="VA" />
                    <option value="VT" caption="VT" />
                    <option value="WA" caption="WA" />
                    <option value="WI" caption="WI" />
                    <option value="WV" caption="WV" />
                    <option value="WY" caption="WY" />
                  </options>
                </definition>
              </public>
              <public id="MailingAddressInfo.MailingZipcode" path="MailingZipcode" type="string">
                <definition>
                  <caption value="Mailing Zipcode" />
                  <maxLength idref="MaxLength.Zip" />
                  <formatMask idref="FormatMask.Zipcode" />
                </definition>
              </public>
              <private id="MailingAddressInfo.MailingAddressCityStateZip" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" idref="MailingAddressInfo.MailingCity" type="string" />
                    <argument op="add" type="string" value=", " />
                    <argument op="add" idref="MailingAddressInfo.MailingState" type="string" />
                    <argument op="add" type="string" value=" " />
                    <argument op="add" idref="MailingAddressInfo.MailingZipcode" type="string" />
                  </calculation>
                </value>
              </private>
              <private id="MailingAddressInfo.MailingAddressCombined" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" idref="MailingAddressInfo.MailingAddress1" type="string" />
                    <argument op="add" type="string" value=" " />
                    <argument op="add" idref="MailingAddressInfo.MailingAddress2" type="string" />
                  </calculation>
                </value>
              </private>
            </object>
            <private id="PersonInput.CityStateZip" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" idref="PersonInput.City" type="string" />
                  <argument op="add" type="string" value=", " />
                  <argument op="add" idref="PersonInput.State" type="string" />
                  <argument op="add" type="string" value=" " />
                  <argument op="add" idref="PersonInput.ZipCode" type="string" />
                </calculation>
              </value>
            </private>
            <private id="PersonInput.CombinedAddress" caption="" type="string" alwaysRun="1">
              <value>
                <calculation>
                  <argument op="eq" idref="PersonInput.Address1" type="string" />
                  <argument op="add" type="string" value=" " />
                  <argument op="add" idref="PersonInput.Address2" type="string" />
                </calculation>
              </value>
            </private>
            <public id="PersonInput.State" path="State" type="string" override="1">
              <definition>
                <caption value="State" />
                <maxLength idref="MaxLength.State" />
                <formatMask idref="FormatMask.BlankOption" />
                <options idref="StateAbbreviations" name="State" />
              </definition>
            </public>
          </object>
          <object id="PersonPrivate" abstract="1">
            <private id="PersonPrivate.MailingAddressSameCaption" caption="" type="string" alwaysRun="1">
              <value>
                <if>
                  <condition idref="PersonPrivate.PersonIsApplicant" />
                  <then value="Is the applicant's mailing address the same as the property address?" />
                  <else value="Is the co-applicant's mailing address the same as the property address?" />
                </if>
              </value>
            </private>
            <private id="PersonPrivate.ShowMailingAddress" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="MailingAddressInfo.MailingAddressSame" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </value>
            </private>
          </object>
          <object id="PersonOutput" abstract="1">
          </object>
        </object>
        <object id="AdditionalOtherInterest" path="additionalOtherInterest" abstract="1">
          <minOccurs value="0" />
          <maxOccurs value="*" />
          <object id="AdditionalOtherInterestInput" path="" abstract="1">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="AdditionalOtherInterestInput.FirstName" path="FirstName" type="string">
              <definition>
                <caption value="First Name" />
              </definition>
            </public>
            <public id="AdditionalOtherInterestInput.MiddleName" path="MiddleName" type="string">
              <definition>
                <caption value="Middle Name" />
              </definition>
            </public>
            <public id="AdditionalOtherInterestInput.LastName" path="LastName" type="string">
              <definition>
                <caption value="Last Name" />
              </definition>
              <rules>
                <affects>
                  <reference idref="AdditionalOtherInterestInput.Name" effect="postEffect" />
                </affects>
              </rules>
            </public>
            <public id="AdditionalOtherInterestInput.InterestType" path="InterestType" type="string">
              <definition>
                <caption value="Interest Type" />
                <options>
                  <option value="Organization" caption="Organization" />
                  <option value="Individual" caption="Individual" />
                </options>
                <formatMask idref="FormatMask.BlankOption" />
              </definition>
            </public>
            <public id="AdditionalOtherInterestInput.Name" path="Name" type="string" override="1">
              <definition>
                <caption value="Name" />
                <maxLength idref="MaxLength.Name" />
                <required idref="True" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="AdditionalOtherInterestInput.InterestType" type="string" />
                        <operand type="string" value="Individual" />
                      </comparison>
                    </condition>
                    <then idref="AdditionalOtherInterestPrivate.CalculatedName" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="AdditionalOtherInterestInput.LoanNumber" path="LoanNumber" type="string">
              <definition>
                <caption value="Loan Number" />
              </definition>
            </public>
          </object>
          <object id="AdditionalOtherInterestOutput" abstract="1">
          </object>
          <object id="AdditionalOtherInterestPrivate" abstract="1">
            <private id="AdditionalOtherInterestPrivate.IsTypeIndividual" caption="" type="boolean" alwaysRun="1">
              <value>
                <comparison compare="eq">
                  <operand idref="AdditionalOtherInterestInput.InterestType" type="string" />
                  <operand type="string" value="Individual" />
                </comparison>
              </value>
            </private>
            <private id="AdditionalOtherInterestPrivate.IsTypeOrganization" caption="" type="boolean" alwaysRun="1">
              <value>
                <comparison compare="eq">
                  <operand idref="AdditionalOtherInterestInput.InterestType" type="string" />
                  <operand type="string" value="Organization" />
                </comparison>
              </value>
            </private>
            <private id="AdditionalOtherInterestPrivate.CalculatedName" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" idref="AdditionalOtherInterestInput.FirstName" type="string" />
                  <argument op="add" type="string" value=" " />
                  <argument op="add" idref="AdditionalOtherInterestInput.MiddleName" type="string" />
                  <argument op="add" type="string" value=" " />
                  <argument op="add" idref="AdditionalOtherInterestInput.LastName" type="string" />
                </calculation>
              </value>
            </private>
            <private id="AdditionalOtherInterestPrivate.CityStateZip" type="string" comment="" caption="City State Zip" alwaysRun="1" path="CityStateZip">
              <value>
                <calculation>
                  <argument op="eq" idref="AdditionalOtherInterestInput.City" type="string" />
                  <argument op="add" type="string" value=", " />
                  <argument op="add" idref="AdditionalOtherInterestInput.State" type="string" />
                  <argument op="add" type="string" value=" " />
                  <argument op="add" idref="AdditionalOtherInterestInput.ZipCode" type="string" />
                </calculation>
              </value>
            </private>
            <private id="AdditionalOtherInterestPrivate.FullAddress" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" idref="AdditionalOtherInterestInput.Address1" type="string" />
                  <argument op="add" type="string" value=" " />
                  <argument op="add" idref="AdditionalOtherInterestInput.Address2" type="string" />
                  <argument op="add" type="string" value=" " />
                  <argument op="add" idref="AdditionalOtherInterestPrivate.CityStateZip" type="string" />
                </calculation>
              </value>
            </private>
          </object>
        </object>
        <object id="AccountPrivate" abstract="1">
          <private id="AccountPrivate.CountyStateConcatination" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" idref="AccountInput.County" type="string" />
                <argument op="add" type="string" value=", " />
                <argument op="add" idref="AccountInput.State" type="string" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.LockDownCoastalZipCodes" caption="" type="int">
            <value>
              <lookup>
                <tableRef value="CoastalZipCodesSC" />
                <fieldRef value="ZipCode" />
                <keyRef idref="AccountInput.ZipCode" type="string" name="ZipCode" />
              </lookup>
            </value>
          </private>
          <private id="AccountPrivate.LockDownCoastalZipCodesLookup" caption="" type="boolean">
            <value>
              <lookup>
                <tableRef value="LockDownCoastalZipCodes" />
                <fieldRef value="Value" />
                <keyRef type="string" value="Enabled" name="Value" />
              </lookup>
            </value>
          </private>
          <private id="AccountPrivate.NewQuoteState" caption="" type="string" path="NewQuoteState">
            <value>
              <request verb="Session.getPropertyRq" get="@value">
                <responsePath value="" />
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="failure" />
                <nameValues>
                  <nameValue value="State" name="name" dataType="attribute" />
                </nameValues>
              </request>
            </value>
          </private>
          <private id="AccountPrivate.StateDefault" caption="" type="string">
            <value>
              <if>
                <condition>
                  <comparison compare="ne">
                    <operand idref="AccountPrivate.NewQuoteState" type="string" />
                    <operand type="string" value="" />
                  </comparison>
                </condition>
                <then idref="AccountPrivate.NewQuoteState" />
                <else idref="AccountInput.State" />
              </if>
            </value>
          </private>
          <private id="AccountPrivate.ZipCodeCheck" caption="" type="boolean">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="AccountPrivate.LockDownCoastalZipCodesLookup" type="boolean" />
                  <operand type="int" value="1" />
                </comparison>
                <comparison compare="eq">
                  <operand idref="AccountPrivate.LockDownCoastalZipCodes" type="int" />
                  <operand idref="AccountInput.ZipCode" type="string" />
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.CoApplicantExists" caption="" type="boolean" override="1">
            <value>
              <if>
                <condition>
                  <comparison compare="gt">
                    <operand idref="AccountPrivate.PersonCount" type="int" />
                    <operand type="int" value="1" />
                  </comparison>
                </condition>
                <then value="1" />
                <else value="0" />
              </if>
            </value>
          </private>
        </object>
        <object id="Location" abstract="1">
          <object id="LocationPrivate" abstract="1">
          </object>
          <object id="LocationInput" abstract="1">
            <public id="LocationInput.CityStateZip" type="string" comment="" path="LocationInputCityStateZip">
              <rules>
                <value>
                  <calculation>
                    <argument op="eq" idref="LocationInput.City" type="string" />
                    <argument op="add" type="string" value=", " />
                    <argument op="add" idref="LocationInput.State" type="string" />
                    <argument op="add" type="string" value=" " />
                    <argument op="add" idref="LocationInput.ZipCode" type="string" />
                  </calculation>
                </value>
              </rules>
            </public>
          </object>
        </object>
        <object id="AccountOutput" abstract="1">
          <object id="AccountOutputNonShredded" abstract="1">
            <public id="AccountOutputNonShredded.Territory" path="Territory" type="int">
              <definition>
                <caption value="Territory" />
              </definition>
            </public>
            <public id="AccountOutputNonShredded.PrimaryInsuredText" path="PrimaryInsuredText" type="string" override="1">
              <definition>
                <caption value="" />
                <readOnly idref="True" />
              </definition>
              <rules>
                <value value="Primary Insured" />
                <default value="Primary Insured" />
              </rules>
            </public>
          </object>
          <private id="AccountOutput.CombinedAddress" caption="" type="string" path="CombinedAddress">
            <value>
              <calculation>
                <argument op="eq" idref="AccountInput.Address1" type="string" />
                <argument op="add" type="string" value=" " />
                <argument op="add" idref="AccountInput.Address2" type="string" />
              </calculation>
            </value>
          </private>
        </object>
        <object id="AccountPBBI" abstract="1">
          <object id="InteractiveMap" abstract="1">
            <private id="InteractiveMap.ViewMapPreEvent" type="string" caption="View Map" path="ViewMapPreEvent" override="1">
              <value>
                <request verb="ManuScript.exportRq" get="">
                  <responsePath value="" />
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                    <nameValue value="PBBI Account View Map" name="mappingId" dataType="attribute" />
                    <nameValue idref="AccountOutput.ID" name="contextId" dataType="attribute" />
                    <nameValue value="viewmap" name="rootName" dataType="attribute" />
                    <nameValue value="_Integration^data/pitneybowes/viewmap" name="responseSessionPath" dataType="attribute" />
                    <nameValue value="ManuScript.exportRs/viewmap/ViewMap" name="responseSelect" dataType="attribute" />
                  </nameValues>
                </request>
              </value>
            </private>
          </object>
        </object>
      </object>
      <object id="PolicyAdmin" abstract="1">
        <object id="PolicyAdminProcessing" abstract="1">
          <object id="ConstantsPolicyAdminProcessing" abstract="1">
            <object id="CurrentTransaction" abstract="1">
            </object>
          </object>
          <object id="FunctionsPolicyAdminProcessing" abstract="1">
            <object id="RenewalCoverageAdjustments">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="RenewalCoverageAdjustments.AdjustCoverages" caption="" type="string">
                <value>
                  <iterator type="string" scope="all" action="sum" idref="Risk">
                    <reference idref="CoverageADwellingPrivate.RenewalAdjustCoverage" type="float" />
                    <reference idref="CoverageBOtherStructuresInput.Limit" type="int" />
                    <reference idref="CoverageCPersonalPropertyHO3Input.Limit" type="int" />
                    <reference idref="CoverageDLossOfUseInput.Limit" type="int" />
                    <reference idref="ReplacementCostDwellingPrivate.RenewalAdjustCoverage" type="float" />
                  </iterator>
                </value>
              </private>
              <private id="RenewalCoverageAdjustments.Execute" caption="" type="string">
                <value value="" />
                <affects>
                  <reference idref="RenewalCoverageAdjustments.AdjustCoverages" effect="postEffect" />
                </affects>
              </private>
              <private id="RenewalCoverageAdjustments.Value" caption="" type="string" override="1">
                <value>
                  <if>
                    <condition idref="PolicyPrivate.IsCurrentTransactionRenew" />
                    <then idref="RenewalCoverageAdjustments.Execute" />
                  </if>
                </value>
              </private>
            </object>
            <object id="StartTransactionSetup" abstract="1">
              <private id="StartTransactionSetup.ValueNotOutOfSequence" caption="" type="boolean" override="1">
                <value idref="True" />
                <affects>
                  <reference idref="ClearingFormsData.Value" effect="postEffect" />
                  <reference idref="RemoveMarkForDelete.Check" effect="postEffect" />
                  <reference idref="RenewalCoverageAdjustments.Value" effect="postEffect" />
                </affects>
              </private>
            </object>
          </object>
        </object>
        <public id="PolicyAdmin.UseDCTFormsAndMessages" path="UseDCTFormsAndMessages" type="boolean" override="1">
          <definition>
            <caption value="Include Forms" />
          </definition>
          <rules>
            <default idref="True" />
          </rules>
        </public>
        <private id="PolicyAdmin.UseSPPAppraisalRule" caption="" type="boolean">
          <value value="1" />
        </private>
      </object>
      <object id="UserInterface" abstract="1">
        <object id="DwellingPage">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <private id="DwellingPage.Show" caption="" type="boolean">
            <value idref="True" />
          </private>
          <private id="DwellingPage.ReadOnly" caption="" type="boolean">
            <value idref="False" />
            <misc>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="LockPolicy.True" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
        </object>
        <object id="RatePage">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <private id="RatePage.ReadOnly" caption="" type="boolean">
            <value idref="False" />
            <misc>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="LockPolicy.True" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="RatePage.Show" caption="" type="boolean">
            <value idref="True" />
          </private>
        </object>
        <object id="UnderwritingPage">
          <minOccurs value="1" />
          <maxOccurs value="1" />
        </object>
        <object id="AdditionalOtherInterestPage">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <private id="AdditionalOtherInterestPage.ReadOnly" caption="" type="boolean">
            <value idref="False" />
            <misc>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="LockPolicy.True" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="AdditionalOtherInterestPage.Show" caption="" type="boolean">
            <value idref="True" />
          </private>
        </object>
        <object id="AllPage" abstract="1">
          <private id="AllPage.NotReadOnly" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="AllPage.ReadOnly" type="boolean" />
                <operand idref="False" type="int" />
              </comparison>
            </value>
          </private>
        </object>
        <object id="AccountPage" abstract="1">
        </object>
        <object id="PricingPage" abstract="1">
          <private id="PricingPage.Show" caption="" type="boolean" override="1">
            <value idref="False" />
          </private>
        </object>
        <object id="AdditionalCoveragePage">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <private id="AdditionalCoveragePage.ReadOnly" caption="" type="boolean">
            <value idref="False" />
            <misc>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="AllPage.ReadOnly" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="AdditionalCoveragePage.Show" caption="" type="boolean">
            <value idref="True" />
          </private>
        </object>
        <object id="QuickQuotePage">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <private id="QuickQuotePage.Calculate" caption="" type="float">
            <value value="0" />
            <affects>
              <reference idref="CoverageDefault.CoverageB" effect="postEffect" />
              <reference idref="CoverageDefault.CoverageC" effect="postEffect" />
              <reference idref="CoverageDefault.CoverageD" effect="postEffect" />
              <reference idref="CoverageDefault.CoverageOtherStructuresRentedToOthers" effect="postEffect" />
              <reference idref="CoverageDefault.CoveragePersonalPropertyOtherResidence" effect="postEffect" />
              <reference idref="data.TotalPremiumWritten" effect="postEffect" />
            </affects>
          </private>
        </object>
        <object id="CoveragePage" abstract="1">
          <private id="CoveragePage.ShowRatingDetailButton" caption="" type="boolean">
            <value idref="False" />
          </private>
        </object>
        <object id="PurchaseInformationPage">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <private id="PurchaseInformationPage.Show" caption="" type="boolean">
            <value idref="PolicyOutputNonShredded.ConsumerPurchaseAvailable" />
            <misc>
              <if>
                <condition>
                  <comparison compare="and">
                    <comparison compare="ne">
                      <operand idref="PolicyOutput.Status" type="string" />
                      <operand type="string" value="Bound" />
                    </comparison>
                    <operand idref="False" type="int" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
            </misc>
          </private>
          <private id="PurchaseInformationPage.IsOnPurchasePage" caption="" type="boolean">
            <value>
              <comparison compare="is">
                <operand idref="ProductIsCurrently.ActivePage" type="string" />
                <operand type="string" value="Purchase" />
              </comparison>
            </value>
          </private>
          <private id="PurchaseInformationPage.PaymentPageShow" caption="" type="boolean">
            <value>
              <comparison compare="isnot">
                <operand idref="ProductIsCurrently.ActivePage" type="string" />
                <operand type="string" value="Purchase" />
              </comparison>
            </value>
          </private>
        </object>
        <object id="SummaryPage">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <private id="SummaryPage.DisplayShopping" caption="" type="boolean">
            <value idref="True" />
            <misc>
              <if>
                <condition>
                  <comparison compare="and">
                    <operand idref="Context.IsConsumer" type="boolean" />
                    <comparison compare="is">
                      <operand idref="PolicyOutput.Status" type="string" />
                      <operand type="string" value="Bound,Booked" />
                    </comparison>
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
            </misc>
          </private>
          <private id="SummaryPage.Show" caption="" type="boolean">
            <value idref="True" />
          </private>
          <private id="SummaryPage.IsOnSummaryPage" caption="" type="boolean">
            <value>
              <comparison compare="is">
                <operand idref="ProductIsCurrently.ActivePage" type="string" />
                <operand type="string" value="Summary" />
              </comparison>
            </value>
          </private>
          <private id="SummaryPage.IsOnPaymentDetailsPage" caption="" type="boolean">
            <value>
              <comparison compare="is">
                <operand idref="ProductIsCurrently.ActivePage" type="string" />
                <operand type="string" value="PaymentDetails" />
              </comparison>
            </value>
          </private>
        </object>
        <private id="UserInterface.ShowQuoteTotalPanel" caption="" type="boolean" override="1">
          <value>
            <comparison compare="or">
              <comparison compare="or">
                <operand idref="PurchaseInformationPage.IsOnPurchasePage" type="boolean" />
                <operand idref="SummaryPage.IsOnSummaryPage" type="boolean" />
              </comparison>
              <operand idref="SummaryPage.IsOnPaymentDetailsPage" type="boolean" />
            </comparison>
          </value>
        </private>
        <private id="UserInterface.MAPPartyIdSet" caption="" type="boolean">
          <value>
            <comparison compare="ne">
              <operand idref="UserInterface.GetMAPPartyId" type="string" />
              <operand type="string" value="" />
            </comparison>
          </value>
        </private>
        <private id="UserInterface.GetMAPPartyId" caption="" type="string">
          <value>
            <request verb="Session.getPropertyRq" get="@value">
              <responsePath value="" />
              <onFailure idref="Spacer" />
              <modifySession value="" />
              <usesSession value="" />
              <default value="" />
              <nameValues>
                <nameValue value="map_partyid" name="name" dataType="attribute" />
              </nameValues>
            </request>
          </value>
        </private>
        <private id="UserInterface.BillingDetailsValid" caption="" type="boolean">
          <value>
            <request verb="ManuScript.getValueRq" get="@value">
              <responsePath value="" />
              <onFailure value="" />
              <modifySession value="" />
              <usesSession value="" />
              <default idref="False" />
              <nameValues>
                <nameValue value="Carrier_ProductBase_Workflow_1_0_0_0" name="manuscript" dataType="attribute" />
                <nameValue value="BillingKeysPrivate.BillingDetailsAreValid" name="field" dataType="attribute" />
              </nameValues>
            </request>
          </value>
        </private>
        <private id="UserInterface.RequiredFieldsCompleted" caption="" type="boolean" override="1">
          <value idref="True" />
          <misc>
            <if>
              <condition>
                <comparison compare="eq">
                  <operand idref="AccountInput.Name" type="string" />
                  <operand type="string" value="" />
                </comparison>
              </condition>
              <then idref="False" type="int" />
            </if>
            <if>
              <condition>
                <comparison compare="eq">
                  <operand idref="AccountInput.Address1" type="string" />
                  <operand type="string" value="" />
                </comparison>
              </condition>
              <then idref="False" type="int" />
            </if>
            <if>
              <condition>
                <comparison compare="and">
                  <comparison compare="and">
                    <operand idref="PitneyBowesOutput.GeocodingEnabled" type="string" />
                    <operand idref="PitneyBowesOutput.GeocodingRequired" type="string" />
                  </comparison>
                  <comparison compare="or">
                    <comparison compare="eq">
                      <operand idref="Geocode.IsVerified" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                    <operand idref="AccountPrivate.AnyLocationUnverified" type="boolean" />
                  </comparison>
                </comparison>
              </condition>
              <then idref="False" message="UserInterface.RequiredFieldsCompletedMsg1" type="int" />
            </if>
            <if>
              <condition>
                <comparison compare="and">
                  <comparison compare="and">
                    <operand idref="PolicyAdmin.UseSPPAppraisalRule" type="boolean" />
                    <comparison compare="ge">
                      <operand idref="LinePrivate.SPPNotAttachedCount" type="int" />
                      <operand type="int" value="1" />
                    </comparison>
                  </comparison>
                  <comparison compare="gt">
                    <operand idref="UserInterface.PolicyIdSet" type="string" />
                    <operand type="int" value="0" />
                  </comparison>
                </comparison>
              </condition>
              <then idref="False" message="UserInterface.RequiredFieldsCompletedMsg2" type="int" />
            </if>
          </misc>
          <affects>
            <reference idref="UserInterface.RequiredBillingFieldsCompleted" effect="postEffect" />
          </affects>
        </private>
        <private id="UserInterface.ConsumerSave" caption="" type="string">
          <value>
            <if>
              <condition idref="UserInterface.PolicyIdSet" />
              <then idref="UserInterface.StorePolicy" />
              <else idref="UserInterface.AutoSaveDataRq" />
            </if>
          </value>
        </private>
        <private id="UserInterface.AutoSaveDataRq" caption="" type="string">
          <value>
            <request verb="OnlineData.autoSaveDataRq" get="@clientID">
              <responsePath value="" />
              <onFailure value="" />
              <modifySession value="" />
              <usesSession value="" />
              <default value="" />
              <nameValues>
                <nameValue idref="AccountPrivate.ClientID" name="clientID" dataType="attribute" />
                <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscriptID" dataType="attribute" />
                <nameValue idref="LineOutput.Type" name="lob" dataType="attribute" />
              </nameValues>
            </request>
          </value>
          <affects>
            <reference idref="UserInterface.SetMAPPartyId" effect="postEffect" />
          </affects>
        </private>
        <private id="UserInterface.SetMAPPartyId" caption="" type="string">
          <value>
            <request verb="Session.setPropertyRq" get="@status">
              <responsePath value="" />
              <onFailure value="" />
              <modifySession value="" />
              <usesSession value="" />
              <default value="" />
              <nameValues>
                <nameValue value="map_partyid" name="name" dataType="attribute" />
                <nameValue idref="UserInterface.AutoSaveDataRq" name="value" dataType="attribute" />
              </nameValues>
            </request>
          </value>
        </private>
        <object id="InstallmentSchedulePage" abstract="1">
          <private id="InstallmentSchedulePage.ShowFalse" caption="" type="boolean">
            <value idref="False" />
          </private>
        </object>
      </object>
      <table id="PolicyMinimum" tableType="local" override="1">
        <fields>
          <field type="int" name="Value" />
        </fields>
        <rowKeys name="Type" type="string" find="eq">
          <key value="Default" default="1" />
        </rowKeys>
        <data>
          <row value="500" />
        </data>
      </table>
      <object id="Agency" abstract="1">
        <object id="AgencyInput" abstract="1">
        </object>
        <object id="AgencyOutput">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <private id="AgencyOutput.CityStateZip" caption="" type="string" path="CityStateZip">
            <value>
              <calculation>
                <argument op="eq" idref="AgencyInput.City" type="string" />
                <argument op="add" type="string" value=", " />
                <argument op="add" idref="AgencyInput.State" type="string" />
                <argument op="add" type="string" value=" " />
                <argument op="add" idref="AgencyInput.ZipCode" type="string" />
              </calculation>
            </value>
          </private>
          <private id="AgencyOutput.CombinedAddress" caption="" type="string" path="CombinedAddress">
            <value>
              <calculation>
                <argument op="eq" idref="AgencyInput.Address1" type="string" />
                <argument op="add" type="string" value=" " />
                <argument op="add" idref="AgencyInput.Address2" type="string" />
              </calculation>
            </value>
          </private>
        </object>
      </object>
      <minOccurs value="1" />
      <maxOccurs value="1" />
      <public id="data.TotalPremium" path="TotalPremium" type="float" class="excludeInChangeSummary" override="1">
        <definition>
          <caption value="Total Premium Plus Taxes" />
          <formatMask idref="FormatMask.PremiumPenniesDisplay" />
          <readOnly idref="True" />
        </definition>
        <rules>
          <affects>
            <reference idref="LinePrivate.SetDefaults" effect="preEffect" />
          </affects>
        </rules>
      </public>
      <table id="CoastalZipCodesSC" tableType="local" separator=",">
        <fields>
          <field type="int" name="ZipCode" />
        </fields>
        <rowKeys name="ZipCode" type="int" find="eq">
          <key value="29579" caption="" />
          <key value="29588" caption="" />
          <key value="29576" caption="" />
          <key value="29440" caption="" />
          <key value="29548" caption="" />
          <key value="29429" caption="" />
          <key value="29466" caption="" />
          <key value="29464" caption="" />
          <key value="29487" caption="" />
          <key value="29438" caption="" />
          <key value="29910" caption="" />
          <key value="29926" caption="" />
          <key value="29906" caption="" />
          <key value="29936" caption="" />
          <key value="29927" caption="" />
          <key value="00000" caption="" default="1" />
        </rowKeys>
        <data>
          <row value="29579" />
          <row value="29588" />
          <row value="29576" />
          <row value="29440" />
          <row value="29548" />
          <row value="29429" />
          <row value="29466" />
          <row value="29464" />
          <row value="29487" />
          <row value="29438" />
          <row value="29910" />
          <row value="29926" />
          <row value="29906" />
          <row value="29936" />
          <row value="29927" />
          <row value="1" />
        </data>
      </table>
      <table id="ComparisonDefaults" tableType="local" separator="," override="1">
        <fields>
          <field type="int" name="Liability" />
          <field type="int" name="Medical" />
          <field type="int" name="Deductible" />
        </fields>
        <rowKeys name="Coverage Package" type="string" find="eq">
          <key value="Economy" caption="" />
          <key value="Standard" caption="" />
          <key value="Deluxe" caption="" />
          <key value="Plus" caption="" />
          <key value="Custom" caption="" />
        </rowKeys>
        <data>
          <row value=",," />
          <row value="100000,1000,10000" />
          <row value="200000,2000,7500" />
          <row value="500000,5000,5000" />
          <row value=",," />
        </data>
      </table>
      <table id="IntegrationControl" tableType="local" separator="," override="1">
        <fields>
          <field type="int" name="PBBIGeocoding" />
          <field type="int" name="PBBIInteractiveMap" />
        </fields>
        <rowKeys name="IntegrationSwitches" type="boolean" find="eq">
          <key value="Enabled" />
          <key value="Required" />
        </rowKeys>
        <data>
          <row value="1,1" />
          <row value="0,0" />
        </data>
      </table>
      <table id="IntegrationTypeSetup" tableType="local" separator=",">
        <fields>
          <field type="int" name="Value" />
        </fields>
        <rowKeys name="Type" type="string" find="eq">
          <key value="Address" caption="" />
          <key value="Territory" caption="" />
        </rowKeys>
        <data>
          <row value="0" />
          <row value="1" />
        </data>
      </table>
      <table id="LockDownCoastalZipCodes" tableType="local" separator=",">
        <fields>
          <field type="int" name="Value" />
        </fields>
        <rowKeys name="Value" type="boolean" find="eq">
          <key value="Enabled" caption="" />
        </rowKeys>
        <data>
          <row value="1" />
        </data>
      </table>
      <table id="WorkflowStatusPermissions" tableType="local" override="1">
        <fields>
          <field type="int" name="HasPermission" />
        </fields>
        <rowKeys name="Context" type="string" find="eq" pageKey="1">
          <key value="Other" default="1" />
          <key value="Consumer" />
          <key value="Agent" />
        </rowKeys>
        <rowKeys name="Next Status Step" type="string" find="eq">
          <key value="Submission" />
          <key value="Cleared" />
          <key value="NotCleared" />
          <key value="ClearanceOverride" />
          <key value="Quote" />
          <key value="PreQualify" />
          <key value="DeclineOverride" />
          <key value="FullQuote" />
          <key value="Application" />
          <key value="Submit" />
          <key value="Bound" />
          <key value="Booked" />
          <key value="InForce" default="1" />
        </rowKeys>
        <colKeys name="Status" type="int" find="eq">
          <key value="Submission" />
          <key value="Cleared" />
          <key value="NotCleared" />
          <key value="Quote" />
          <key value="PreQualify" />
          <key value="Declined" />
          <key value="FullQuote" />
          <key value="Application" />
          <key value="Submit" />
          <key value="Bound" />
          <key value="Booked" />
          <key value="InForce" default="1" />
        </colKeys>
        <data>
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,1,0,0,1,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,1,0,0" />
          <row value="0,0,0,0,0,0,0,1,0,0,1,1" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,1,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,1,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,1,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,1,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,1,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,1,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,0,0,0" />
          <row value="0,0,0,0,0,0,0,0,0,1,0,0" />
          <row value="0,0,0,0,0,0,0,1,0,0,1,1" />
        </data>
      </table>
      <table id="WorkflowUserPermissions" tableType="local" override="1">
        <fields>
          <field type="int" name="HasPermission" />
        </fields>
        <rowKeys name="Next Step Status" type="string" find="eq">
          <key value="Submission" />
          <key value="Cleared" />
          <key value="NotClearance" />
          <key value="ClearanceOverride" />
          <key value="Quote" />
          <key value="PreQualify" />
          <key value="DeclineOverride" />
          <key value="FullQuote" />
          <key value="Application" />
          <key value="Submit" />
          <key value="Bound" />
          <key value="Booked" />
          <key value="InForce" default="1" />
        </rowKeys>
        <colKeys name="Current Context" type="string" find="eq">
          <key value="Manager" />
          <key value="Underwriter" />
          <key value="Assistant" />
          <key value="Agent" default="1" />
          <key value="Auditor" />
          <key value="Consumer" />
        </colKeys>
        <data>
          <row value="1,1,1,1,0,0" />
          <row value="1,1,1,1,0,0" />
          <row value="1,1,1,1,0,0" />
          <row value="1,1,0,0,0,0" />
          <row value="1,1,1,1,0,1" />
          <row value="1,1,1,1,0,1" />
          <row value="1,1,1,0,0,0" />
          <row value="1,1,1,1,0,1" />
          <row value="1,1,1,1,0,0" />
          <row value="1,1,1,1,0,1" />
          <row value="1,1,1,1,0,0" />
          <row value="1,1,1,1,0,0" />
          <row value="1,1,1,1,1,0" />
        </data>
      </table>
      <table id="AdditionalResidenceRates" tableType="local">
        <fields>
          <field type="int" name="Rate" />
        </fields>
        <rowKeys name="Occupant Type" type="int" find="eq" pageKey="1">
          <key value="Owner" />
          <key value="Renter" />
        </rowKeys>
        <rowKeys name="Number Of Families" type="int" find="range">
          <key value="0" />
          <key value="1" />
          <key value="2" />
          <key value="3" />
          <key value="4&gt;" />
        </rowKeys>
        <data>
          <row value="CarportsPoolCagesPrivate" />
          <row value="9" />
          <row value="17" />
          <row value="35" />
          <row value="37" />
          <row value="" />
          <row value="50" />
          <row value="84" />
          <row value="167" />
          <row value="167" />
        </data>
      </table>
      <table id="BaseRates" tableType="local">
        <fields>
          <field type="int" name="Rate" />
        </fields>
        <rowKeys name="Territory" type="int" find="eq">
          <key value="34" />
        </rowKeys>
        <colKeys name="Form" type="string" find="range">
          <key value="HO1,HO2,HO15,HO3" />
          <key value="HO4" />
          <key value="HO6" />
        </colKeys>
        <data>
          <row value="508,161,103" />
        </data>
      </table>
      <table id="BurglarProtectiveDeviceFactors" tableType="local">
        <fields>
          <field type="int" name="Factor" />
        </fields>
        <rowKeys name="BurglarProtectiveDevice" type="string" find="eq">
          <key value="Central" />
          <key value="PoliceStation" />
          <key value="Local" />
        </rowKeys>
        <data>
          <row value="0.05" />
          <row value="0.03" />
          <row value="0.02" />
        </data>
      </table>
      <table id="BusinessPursuitsMedicalRates" tableType="local">
        <fields>
          <field type="int" name="Rate" />
        </fields>
        <rowKeys name="Type" type="string" find="eq">
          <key value="Clerical" />
          <key value="SalesNoService" />
          <key value="SalesWithService" />
          <key value="TeachersAthletic" />
          <key value="TeachersNOC" />
          <key value="CorporalPunishment" />
        </rowKeys>
        <colKeys name="Medical Limit" type="int" find="eq">
          <key value="1000" />
          <key value="2000" />
          <key value="3000" />
          <key value="4000" />
          <key value="5000" />
        </colKeys>
        <data>
          <row value=",1,3,4,5" />
          <row value=",1,3,4,5" />
          <row value=",1,3,4,5" />
          <row value=",3,5,8,9" />
          <row value=",1,3,4,5" />
          <row value=",,,," />
        </data>
      </table>
      <table id="BusinessPursuitsRates" tableType="local">
        <fields>
          <field type="int" name="Rate" />
        </fields>
        <rowKeys name="Type" type="string" find="eq">
          <key value="Clerical" />
          <key value="SalesNoService" />
          <key value="SalesWithService" />
          <key value="TeachersAthletic" />
          <key value="TeachersNOC" />
          <key value="CorporalPunishment" />
        </rowKeys>
        <data>
          <row value="6" />
          <row value="6" />
          <row value="9" />
          <row value="16" />
          <row value="7" />
          <row value="6" />
        </data>
      </table>
      <table id="CarportsPoolCagesRates" tableType="local" separator=",">
        <fields>
          <field type="int" name="Rate" />
          <field type="int" name="Minimum" />
          <field type="int" name="Maximum" />
          <field type="int" name="PerAmt" />
        </fields>
        <rowKeys name="County" type="string" find="eq">
          <key value="Coastal" caption="" />
          <key value="Inland" default="1" caption="" />
        </rowKeys>
        <data>
          <row value="15,10000,50000,1000" />
          <row value="10,10000,50000,1000" />
        </data>
      </table>
      <table id="CoastalCounties" tableType="local" separator=",">
        <fields>
          <field type="int" name="Value" />
        </fields>
        <rowKeys name="County" type="string" find="eq">
          <key value="Bay, FL" caption="" />
          <key value="Calhoun, FL" caption="" />
          <key value="Charlotte, FL" caption="" />
          <key value="Citrus, FL" caption="" />
          <key value="Collier, FL" caption="" />
          <key value="De Soto, FL" caption="" />
          <key value="Dixie, FL" caption="" />
          <key value="Escambia, FL" caption="" />
          <key value="Franklin, FL" caption="" />
          <key value="Gadsden, FL" caption="" />
          <key value="Gilchrist, FL" caption="" />
          <key value="Glades, FL" caption="" />
          <key value="Gulf, FL" caption="" />
          <key value="Hardee, FL" caption="" />
          <key value="Hernando, FL" caption="" />
          <key value="Hillsborough, FL" caption="" />
          <key value="Holmes, FL" caption="" />
          <key value="Jackson, FL" caption="" />
          <key value="Jefferson, FL" caption="" />
          <key value="Lafayette, FL" caption="" />
          <key value="Lee, FL" caption="" />
          <key value="Leon, FL" caption="" />
          <key value="Levy, FL" caption="" />
          <key value="Liberty, FL" caption="" />
          <key value="Madison, FL" caption="" />
          <key value="Manatee, FL" caption="" />
          <key value="Marion, FL" caption="" />
          <key value="Monroe, FL" caption="" />
          <key value="Okaloosa, FL" caption="" />
          <key value="Pasco, FL" caption="" />
          <key value="Pinellas, FL" caption="" />
          <key value="Polk, FL" caption="" />
          <key value="Santa Rosa, FL" caption="" />
          <key value="Sarasota, FL" caption="" />
          <key value="Sumter, FL" caption="" />
          <key value="Suwannee, FL" caption="" />
          <key value="Taylor, FL" caption="" />
          <key value="Wakulla, FL" caption="" />
          <key value="Walton, FL" caption="" />
          <key value="Washington, FL" caption="" />
          <key value="Baker, FL" caption="" />
          <key value="Brevard, FL" caption="" />
          <key value="Broward, FL" caption="" />
          <key value="Clay, FL" caption="" />
          <key value="Miami-Dade, FL" caption="" />
          <key value="Duval, FL" caption="" />
          <key value="Flagler, FL" caption="" />
          <key value="Hendry, FL" caption="" />
          <key value="Indian River, FL" caption="" />
          <key value="Lake, FL" caption="" />
          <key value="Martin, FL" caption="" />
          <key value="Nassau, FL" caption="" />
          <key value="Okeechobee, FL" caption="" />
          <key value="Orange, FL" caption="" />
          <key value="Osceola, FL" caption="" />
          <key value="Palm Beach, FL" caption="" />
          <key value="Putnam, FL" caption="" />
          <key value="St. Johns, FL" caption="" />
          <key value="St. Lucie, FL" caption="" />
          <key value="Seminole, FL" caption="" />
          <key value="Volusia, FL" caption="" />
          <key value="Allendale, SC" caption="" />
          <key value="Beaufort, SC" caption="" />
          <key value="Berkeley, SC" caption="" />
          <key value="Charleston, SC" caption="" />
          <key value="Chesterfield, SC" caption="" />
          <key value="Clarendon, SC" caption="" />
          <key value="Colleton, SC" caption="" />
          <key value="Darlington, SC" caption="" />
          <key value="Dillon, SC" caption="" />
          <key value="Dorchester, SC" caption="" />
          <key value="Florence, SC" caption="" />
          <key value="Georgetown, SC" caption="" />
          <key value="Hampton, SC" caption="" />
          <key value="Horry, SC" caption="" />
          <key value="Jasper, SC" caption="" />
          <key value="Kershaw, SC" caption="" />
          <key value="Lancaster, SC" caption="" />
          <key value="Lee, SC" caption="" />
          <key value="Marion, SC" caption="" />
          <key value="Marlboro, SC" caption="" />
          <key value="Sumter, SC" caption="" />
          <key value="Williamsburg, SC" caption="" />
          <key value="AllOther" default="1" caption="" />
        </rowKeys>
        <data>
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Coastal" />
          <row value="Inland" />
        </data>
      </table>
      <table id="CoverageDefaults" tableType="local" separator=",">
        <fields>
          <field type="int" name="Liability" />
          <field type="int" name="Medical" />
          <field type="int" name="Deductible" />
          <field type="int" name="CreditCard" />
          <field type="int" name="RefrigeratedProperty" />
          <field type="int" name="ReplacementCostContents" />
          <field type="int" name="ReplacementCostDwelling" />
        </fields>
        <rowKeys name="Coverage Package" type="string" find="eq">
          <key value="Economy" />
          <key value="Standard" />
          <key value="Deluxe" caption="" />
          <key value="Recommended" />
          <key value="Plus" />
          <key value="Custom" caption="" />
        </rowKeys>
        <data>
          <row value="100000,1000,7500,500,0,0,0" />
          <row value="200000,2000,2500,2500,0,0,1" />
          <row value="300000,3000,1000,5000,1,1,1" />
          <row value="200000,5000,500,10000,1,1,1" />
          <row value="500000,5000,250,10000,1,1,1" />
          <row value=",,,,,," />
        </data>
      </table>
      <table id="CoverageInformation" tableType="local">
        <fields>
          <field type="int" name="Rate" />
          <field type="int" name="Factor" />
          <field type="int" name="IncludedLimit" />
          <field type="int" name="IncludedFactor" />
          <field type="int" name="MinimumLimit" />
          <field type="int" name="MinimumFactor" />
          <field type="int" name="MaximumLimit" />
        </fields>
        <rowKeys name="Coverage" type="string" find="eq">
          <key value="Permitted Incidental Occupancy Other Structures" />
          <key value="Other Structures" />
          <key value="Other Structures Rented to Others" />
          <key value="Personal Property Other Residence" />
          <key value="Refrigerated Personal Property" />
          <key value="Special Computer Coverage" />
          <key value="Water Backup of Sewers or Drains" />
          <key value="Identity Fraud" />
          <key value="Residence Employee" />
          <key value="Incidental Occupancy - Other Residence" />
          <key value="Personal Injury" />
          <key value="SpecialPersonalProperty" />
          <key value="Units Regularly Rented to Others" />
          <key value="Replacement Cost Dwelling" />
        </rowKeys>
        <data>
          <row value="8,,,,,," />
          <row value="5,,,.10,,," />
          <row value="8,,,,,," />
          <row value="9,,,.10,1000,," />
          <row value="6,,,,,," />
          <row value="9,,,,,," />
          <row value="25,,,,,," />
          <row value="35,,,,,," />
          <row value="6,,2,,,," />
          <row value="23,,,,,," />
          <row value="16,,,,,," />
          <row value=",0.40,,,,," />
          <row value=",0.25,,,,," />
          <row value="5,,,,,," />
        </data>
      </table>
      <table id="CoverageMedicalRates" tableType="local">
        <fields>
          <field type="int" name="Rate" />
        </fields>
        <rowKeys name="Coverage" type="string" find="eq">
          <key value="Additional Residence Owner Occupied" />
          <key value="Residence Employees" />
          <key value="Additional Residence Rented To Others" />
          <key value="Other Structures Rented Residence Premises" />
          <key value="Incidental Occupancy Residence" />
          <key value="Incidental Occupancy Other Residence" />
          <key value="Incidental Farming Personal Liability" />
        </rowKeys>
        <colKeys name="Medical Limit" type="int" find="eq">
          <key value="1000" />
          <key value="2000" />
          <key value="3000" />
          <key value="4000" />
          <key value="5000" />
        </colKeys>
        <data>
          <row value="0,1,3,4,5" />
          <row value="0,1,3,4,5" />
          <row value="0,1,3,4,5" />
          <row value="0,1,3,4,5" />
          <row value="0,6,13,19,24" />
          <row value="0,4,8,11,14" />
          <row value="0,1,3,4,5" />
        </data>
      </table>
      <table id="CreditCardRates" tableType="local">
        <fields>
          <field type="int" name="Rate" />
        </fields>
        <rowKeys name="Credit Card Limit" type="int" find="eq">
          <key value="500" />
          <key value="1000" />
          <key value="2500" />
          <key value="5000" />
          <key value="7500" />
          <key value="10000" />
        </rowKeys>
        <data>
          <row value="0" />
          <row value="1" />
          <row value="4" />
          <row value="5" />
          <row value="6" />
          <row value="8" />
        </data>
      </table>
      <table id="DeductibleFactors" tableType="local">
        <fields>
          <field type="int" name="Factor" />
        </fields>
        <rowKeys name="Deductible" type="int" find="eq">
          <key value="100" />
          <key value="250" />
          <key value="500" default="1" caption="" />
          <key value="750" />
          <key value="1000" />
          <key value="2500" />
          <key value="5000" />
          <key value="7500" />
          <key value="10000" />
          <key value="100250" />
        </rowKeys>
        <colKeys name="Wind Deductible" type="string" find="eq">
          <key value="N" caption="" />
          <key value="1" caption="" />
          <key value="2" caption="" />
          <key value="5" caption="" />
          <key value="10" caption="" />
        </colKeys>
        <data>
          <row value="1.25,,,," />
          <row value="1.13,1.08,1.06,1.02,1.00" />
          <row value="1.00,0.98,0.95,0.93,0.90" />
          <row value="0.97,0.95,0.92,0.90,0.87" />
          <row value="0.94,0.92,0.89,0.87,0.75" />
          <row value="0.81,0.79,0.77,0.75,0.71" />
          <row value="0.76,0.74,0.72,0.71,0.67" />
          <row value="0.72,0.71,0.68,0.67,0.63" />
          <row value="0.68,0.67,0.65,0.63,0.60" />
          <row value=",,,," />
        </data>
      </table>
      <table id="DiscountSurchargeFactors" tableType="local" separator=",">
        <fields>
          <field type="int" name="Value" />
        </fields>
        <rowKeys name="Surcharge" type="string" find="eq">
          <key value="ThreeAndFourFamily" caption="" />
          <key value="WoodStove" caption="" />
          <key value="FireResistive" caption="" />
          <key value="Loss" caption="" />
          <key value="NonSmoker" caption="" />
          <key value="AutoHome" caption="" />
        </rowKeys>
        <data>
          <row value="0.02" />
          <row value="0.03" />
          <row value="0.02" />
          <row value="0.05" />
          <row value="0.02" />
          <row value="0.05" />
        </data>
      </table>
      <table id="EarthquakeDeductibleFactor" tableType="local">
        <fields>
          <field type="int" name="Factor" />
        </fields>
        <rowKeys name="Deductible" type="string" find="eq">
          <key value="N" />
          <key value="5" />
          <key value="10" />
          <key value="15" />
          <key value="20" />
          <key value="25" />
        </rowKeys>
        <colKeys name="ConstructionType" type="string" find="range">
          <key value="Aluminum,Frame,Superior,PlasticSiding" />
          <key value="Masonry,MasonryVeneer" />
        </colKeys>
        <data>
          <row value="0,0" />
          <row value="1.00,1.00" />
          <row value="0.89,0.95" />
          <row value="0.78,0.89" />
          <row value="0.67,0.84" />
          <row value="0.56,0.79" />
        </data>
      </table>
      <table id="EarthquakeRates" tableType="local">
        <fields>
          <field type="int" name="Rate" />
        </fields>
        <rowKeys name="Coverage" type="string" find="eq">
          <key value="Dwelling" />
          <key value="PersonalProperty" />
          <key value="OtherStructures" />
          <key value="LossOfUse" />
          <key value="LossAssessment" />
        </rowKeys>
        <colKeys name="ConstructionType" type="string" find="range">
          <key value="Frame,Aluminum,PlasticSiding" />
          <key value="Masonry,MasonryVeneer" />
          <key value="Superior" />
        </colKeys>
        <data>
          <row value="0.42,1.78,0.62" />
          <row value="0.29,1.01,0.29" />
          <row value="0.29,1.28,0.48" />
          <row value="0.29,1.28,0.48" />
          <row value="0.24,1.02,0.24" />
        </data>
      </table>
      <table id="FireProtectiveDeviceFactors" tableType="local">
        <fields>
          <field type="int" name="Factor" />
        </fields>
        <rowKeys name="FireProtectiveDevice" type="string" find="eq">
          <key value="Central" />
          <key value="FireDepartment" />
          <key value="Local" />
        </rowKeys>
        <data>
          <row value="0.05" />
          <row value="0.03" />
          <row value="0.02" />
        </data>
      </table>
      <table id="FormFactors" tableType="local">
        <fields>
          <field type="int" name="Factor" />
        </fields>
        <rowKeys name="Form" type="int" find="eq">
          <key value="HO1" />
          <key value="HO2" />
          <key value="HO3" />
          <key value="HO15" />
          <key value="HO4" />
          <key value="HO6" />
        </rowKeys>
        <data>
          <row value="0.70" />
          <row value="0.80" />
          <row value="1.00" />
          <row value="1.25" />
          <row value="1.00" />
          <row value="1.00" />
        </data>
      </table>
      <table id="IncidentalFarmingPersonalLiabilityRates" tableType="local">
        <fields>
          <field type="int" name="Rate" />
        </fields>
        <rowKeys name="Type" type="string" find="eq">
          <key value="None" />
          <key value="OnPremises" />
          <key value="OffPremises" />
        </rowKeys>
        <data>
          <row value="0" />
          <row value="51" />
          <row value="76" />
        </data>
      </table>
      <table id="InflationGuardFactors" tableType="local">
        <fields>
          <field type="int" name="Factor" />
        </fields>
        <rowKeys name="Inflation Guard" type="int" find="interpolate">
          <key value="0" />
          <key value="4" />
          <key value="6" />
          <key value="8" />
          <key value="4" default="1" />
        </rowKeys>
        <data>
          <row value="1.00" />
          <row value="1.02" />
          <row value="1.03" />
          <row value="1.04" />
          <row value="0.02" />
        </data>
      </table>
      <table id="KeyFactorsEachAdditional" tableType="local">
        <fields>
          <field type="int" name="Factor" />
        </fields>
        <rowKeys name="Form" type="string" find="range">
          <key value="HO1,HO2,HO3,HO15" />
          <key value="HO4" />
          <key value="HO6" />
        </rowKeys>
        <data>
          <row value="0.043" />
          <row value="0.028" />
          <row value="0.026" />
        </data>
      </table>
      <table id="KeyFactorsHO3" tableType="local">
        <fields>
          <field type="int" name="Factor" />
        </fields>
        <rowKeys name="Limit" type="int" find="interpolate">
          <key value="10000" />
          <key value="20000" />
          <key value="30000" />
          <key value="40000" />
          <key value="50000" />
          <key value="60000" />
          <key value="70000" />
          <key value="80000" />
          <key value="90000" />
          <key value="100000" />
          <key value="110000" />
          <key value="120000" />
          <key value="130000" />
          <key value="140000" />
          <key value="150000" />
          <key value="160000" />
          <key value="170000" />
          <key value="180000" />
          <key value="190000" />
          <key value="200000" />
          <key value="210000" />
          <key value="220000" />
          <key value="230000" />
          <key value="240000" />
          <key value="250000" />
          <key value="260000" />
          <key value="270000" />
          <key value="280000" />
          <key value="290000" />
          <key value="300000" />
          <key value="310000" />
          <key value="320000" />
          <key value="330000" />
          <key value="340000" />
          <key value="350000" />
          <key value="360000" />
          <key value="370000" />
          <key value="380000" />
          <key value="390000" />
          <key value="400000" />
          <key value="410000" />
          <key value="420000" />
          <key value="430000" />
          <key value="440000" />
          <key value="450000" />
          <key value="460000" />
          <key value="470000" />
          <key value="480000" />
          <key value="490000" />
          <key value="500000" />
          <key value="510000" />
          <key value="520000" />
          <key value="530000" />
          <key value="540000" />
          <key value="550000" />
          <key value="560000" />
          <key value="570000" />
          <key value="580000" />
          <key value="590000" />
          <key value="600000" />
          <key value="610000" />
          <key value="620000" />
          <key value="630000" />
          <key value="640000" />
          <key value="650000" />
          <key value="660000" />
          <key value="670000" />
          <key value="680000" />
          <key value="690000" />
          <key value="700000" />
          <key value="710000" />
          <key value="720000" />
          <key value="730000" />
          <key value="740000" />
          <key value="750000" />
          <key value="760000" />
          <key value="770000" />
          <key value="780000" />
          <key value="790000" />
          <key value="800000" />
          <key value="810000" />
          <key value="820000" />
          <key value="830000" />
          <key value="840000" />
          <key value="850000" />
          <key value="860000" />
          <key value="870000" />
          <key value="880000" />
          <key value="890000" />
          <key value="900000" />
          <key value="910000" />
          <key value="920000" />
          <key value="930000" />
          <key value="940000" />
          <key value="950000" />
          <key value="960000" />
          <key value="970000" />
          <key value="980000" />
          <key value="990000" />
          <key value="1000000" />
          <key value="10000" default="1" />
        </rowKeys>
        <data>
          <row value="" />
          <row value="" />
          <row value="" />
          <row value="0.484" />
          <row value="0.584" />
          <row value="0.658" />
          <row value="0.732" />
          <row value="0.815" />
          <row value="0.907" />
          <row value="1.000" />
          <row value="1.098" />
          <row value="1.199" />
          <row value="1.299" />
          <row value="1.399" />
          <row value="1.499" />
          <row value="1.599" />
          <row value="1.698" />
          <row value="1.798" />
          <row value="1.898" />
          <row value="1.998" />
          <row value="2.090" />
          <row value="2.183" />
          <row value="2.273" />
          <row value="2.328" />
          <row value="2.377" />
          <row value="2.421" />
          <row value="2.465" />
          <row value="2.509" />
          <row value="2.553" />
          <row value="2.597" />
          <row value="2.640" />
          <row value="2.683" />
          <row value="2.726" />
          <row value="2.769" />
          <row value="2.812" />
          <row value="2.855" />
          <row value="2.898" />
          <row value="2.941" />
          <row value="2.984" />
          <row value="3.027" />
          <row value="3.070" />
          <row value="3.113" />
          <row value="3.156" />
          <row value="3.199" />
          <row value="3.242" />
          <row value="3.285" />
          <row value="3.328" />
          <row value="3.371" />
          <row value="3.414" />
          <row value="3.457" />
          <row value="3.500" />
          <row value="3.543" />
          <row value="3.586" />
          <row value="3.629" />
          <row value="3.672" />
          <row value="3.715" />
          <row value="3.758" />
          <row value="3.801" />
          <row value="3.844" />
          <row value="3.887" />
          <row value="3.930" />
          <row value="3.973" />
          <row value="4.016" />
          <row value="4.059" />
          <row value="4.102" />
          <row value="4.145" />
          <row value="4.188" />
          <row value="4.231" />
          <row value="4.274" />
          <row value="4.317" />
          <row value="4.360" />
          <row value="4.403" />
          <row value="4.446" />
          <row value="4.489" />
          <row value="4.532" />
          <row value="4.575" />
          <row value="4.618" />
          <row value="4.661" />
          <row value="4.704" />
          <row value="4.747" />
          <row value="4.790" />
          <row value="4.833" />
          <row value="4.876" />
          <row value="4.919" />
          <row value="4.962" />
          <row value="5.005" />
          <row value="5.048" />
          <row value="5.091" />
          <row value="5.134" />
          <row value="5.177" />
          <row value="5.220" />
          <row value="5.263" />
          <row value="5.306" />
          <row value="5.349" />
          <row value="5.392" />
          <row value="5.435" />
          <row value="5.478" />
          <row value="5.521" />
          <row value="5.564" />
          <row value="5.607" />
          <row value="0.043" />
        </data>
      </table>
      <table id="KeyFactorsHO46" tableType="local">
        <fields>
          <field type="int" name="Factor" />
        </fields>
        <rowKeys name="Limit" type="int" find="interpolate">
          <key value="10000" />
          <key value="11000" />
          <key value="12000" />
          <key value="13000" />
          <key value="14000" />
          <key value="15000" />
          <key value="16000" />
          <key value="17000" />
          <key value="18000" />
          <key value="19000" />
          <key value="20000" />
          <key value="21000" />
          <key value="22000" />
          <key value="23000" />
          <key value="24000" />
          <key value="25000" />
          <key value="26000" />
          <key value="27000" />
          <key value="28000" />
          <key value="29000" />
          <key value="30000" />
          <key value="31000" />
          <key value="32000" />
          <key value="33000" />
          <key value="34000" />
          <key value="35000" />
          <key value="36000" />
          <key value="37000" />
          <key value="38000" />
          <key value="39000" />
          <key value="40000" />
          <key value="41000" />
          <key value="42000" />
          <key value="43000" />
          <key value="44000" />
          <key value="45000" />
          <key value="46000" />
          <key value="47000" />
          <key value="48000" />
          <key value="49000" />
          <key value="50000" />
          <key value="51000" />
          <key value="52000" />
          <key value="53000" />
          <key value="54000" />
          <key value="55000" />
          <key value="56000" />
          <key value="57000" />
          <key value="58000" />
          <key value="59000" />
          <key value="60000" />
          <key value="61000" />
          <key value="62000" />
          <key value="63000" />
          <key value="64000" />
          <key value="65000" />
          <key value="66000" />
          <key value="67000" />
          <key value="68000" />
          <key value="69000" />
          <key value="70000" />
          <key value="71000" />
          <key value="72000" />
          <key value="73000" />
          <key value="74000" />
          <key value="75000" />
          <key value="76000" />
          <key value="77000" />
          <key value="78000" />
          <key value="79000" />
          <key value="80000" />
          <key value="81000" />
          <key value="82000" />
          <key value="83000" />
          <key value="84000" />
          <key value="85000" />
          <key value="86000" />
          <key value="87000" />
          <key value="88000" />
          <key value="89000" />
          <key value="90000" />
          <key value="91000" />
          <key value="92000" />
          <key value="93000" />
          <key value="94000" />
          <key value="95000" />
          <key value="96000" />
          <key value="97000" />
          <key value="98000" />
          <key value="99000" />
          <key value="100000" />
          <key value="101000" />
          <key value="102000" />
          <key value="103000" />
          <key value="104000" />
          <key value="105000" />
          <key value="106000" />
          <key value="107000" />
          <key value="108000" />
          <key value="109000" />
          <key value="1000" default="1" />
        </rowKeys>
        <colKeys name="Form" type="string" find="eq">
          <key value="HO4" />
          <key value="HO6" />
        </colKeys>
        <data>
          <row value="0.540,0.620" />
          <row value="0.584,0.662" />
          <row value="0.628,0.704" />
          <row value="0.672,0.746" />
          <row value="0.716,0.788" />
          <row value="0.760,0.830" />
          <row value="0.808,0.864" />
          <row value="0.856,0.898" />
          <row value="0.904,0.932" />
          <row value="0.952,0.966" />
          <row value="1.000,1.000" />
          <row value="1.038,1.034" />
          <row value="1.076,1.068" />
          <row value="1.114,1.102" />
          <row value="1.152,1.136" />
          <row value="1.190,1.170" />
          <row value="1.228,1.204" />
          <row value="1.266,1.238" />
          <row value="1.304,1.272" />
          <row value="1.342,1.306" />
          <row value="1.380,1.340" />
          <row value="1.418,1.374" />
          <row value="1.456,1.408" />
          <row value="1.494,1.442" />
          <row value="1.532,1.476" />
          <row value="1.570,1.510" />
          <row value="1.608,1.544" />
          <row value="1.646,1.578" />
          <row value="1.684,1.612" />
          <row value="1.722,1.646" />
          <row value="1.760,1.680" />
          <row value="1.798,1.714" />
          <row value="1.836,1.748" />
          <row value="1.874,1.782" />
          <row value="1.912,1.816" />
          <row value="1.950,1.850" />
          <row value="1.988,1.884" />
          <row value="2.026,1.918" />
          <row value="2.064,1.952" />
          <row value="2.102,1.986" />
          <row value="2.140,2.020" />
          <row value="2.178,2.054" />
          <row value="2.216,2.088" />
          <row value="2.254,2.122" />
          <row value="2.292,2.156" />
          <row value="2.330,2.190" />
          <row value="2.358,2.216" />
          <row value="2.386,2.242" />
          <row value="2.414,2.268" />
          <row value="2.442,2.294" />
          <row value="2.470,2.320" />
          <row value="2.498,2.346" />
          <row value="2.526,2.374" />
          <row value="2.554,2.398" />
          <row value="2.582,2.424" />
          <row value="2.610,2.450" />
          <row value="2.638,2.476" />
          <row value="2.666,2.502" />
          <row value="2.694,2.528" />
          <row value="2.722,2.554" />
          <row value="2.750,2.580" />
          <row value="2.778,2.606" />
          <row value="2.806,2.632" />
          <row value="2.834,2.658" />
          <row value="2.862,2.684" />
          <row value="2.890,2.710" />
          <row value="2.918,2.736" />
          <row value="2.946,2.762" />
          <row value="2.974,2.788" />
          <row value="3.002,2.814" />
          <row value="3.030,2.840" />
          <row value="3.058,2.866" />
          <row value="3.086,2.892" />
          <row value="3.114,2.918" />
          <row value="3.142,2.944" />
          <row value="3.170,2.970" />
          <row value="3.198,2.996" />
          <row value="3.226,3.022" />
          <row value="3.254,3.048" />
          <row value="3.282,3.074" />
          <row value="3.310,3.100" />
          <row value="3.338,3.126" />
          <row value="3.366,3.152" />
          <row value="3.394,3.178" />
          <row value="3.422,3.204" />
          <row value="3.450,3.230" />
          <row value="3.478,3.256" />
          <row value="3.506,3.282" />
          <row value="3.534,3.308" />
          <row value="3.562,3.334" />
          <row value="3.590,3.360" />
          <row value="3.618,3.386" />
          <row value="3.646,3.412" />
          <row value="3.674,3.438" />
          <row value="3.702,3.464" />
          <row value="3.730,3.490" />
          <row value="3.758,3.516" />
          <row value="3.786,3.542" />
          <row value="3.814,3.568" />
          <row value="3.842,3.594" />
          <row value="0.028,0.026" />
        </data>
      </table>
      <table id="LiabilityLimitFactors" tableType="local">
        <fields>
          <field type="int" name="Factor" />
        </fields>
        <rowKeys name="Liability Limit" type="int" find="eq">
          <key value="0" />
          <key value="100000" />
          <key value="200000" />
          <key value="300000" />
          <key value="400000" />
          <key value="500000" />
          <key value="1000000" />
        </rowKeys>
        <colKeys name="Tier" type="string" find="eq">
          <key value="Standard" />
          <key value="Preferred" />
        </colKeys>
        <data>
          <row value="0,0" />
          <row value="1.00,0" />
          <row value="1.15,0" />
          <row value="1.24,1.00" />
          <row value="1.30,1.30" />
          <row value="1.35,1.35" />
          <row value="1.66,1.66" />
        </data>
      </table>
      <table id="LiabilityRates" tableType="local">
        <fields>
          <field type="int" name="Rate" />
        </fields>
        <rowKeys name="Liability Limit" type="int" find="eq">
          <key value="0" />
          <key value="100000" />
          <key value="200000" />
          <key value="300000" />
          <key value="400000" />
          <key value="500000" />
          <key value="1000000" />
        </rowKeys>
        <colKeys name="Number of Families" type="int" find="range">
          <key value="&lt;2" />
          <key value="3&gt;" />
        </colKeys>
        <data>
          <row value="0,0" />
          <row value="0,0" />
          <row value="10,19" />
          <row value="16,30" />
          <row value="20,38" />
          <row value="23,44" />
          <row value="35," />
        </data>
      </table>
      <table id="LimitedFungiBacteriaRates" tableType="local" separator=",">
        <fields>
          <field type="int" name="Rate" />
        </fields>
        <rowKeys name="Limited Fungi Limit" type="string" find="eq">
          <key value="10/50" caption="" default="1" />
          <key value="25/50" caption="" />
          <key value="50/50" caption="" />
        </rowKeys>
        <data>
          <row value="0" />
          <row value="80" />
          <row value="115" />
        </data>
      </table>
      <table id="LossAssessmentRates" tableType="local">
        <fields>
          <field type="int" name="Rate" />
        </fields>
        <rowKeys name="Limit" type="int" find="interpolate">
          <key value="1000" />
          <key value="5000" />
          <key value="10000" />
          <key value="5000" default="1" />
        </rowKeys>
        <colKeys name="Form" type="string" find="range">
          <key value="HO1,HO2,HO3,HO4" />
          <key value="HO15" />
          <key value="HO6" />
        </colKeys>
        <colKeys name="Additions Alterations Type" type="string" find="range">
          <key value="None,Basic" />
          <key value="Special" />
        </colKeys>
        <data>
          <row value="0,,0,,0,0" />
          <row value="4,,5,,4,5" />
          <row value="6,,9,,6,9" />
          <row value="1,,3,,1,3" />
        </data>
      </table>
      <table id="LossOfUseInformation" tableType="local">
        <fields>
          <field type="int" name="Rate" />
          <field type="int" name="IncludedFactor" />
        </fields>
        <rowKeys name="Form" type="string" find="range">
          <key value="HO1,HO8" />
          <key value="HO2,HO3,HO15,HO7" />
          <key value="HO4" />
          <key value="HO6" />
        </rowKeys>
        <data>
          <row value="5,.10" />
          <row value="5,.20" />
          <row value=",.20" />
          <row value=",.40" />
        </data>
      </table>
      <table id="MedicalRates" tableType="local">
        <fields>
          <field type="int" name="Rate" />
        </fields>
        <rowKeys name="Medical Limit" type="int" find="eq">
          <key value="0" />
          <key value="1000" />
          <key value="2000" />
          <key value="3000" />
          <key value="4000" />
          <key value="5000" />
        </rowKeys>
        <data>
          <row value="0" />
          <row value="0" />
          <row value="4" />
          <row value="8" />
          <row value="11" />
          <row value="14" />
        </data>
      </table>
      <table id="NewHomeDiscountFactors" tableType="local">
        <fields>
          <field type="int" name="Factor" />
        </fields>
        <rowKeys name="Age" type="float" find="range">
          <key value="&lt;10" />
          <key value="11-15" />
          <key value="16-20" />
          <key value="21&gt;" />
        </rowKeys>
        <data>
          <row value="0.10" />
          <row value="0.07" />
          <row value="0.05" />
          <row value="0.00" />
        </data>
      </table>
      <table id="OrdinanceOrLawRates" tableType="local" separator=",">
        <fields>
          <field type="int" name="Rate" />
        </fields>
        <rowKeys name="Ordinance Or Law" type="string" find="eq">
          <key value="N" caption="" />
          <key value="25" caption="" />
          <key value="50" caption="" />
        </rowKeys>
        <data>
          <row value="0" />
          <row value="0" />
          <row value="50" />
        </data>
      </table>
      <table id="PersonalPropertyInformation" tableType="local">
        <fields>
          <field type="int" name="IncreasedRate" />
          <field type="int" name="ReducedRate" />
          <field type="int" name="IncludedFactor" />
          <field type="int" name="MinimumFactor" />
        </fields>
        <rowKeys name="Form" type="string" find="range">
          <key value="HO1,HO2,HO3,HO7" />
          <key value="HO15" />
        </rowKeys>
        <data>
          <row value="3,1,.50,.40" />
          <row value="4,,.70,.70" />
        </data>
      </table>
      <table id="PreferredPremiumPackageFactors" tableType="local" separator=",">
        <fields>
          <field type="int" name="Factor" />
        </fields>
        <rowKeys name="DwellingLimit" type="int" find="range">
          <key value="0-299999" caption="" />
          <key value="300000-399999" caption="" />
          <key value="400000-499999" caption="" />
          <key value="500000-599999" caption="" />
          <key value="600000-699999" caption="" />
          <key value="700000-799999" caption="" />
          <key value="800000-899999" caption="" />
          <key value="900000-999999" caption="" />
          <key value="1000000&gt;" caption="" />
        </rowKeys>
        <data>
          <row value="25" />
          <row value="30" />
          <row value="35" />
          <row value="45" />
          <row value="50" />
          <row value="60" />
          <row value="75" />
          <row value="75" />
          <row value="75" />
        </data>
      </table>
      <table id="ProtectionConstructionFactors" tableType="local">
        <fields>
          <field type="int" name="Factor" />
        </fields>
        <rowKeys name="Protection Class" type="string" find="eq">
          <key value="1" />
          <key value="2" />
          <key value="3" />
          <key value="4" />
          <key value="5" />
          <key value="6" />
          <key value="7" />
          <key value="8" />
          <key value="88" />
          <key value="9" />
          <key value="10" />
        </rowKeys>
        <colKeys name="Form" type="string" find="range">
          <key value="HO1,HO2,HO3,HO15" />
          <key value="HO4,HO6" />
        </colKeys>
        <colKeys name="Construction Type" type="string" find="range">
          <key value="Masonry,MasonryVeneer,Superior" />
          <key value="Frame,Aluminum,PlasticSiding" />
        </colKeys>
        <data>
          <row value="0.90,1.00,0.900,1.000" />
          <row value="0.90,1.00,0.900,1.000" />
          <row value="0.90,1.00,0.900,1.000" />
          <row value="0.90,1.00,0.900,1.000" />
          <row value="0.90,1.00,0.900,1.000" />
          <row value="0.90,1.00,0.900,1.000" />
          <row value="0.95,1.10,0.900,1.000" />
          <row value="0.95,1.10,0.900,1.000" />
          <row value="0.975,1.15,NA,NA" />
          <row value="1.00,1.20,1.100,1.600" />
          <row value="1.45,1.55,1.150,1.850" />
        </data>
      </table>
      <table id="ReplacementCostFactors" tableType="local">
        <fields>
          <field type="int" name="Factor" />
        </fields>
        <rowKeys name="Form" type="string" find="range">
          <key value="HO1,HO2,HO3,HO15" />
          <key value="HO4,HO6" />
        </rowKeys>
        <data>
          <row value="1.10" />
          <row value="1.35" />
        </data>
      </table>
      <table id="SPPFineArtsRate" tableType="local">
        <fields>
          <field type="int" name="Rate" />
        </fields>
        <rowKeys name="Limit" type="int" find="interpolate">
          <key value="0" />
          <key value="1000" />
          <key value="2000" />
          <key value="3000" />
          <key value="4000" />
          <key value="5000" />
          <key value="6000" />
          <key value="7000" />
          <key value="8000" />
          <key value="9000" />
          <key value="10000" />
          <key value="11000" />
          <key value="12000" />
          <key value="13000" />
          <key value="14000" />
          <key value="15000" />
          <key value="16000" />
          <key value="17000" />
          <key value="18000" />
          <key value="19000" />
          <key value="20000" />
          <key value="21000" />
          <key value="22000" />
          <key value="23000" />
          <key value="24000" />
          <key value="25000" />
          <key value="30000" />
          <key value="35000" />
          <key value="40000" />
          <key value="45000" />
          <key value="50000" />
          <key value="75000" />
          <key value="100000" />
          <key value="10000" default="1" />
        </rowKeys>
        <colKeys name="Number of Families" type="int" find="range">
          <key value="&lt;4" />
          <key value="5&gt;" />
        </colKeys>
        <colKeys name="Protection Class" type="int" find="range">
          <key value="1-8" />
          <key value="9,10" default="1" />
        </colKeys>
        <data>
          <row value="0,0,0,0" />
          <row value="3,4,5,6" />
          <row value="5,6,6,8" />
          <row value="6,8,8,11" />
          <row value="7,9,10,13" />
          <row value="8,11,12,15" />
          <row value="10,12,13,17" />
          <row value="11,14,15,20" />
          <row value="12,16,17,22" />
          <row value="13,17,19,24" />
          <row value="15,19,20,27" />
          <row value="16,21,22,29" />
          <row value="17,22,24,31" />
          <row value="18,24,26,33" />
          <row value="20,25,27,36" />
          <row value="21,27,29,38" />
          <row value="22,29,31,40" />
          <row value="24,30,32,43" />
          <row value="25,32,34,45" />
          <row value="26,33,36,47" />
          <row value="27,35,38,49" />
          <row value="29,37,39,52" />
          <row value="30,38,41,54" />
          <row value="31,40,43,56" />
          <row value="32,42,45,59" />
          <row value="34,43,46,61" />
          <row value="40,51,55,72" />
          <row value="46,59,64,84" />
          <row value="53,68,73,95" />
          <row value="59,76,81,106" />
          <row value="65,84,90,118" />
          <row value="96,124,133,174" />
          <row value="128,164,177,231" />
          <row value="10,10,10,10" />
        </data>
      </table>
      <table id="SPPRates" tableType="local">
        <fields>
          <field type="int" name="Rate" />
        </fields>
        <rowKeys name="Type" type="string" find="eq">
          <key value="Cameras" />
          <key value="Coins" />
          <key value="Furs" />
          <key value="GolfEquipment" />
          <key value="Jewelry" />
          <key value="JewelryVaulted" />
          <key value="MusicalInstruments" />
          <key value="Silverware" />
          <key value="Stamps" />
          <key value="SportsEquipment" />
          <key value="FineArtsBreakage" />
        </rowKeys>
        <data>
          <row value="1.15" />
          <row value="1.25" />
          <row value="0.70" />
          <row value="0.65" />
          <row value="1.10" />
          <row value="0.30" />
          <row value="0.35" />
          <row value="0.25" />
          <row value="0.45" />
          <row value="3.00" />
          <row value="2.25" />
        </data>
      </table>
      <table id="SprinklerProtectiveDeviceFactors" tableType="local">
        <fields>
          <field type="int" name="Factor" />
        </fields>
        <rowKeys name="Sprinkler System" type="string" find="eq">
          <key value="SprinklersAllAreas" caption="" />
          <key value="SprinklersExcludedAreas" caption="" />
          <key value="None" caption="" />
        </rowKeys>
        <data>
          <row value="0.05" />
          <row value="0.03" />
          <row value="0.00" />
        </data>
      </table>
      <table id="TerritoriesByCounty" tableType="local">
        <fields>
          <field type="int" name="Territory" />
        </fields>
        <rowKeys name="County" type="string" find="eq">
          <key value="Default" default="1" />
        </rowKeys>
        <data>
          <row value="34" />
        </data>
      </table>
      <table id="TheftDeductibleFactors" tableType="local">
        <fields>
          <field type="int" name="Factor" />
        </fields>
        <rowKeys name="Form" type="string" find="range">
          <key value="HO1,HO2,HO3,HO15" />
          <key value="HO4,HO6" />
        </rowKeys>
        <data>
          <row value="1.21" />
          <row value="0.95" />
        </data>
      </table>
      <table id="TownhouseRowhouseSurchargeFactors" tableType="local">
        <fields>
          <field type="int" name="Factor" />
        </fields>
        <rowKeys name="Number Of Families" type="int" find="range">
          <key value="&lt;2" />
          <key value="3,4" />
          <key value="5,6,7,8" />
          <key value="9&gt;" />
        </rowKeys>
        <colKeys name="Protection Class" type="int" find="range">
          <key value="1-8" />
          <key value="9&gt;" />
        </colKeys>
        <data>
          <row value="1.00,1.00" />
          <row value="1.10,1.15" />
          <row value="1.25,1.30" />
          <row value="," />
        </data>
      </table>
      <table id="UnscheduledPersonalPropertyInformation" tableType="local">
        <fields>
          <field type="int" name="Minimum" />
          <field type="int" name="Maximum" />
          <field type="int" name="Rate" />
          <field type="int" name="Per" />
        </fields>
        <rowKeys name="Type" type="string" find="eq">
          <key value="Guns" />
          <key value="Jewelry" />
          <key value="Money" />
          <key value="Securities" />
          <key value="Silverware" />
          <key value="ElectronicApparatus" />
        </rowKeys>
        <data>
          <row value="2500,6500,4,100" />
          <row value="1500,6500,23,500" />
          <row value="200,1000,8,100" />
          <row value="1500,3000,5,100" />
          <row value="2500,10000,1.54,500" />
          <row value="1500,6000,13,500" />
        </data>
      </table>
      <table id="WaterBackupRate" tableType="local">
        <fields>
          <field type="int" name="Rate" />
        </fields>
        <rowKeys name="Replacement Cost Contents" type="int" find="eq">
          <key value="0" />
          <key value="1" />
        </rowKeys>
        <data>
          <row value="50" />
          <row value="60" />
        </data>
      </table>
      <table id="WatercraftHullCoverageRates" tableType="local">
        <fields>
          <field type="int" name="Rate" />
        </fields>
        <rowKeys name="Limit" type="int" find="eq">
          <key value="0" />
          <key value="2500" />
          <key value="5000" />
        </rowKeys>
        <data>
          <row value="" />
          <row value="50" />
          <row value="100" />
        </data>
      </table>
      <table id="WatercraftMedicalRates" tableType="local">
        <fields>
          <field type="int" name="Rate" />
        </fields>
        <rowKeys name="Length" type="int" find="range">
          <key value="&lt;15" />
          <key value="16-26" />
          <key value="27&gt;" />
        </rowKeys>
        <rowKeys name="Horsepower" type="int" find="range">
          <key value="&lt;50" />
          <key value="51-100" />
          <key value="101-150" />
          <key value="151-200" />
          <key value="201&gt;" />
        </rowKeys>
        <colKeys name="Medical Limit" type="int" find="eq">
          <key value="0" />
          <key value="1000" />
          <key value="2000" />
          <key value="3000" />
          <key value="4000" />
          <key value="5000" />
        </colKeys>
        <data>
          <row value=",,4,8,11,13" />
          <row value=",,5,10,15,18" />
          <row value=",,8,15,23,27" />
          <row value=",,,,," />
          <row value=",,,,," />
          <row value=",,5,10,15,18" />
          <row value=",,8,15,23,27" />
          <row value=",,10,20,30,35" />
          <row value=",,15,30,46,53" />
          <row value=",,,,," />
          <row value=",,7,14,21,28" />
          <row value=",,10,20,30,40" />
          <row value=",,14,26,38,50" />
          <row value=",,19,35,51,67" />
          <row value=",,,,," />
        </data>
      </table>
      <table id="WatercraftRates" tableType="local">
        <fields>
          <field type="int" name="Rate" />
        </fields>
        <rowKeys name="Horsepower" type="int" find="range">
          <key value="&lt;50" />
          <key value="51-100" />
          <key value="101-150" />
          <key value="151-200" />
          <key value="201&gt;" />
        </rowKeys>
        <colKeys name="Length" type="int" find="range">
          <key value="&lt;15" />
          <key value="16-26" />
          <key value="27&gt;" />
        </colKeys>
        <data>
          <row value="19,29,39" />
          <row value="32,42,52" />
          <row value="45,55,65" />
          <row value=",68,78" />
          <row value=",," />
        </data>
      </table>
      <table id="WatercraftSailboatMedicalRates" tableType="local">
        <fields>
          <field type="int" name="Rate" />
        </fields>
        <rowKeys name="Length" type="int" find="range">
          <key value="&lt;25" />
          <key value="26-40" />
          <key value="41&gt;" />
        </rowKeys>
        <colKeys name="Medical Limit" type="int" find="eq">
          <key value="0" />
          <key value="1000" />
          <key value="2000" />
          <key value="3000" />
          <key value="4000" />
          <key value="5000" />
        </colKeys>
        <data>
          <row value=",,,,," />
          <row value=",,4,8,11,14" />
          <row value=",,,,," />
        </data>
      </table>
      <table id="WatercraftSailboatRates" tableType="local">
        <fields>
          <field type="int" name="Rate" />
        </fields>
        <rowKeys name="Length" type="int" find="range">
          <key value="&lt;25" />
          <key value="26-40" />
          <key value="41&gt;" />
        </rowKeys>
        <data>
          <row value="0" />
          <row value="19" />
          <row value="0" />
        </data>
      </table>
      <table id="WindDeductibles" tableType="local" separator=",">
        <fields>
          <field type="int" name="Factor" />
        </fields>
        <rowKeys name="Deductible" type="int" find="eq">
          <key value="N" caption="" />
          <key value="1%" caption="" />
          <key value="2%" caption="" />
          <key value="5%" caption="" />
          <key value="10%" caption="" />
        </rowKeys>
        <data>
          <row value="0" />
          <row value="0.01" />
          <row value="0.02" />
          <row value="0.05" />
          <row value="0.10" />
        </data>
      </table>
      <object id="Integration" path="integration">
        <minOccurs value="1" />
        <maxOccurs value="1" />
        <public id="Integration.LOB" path="LOB" type="string" override="1">
          <definition>
            <caption value="LOB" />
          </definition>
          <rules>
            <default value="Home" />
          </rules>
        </public>
      </object>
      <object id="ViewModelInfo" abstract="1">
        <private id="PaymentDetails.BillingSetup" caption="" type="string" override="1">
          <value value="BillingSetup" />
        </private>
        <private id="PaymentDetails.PaymentDetails" caption="" type="string" override="1">
          <value value="PaymentDetails" />
        </private>
        <private id="Coverage.Consumer" caption="" type="string">
          <value value="Consumer" />
        </private>
        <private id="Coverage.Coverage" caption="" type="string">
          <value value="Coverage" />
        </private>
        <private id="AdditionalCoverage.Consumer" caption="" type="string">
          <value value="Consumer" />
        </private>
        <private id="AdditionalCoverage.AdditionalCoverage" caption="" type="string">
          <value value="AdditionalCoverage" />
        </private>
      </object>
    </object>
    <object id="System" abstract="1">
      <object id="Constants" abstract="1">
        <object id="MaxValue">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <private id="MaxValue.MaxValueLimitInt" caption="" type="int">
            <value value="9999999" />
          </private>
        </object>
      </object>
      <object id="DefinedConstants">
        <minOccurs value="1" />
        <maxOccurs value="1" />
        <public id="DefinedConstants.Hyphen" type="string" comment="" path="Hyphen">
          <rules>
            <value value="-" />
          </rules>
          <definition>
            <readOnly idref="True" />
            <caption value="" />
          </definition>
        </public>
      </object>
      <object id="Context" abstract="1">
      </object>
      <object id="DateTime" abstract="1">
        <private id="DateTime.CurrentTime" type="string">
          <value>
            <session sessionValue="time" />
          </value>
        </private>
      </object>
    </object>
    <messages>
      <message name="ReplacementCostContentsInfo.SelectedMsg1" flag="comment" category="(message)">Replacement Cost Contents coverage is included with form HO-15.</message>
      <message name="*default*" flag="" category="" />
      <message name="*minimum*" flag="" category="" />
      <message name="RiskInput.YearBuiltMsg1" flag="comment" category="(message)">The year built entered is invalid.  Please verify entry.</message>
      <message name="RiskInput.YearBuiltMsg2" flag="comment" category="(message)">The year built entered is in the future.  Please verify entry.</message>
      <message name="DeclineRules.IsEligibleMsg4" flag="ineligible" category="(message)">Ineligible:  Dwellings with trampolines</message>
      <message name="ReferralRules.IsBindableAgentMsg1" flag="refer" category="(message)">Dwellings greater than $400,000 must be referred</message>
      <message name="DeclineRules.IsEligibleAgentMsg1" flag="refer" category="(message)">Dwellings greater than $500,000 are not eligible for coverage</message>
      <message name="DeclineRules.IsEligibleAgentMsg2" flag="comment" category="(message)">Coastal Zip Codes are ineligible at this time.</message>
      <message name="PolicyPrivate.UploadButtonPostActionsMsg1" flag="comment" category="(message)">Your file has been uploaded and attached to the policy.</message>
      <message name="UserInterface.RequiredFieldsCompletedMsg2" flag="comment" category="(message)">All appraisal documents must be attached before the policy can be issued.  Please return to the Scheduled Personal Property screen and attach the appraisal(s) needed.</message>
    </messages>
    <object id="_IntegrationData" path="_integrationdata" document="_IntegrationData" persistedDocument="1" override="1">
      <minOccurs value="1" />
      <maxOccurs value="1" />
    </object>
    <object id="_BillingInputDoc" path="." document="_BillingInputDoc" persistedDocument="1" override="1">
      <minOccurs value="1" />
      <maxOccurs value="1" />
      <object id="BillingKeys" abstract="1">
        <public id="BillingKeys.AccountSetupSelection" type="string" comment="" path="AccountSetupSelection">
          <definition>
            <caption value="Account Setup Selection" />
          </definition>
        </public>
      </object>
    </object>
    <object id="TemporaryIntegration" abstract="1">
      <object id="IntegrationStatusInfo" path="integrationstatusinfo">
        <minOccurs value="1" />
        <maxOccurs value="1" />
        <public id="IntegrationStatusInfo.TerritoryIntegrationStatus" path="TerritoryIntegrationStatus" type="string">
          <definition>
            <caption value="Territory Integration Status" />
          </definition>
          <rules>
            <default value="none" />
          </rules>
        </public>
      </object>
    </object>
    <object id="_prefill" path="." document="_prefill">
      <minOccurs value="1" />
      <maxOccurs value="1" />
      <object id="PrefillData" path="data/StubObj.GetXMLRs/data">
        <minOccurs value="0" />
        <maxOccurs value="1" />
        <private id="PrefillData.DwellingCount" caption="" type="float">
          <value>
            <iterator type="float" scope="all" action="count" idref="PrefillDwelling" />
          </value>
        </private>
        <private id="PrefillData.DwellingsWereReturned" caption="" type="boolean">
          <value>
            <comparison compare="gt">
              <operand idref="PrefillData.DwellingCount" type="float" />
              <operand type="int" value="0" />
            </comparison>
          </value>
        </private>
        <private id="PrefillData.NoInformationReturned" caption="" type="boolean">
          <value>
            <comparison compare="eq">
              <operand idref="PrefillData.DwellingsWereReturned" type="boolean" />
              <operand idref="False" type="int" />
            </comparison>
          </value>
        </private>
        <private id="PrefillData.DwellingsWereNotReturned" caption="" type="boolean">
          <value>
            <comparison compare="eq">
              <operand idref="PrefillData.DwellingCount" type="float" />
              <operand type="int" value="0" />
            </comparison>
          </value>
        </private>
        <object id="PrefillPolicy" path="policy">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="PrefillAccount" path="account">
            <minOccurs value="0" />
            <maxOccurs value="1" />
            <public id="PrefillAccount.State" path="address/State" type="string">
              <definition>
                <caption value="State" />
              </definition>
              <rules>
                <affects>
                  <reference idref="AccountInput.State" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="PrefillAccount.Address1" path="address/Address1" type="string">
              <definition>
                <caption value="Adress 1" />
              </definition>
              <rules>
                <affects>
                  <reference idref="AccountInput.Address1" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="PrefillAccount.Address2" path="address/Address2" type="string">
              <definition>
                <caption value="Address 2" />
              </definition>
              <rules>
                <affects>
                  <reference idref="AccountInput.Address2" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="PrefillAccount.City" path="address/City" type="string">
              <definition>
                <caption value="City" />
              </definition>
              <rules>
                <affects>
                  <reference idref="AccountInput.City" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="PrefillAccount.ZipCode" path="address/ZipCode" type="int">
              <definition>
                <caption value="Zip Code" />
              </definition>
              <rules>
                <affects>
                  <reference idref="AccountInput.ZipCode" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="PrefillAccount.FirstName" path="person/FirstName" type="string">
              <definition>
                <caption value="First Name" />
              </definition>
              <rules>
                <affects>
                  <reference idref="AccountInput.FirstName" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="PrefillAccount.LastName" path="person/LastName" type="string">
              <definition>
                <caption value="Last Name" />
              </definition>
              <rules>
                <affects>
                  <reference idref="AccountInput.LastName" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="PrefillAccount.MiddleName" path="person/MiddleName" type="string">
              <definition>
                <caption value="Middle Name" />
              </definition>
              <rules>
                <affects>
                  <reference idref="AccountInput.MiddleName" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="PrefillAccount.Birthdate" path="person/Birthdate" type="date">
              <definition>
                <caption value="Birthdate" />
              </definition>
              <rules>
                <affects>
                  <reference idref="AccountInput.BirthDate" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="PrefillAccount.SSN" path="person/SSN" type="int">
              <definition>
                <caption value="SSN" />
              </definition>
              <rules>
                <affects>
                  <reference idref="AccountInput.SSN" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="PrefillAccount.MaritalStatus" path="person/Married" type="string">
              <definition>
                <caption value="MaritalStatus" />
              </definition>
              <rules>
                <affects>
                  <reference idref="AccountInput.MaritalStatus" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="PrefillAccount.PrimaryPhone" path="PrimaryPhone" type="int">
              <definition>
                <caption value="Primary Phone" />
              </definition>
              <rules>
                <affects>
                  <reference idref="AccountInput.PrimaryPhone" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="PrefillAccount.PrimaryPhoneType" path="PrimaryPhoneType" type="string">
              <definition>
                <caption value="Primary Phone Type" />
              </definition>
              <rules>
                <affects>
                  <reference idref="AccountInput.PrimaryPhoneType" effect="setValue" />
                </affects>
              </rules>
            </public>
          </object>
          <object id="PrefillDwelling" path="risk/homeinformation">
            <minOccurs value="0" />
            <maxOccurs value="*" />
            <relationships />
            <public id="PrefillDwelling.Territory" path="TerritoryCode" type="string">
              <definition>
                <caption value="Territory" />
              </definition>
              <rules>
                <affects>
                  <reference idref="DwellingInput.TerritoryCode" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="PrefillDwelling.DistanceToFireStation" path="DistanceToFireStation" type="string">
              <definition>
                <caption value="Distance To Fire Station" />
              </definition>
              <rules>
                <affects>
                  <reference idref="DwellingInput.DistanceToFireStation" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="PrefillDwelling.YearBuilt" path="YearBuilt" type="string">
              <definition>
                <caption value="Year Built" />
              </definition>
              <rules>
                <affects>
                  <reference idref="DwellingInput.YearBuilt" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="PrefillDwelling.Structure" path="Structure" type="string">
              <definition>
                <caption value="Structure" />
              </definition>
              <rules>
                <affects>
                  <reference idref="DwellingInput.BuildingType" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="PrefillDwelling.Construction" path="Construction" type="string">
              <definition>
                <caption value="Constructions" />
              </definition>
              <rules>
                <affects>
                  <reference idref="DwellingInput.Construction" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="PrefillDwelling.FoundationType" path="FoundationType" type="string">
              <definition>
                <caption value="Foundation" />
              </definition>
              <rules>
                <affects>
                  <reference idref="DwellingInput.FoundationType" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="PrefillDwelling.Import" path="Import" type="string">
              <definition>
                <caption value="Import" />
              </definition>
              <rules>
                <default idref="True" />
              </rules>
            </public>
            <public id="PrefillDwelling.SquareFeet" path="SquareFeet" type="string">
              <definition>
                <caption value="Square Feet" />
              </definition>
              <rules>
                <affects>
                  <reference idref="DwellingInput.SquareFeet" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="PrefillDwelling.ProtectionClass" path="ProtectionClass" type="string">
              <definition>
                <caption value="Protection Class" />
              </definition>
              <rules>
                <affects>
                  <reference idref="DwellingInput.RatedProtectionClass" effect="setValue" />
                </affects>
              </rules>
            </public>
          </object>
        </object>
        <private id="PrefillData.InformationReturned" caption="" type="boolean">
          <value>
            <comparison compare="eq">
              <operand idref="PrefillData.DwellingsWereReturned" type="boolean" />
              <operand idref="True" type="int" />
            </comparison>
          </value>
        </private>
      </object>
    </object>
    <object id="_CLUE" path="." document="_CLUE">
      <minOccurs value="1" />
      <maxOccurs value="1" />
      <object id="CLUEData" path="data/StubObj.GetXMLRs/data">
        <minOccurs value="1" />
        <maxOccurs value="1" />
        <object id="CLUEPolicy" path="policy">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="Claim" path="loss">
            <minOccurs value="0" />
            <maxOccurs value="*" />
            <relationships>
              <relationship>
                <relatedObject idref="Loss" />
                <foreignKey idref="Claim.LossID" />
              </relationship>
            </relationships>
            <public id="Claim.LossID" path="LossID" type="string">
              <definition>
                <caption value="Claim Loss ID" />
              </definition>
            </public>
            <object id="ClaimPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="ClaimPrivate.AddLossRecordRq" type="string" comment="">
                <value>
                  <request verb="ManuScript.addObjectRecordRq" get="@id">
                    <responsePath value="" />
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue value="Loss" name="objectID" dataType="attribute" />
                      <nameValue idref="ClaimPrivate.CurrentIteration" name="iteration" dataType="attribute" />
                    </nameValues>
                  </request>
                </value>
                <affects>
                  <reference idref="Claim.LossID" effect="setValue" />
                </affects>
              </private>
              <private id="ClaimPrivate.AddRecordCheck" caption="" type="string">
                <value>
                  <if>
                    <condition>
                      <comparison compare="or">
                        <comparison compare="eq">
                          <operand idref="LinePrivate.LossCount" type="int" />
                          <operand type="int" value="0" />
                        </comparison>
                        <comparison compare="and">
                          <comparison compare="gt">
                            <operand idref="LinePrivate.LossCount" type="int" />
                            <operand type="int" value="0" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="ClaimPrivate.LossDoesNotExist" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="ClaimPrivate.AddLossRecordRq" />
                  </if>
                </value>
              </private>
              <private id="ClaimPrivate.CurrentIteration" caption="" type="int">
                <value>
                  <iterator type="int" scope="all" action="current" idref="Claim" />
                </value>
              </private>
              <private id="ClaimPrivate.LossOnPolicyCheck" caption="" type="int">
                <value>
                  <iterator type="int" scope="all" action="count" idref="Loss">
                    <where>
                      <comparison compare="eq">
                        <operand idref="Claim.IDNumberToCheck" type="string" />
                        <operand idref="LossInput.ClaimIDNumber" type="string" />
                      </comparison>
                    </where>
                  </iterator>
                </value>
              </private>
              <private id="ClaimPrivate.LossDoesNotExist" caption="" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="ClaimPrivate.LossOnPolicyCheck" type="int" />
                    <operand type="int" value="0" />
                  </comparison>
                </value>
              </private>
            </object>
            <public id="Claim.LossType" path="LossType" type="string">
              <definition>
                <caption value="Loss Type" />
              </definition>
              <rules>
                <affects>
                  <reference idref="LossInput.LossType" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="Claim.DateOfLoss" path="DateOfLoss" type="date">
              <definition>
                <caption value="Date Of Loss" />
              </definition>
              <rules>
                <affects>
                  <reference idref="LossInput.DateOfLoss" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="Claim.AmountPaid" path="AmountPaid" type="float">
              <definition>
                <caption value="Amount Paid" />
                <formatMask idref="FormatMask.PremiumPenniesDisplay" />
              </definition>
              <rules>
                <affects>
                  <reference idref="LossInput.AmountPaid" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="Claim.Description" path="Description" type="string">
              <definition>
                <caption value="Description" />
              </definition>
              <rules>
                <affects>
                  <reference idref="LossInput.Description" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="Claim.IdentificationNumber" path="IdentificationNumber" type="string">
              <definition>
                <caption value="Identification Number" />
              </definition>
              <rules>
                <affects>
                  <reference idref="LossInput.ClaimIDNumber" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="Claim.Source" path="Source" type="string">
              <definition>
                <caption value="Source" />
              </definition>
              <rules>
                <value value="CLUE" />
                <affects>
                  <reference idref="LossInput.Source" effect="setValue" />
                </affects>
              </rules>
            </public>
            <public id="Claim.IDNumberToCheck" path="IdentificationNumber" type="string">
              <definition>
                <caption value="ID Number To Check" />
              </definition>
            </public>
          </object>
        </object>
      </object>
    </object>
    <object id="ProductWorkflow" abstract="1">
      <object id="ProductWorkflowFunctions" abstract="1">
        <object id="LoadProductTo" abstract="1">
        </object>
      </object>
    </object>
    <object id="TransACTData" abstract="1">
      <object id="PolicyWorkflowData" abstract="1">
        <object id="PolicyWorkflowDataInput" abstract="1">
          <public id="PolicyWorkflowDataInput.IsEligible" path="IsEligible" type="boolean" override="1">
            <definition>
              <caption value="Is Eligible" />
            </definition>
            <rules>
              <value value="0" />
            </rules>
          </public>
        </object>
      </object>
    </object>
  </model>
  <topics>
    <topic name="MainInterview" override="1" setType="interview" caption="Interview">
      <page name="RiskSchedule" caption="Dwelling Information" pageVersion="2.0" validRef="RiskSchedulePage.Show" override="1" prevPage="PolicyDetail">
        <group object="Risk" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" cc="GrayPanel" caption="Dwelling Information" icon="house.png">
            <section direction="across" captionPosition="above" showCaption="repeat">
              <reference idref="LocationOutputNonShredded.AddressDisplay" compute="1" caption=" " fldClass="x_MarginTop10" />
              <action command="custom" pageRef="LocationDetail" topic="LocationDetail" caption="Edit" displayType="hyperlink" preCommand="LocationPrivate.SetLocationEditMode">
                <nameValues>
                  <nameValue value="1" name="popUp" />
                  <nameValue value="1" name="ignoreValidation" />
                </nameValues>
              </action>
            </section>
            <section direction="down" captionPosition="before" showCaption="repeat" cc="LightPanel">
              <section direction="across" captionPosition="above" showCaption="repeat" uid="t_r258BDD8531104DB69C8028AEB2698E0F2_3">
                <reference idref="DwellingInput.Form" onBlur="1" capClass="x_Width140" />
                <reference idref="DwellingInput.UseType" capClass="x_Width120" />
                <reference idref="DwellingInput.BuildingType" capClass="x_Width140" compute="1" />
                <reference idref="DwellingInput.YearBuilt" compute="1">
                  <nameValues>
                    <nameValue idref="True" name="removeZero" />
                  </nameValues>
                </reference>
                <nameValues />
              </section>
              <section direction="across" captionPosition="above" showCaption="repeat">
                <reference idref="DwellingInput.Construction" capClass="x_Width140" />
                <reference idref="DwellingInput.RatedProtectionClass" onBlur="1" capClass="x_Width120" />
                <reference idref="DwellingInput.NumberOfFamilies" capClass="x_Width140" />
                <reference idref="DwellingInput.TerritoryCode" compute="1">
                  <nameValues>
                    <nameValue idref="True" name="readOnly" />
                  </nameValues>
                </reference>
              </section>
              <section direction="across" captionPosition="above" showCaption="repeat">
                <reference idref="DwellingInput.FoundationType" capClass="x_Width140" />
                <reference idref="DwellingInput.SquareFeet" capClass="x_Width120" />
              </section>
              <section direction="across" captionPosition="above" showCaption="repeat">
                <reference idref="DwellingInput.PurchasePrice" capClass="x_Width140" />
                <reference idref="DwellingInput.PurchaseDate" capClass="x_Width120" />
                <reference idref="DwellingInput.CurrentMarketValue" />
              </section>
            </section>
            <section direction="across" captionPosition="before" showCaption="repeat" caption="Additional Information" uid="s_r258BDD8531104DB69C8028AEB2698E0FA_3" cc="LightPanel" collapsible="1" startClosed="1">
              <section direction="down" captionPosition="above" showCaption="repeat" class="x_Width300">
                <reference idref="DwellingInput.PrimaryHeatType">
                  <nameValues />
                </reference>
                <reference idref="DwellingInput.SupplementalHeatType" />
                <reference idref="DwellingInput.UnderConstruction" />
                <reference idref="DwellingInput.BuildingCodeEffectivenessGrading" />
                <reference idref="DwellingInput.ElectricalSystem" />
                <reference idref="DwellingInput.OpeningProtection" />
              </section>
              <nameValues>
                <nameValue value="Additional Information" name="toggleCaption" />
              </nameValues>
              <section direction="down" captionPosition="above" showCaption="repeat" class="x_Width300">
                <reference idref="DwellingInput.BurglarAlarm" />
                <reference idref="DwellingInput.FireAlarm" />
                <reference idref="DwellingInput.Sprinkler" />
                <reference idref="DwellingInput.BuildingCodeEffectivenessGradingCommunity" />
                <reference idref="DwellingInput.Wiring" />
                <reference idref="DwellingInput.RoofGeometry" />
              </section>
              <section direction="down" captionPosition="before" showCaption="repeat">
                <action command="custom" caption="Updated Services" pageRef="UpdatedServices" topic="UpdatedServices">
                  <nameValues>
                    <nameValue value="1" name="popUp" />
                    <nameValue value="Updated Services" name="popUpTitle" />
                    <nameValue value="900" name="popUpWidth" />
                    <nameValue value="400" name="popUpHeight" />
                  </nameValues>
                </action>
              </section>
            </section>
            <section direction="down" captionPosition="before" showCaption="repeat" caption="Suburban Rating Information" validRef="DwellingPrivate.QualifiesForSuburbanRating" uid="s_r4F66F419BE884C1B9C26928642F99B7C11_3" cc="LightPanel" collapsible="1" startClosed="1">
              <section direction="across" captionPosition="before" showCaption="repeat" capClass="x_Width150" fldClass="x_Width100">
                <reference idref="DwellingInput.DistanceToFireStation" />
                <reference idref="DwellingInput.DistanceToHydrant" />
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" capClass="x_Width150" fldClass="x_Width100">
                <reference idref="DwellingInput.DistanceToWaterSource" />
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" capClass="x_Width150" fldClass="x_Width100">
                <reference idref="DwellingInput.DwellingAccessibleToFireEquipment" />
                <reference idref="DwellingInput.RespondingFireDepartment" />
              </section>
              <nameValues>
                <nameValue value="Surburban Rating Information" name="toggleCaption" />
              </nameValues>
              <section direction="across" captionPosition="before" showCaption="repeat" capClass="x_Width150" fldClass="x_Width100">
                <reference idref="DwellingInput.DistanceToCoast" />
                <reference idref="DwellingInput.DistanceToTidalWater" />
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" capClass="x_Width150" fldClass="x_Width100">
                <reference idref="DwellingInput.DistanceToMajorWaterway" />
              </section>
            </section>
            <nameValues />
          </section>
        </group>
        <nameValues>
          <nameValue idref="RiskSchedulePage.ReadOnly" name="readOnly" />
        </nameValues>
      </page>
      <page name="DwellingCoverage" caption="Dwelling Coverage" pageVersion="2" prevPage="RiskSchedule" validRef="DwellingPage.Show">
        <group object="Risk" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" cc="GrayPanel" caption="Coverage Information" icon="chart_bar.png">
            <section direction="down" captionPosition="above" showCaption="repeat" uid="s_r258BDD8531104DB69C8028AEB2698E0F2_3" cc="DriverPanel">
              <section direction="across" captionPosition="before" showCaption="repeat" fldClass="x_Width10" capClass="x_Bold">
                <reference idref="Spacer" caption="Coverage" capClass="x_Width120" />
                <reference idref="Spacer" caption="Limit" capClass="x_Width60" />
                <reference idref="Spacer" caption="Included Limit" capClass="x_Width80" />
                <reference idref="Spacer" caption="Deductible" capClass="x_Width60" />
                <reference idref="Spacer" caption="Wind Deductible" />
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat">
                <reference idref="CoverageADwellingInput.Limit" compute="1" onBlur="1" capClass="x_Width125" fldClass="x_Width185" caption="Dwelling Limit">
                  <nameValues>
                    <nameValue idref="DwellingPrivate.FormIsCondoOrTenant" name="eliminate" />
                  </nameValues>
                </reference>
                <reference idref="CoverageCPersonalPropertyHO46Input.Limit" caption="Personal Property" compute="1" onBlur="1" capClass="x_Width125" fldClass="x_Width225">
                  <nameValues>
                    <nameValue idref="DwellingPrivate.FormIsDwelling" name="eliminate" />
                  </nameValues>
                </reference>
                <reference idref="DwellingInput.Deductible" fldClass="x_Width80" caption=" " />
                <reference idref="DwellingInput.WindDeductible" fldClass="x_Width100" caption="  " />
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" validRef="DwellingPrivate.FormIsDwelling">
                <reference idref="CoverageBOtherStructuresInput.Limit" compute="1" caption="Other Structures" capClass="x_Width125" fldClass="x_Width100" onBlur="1" />
                <reference idref="CoverageBOtherStructuresOutput.IncludedLimit" compute="1" caption=" " />
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" validRef="DwellingPrivate.FormIsDwelling">
                <reference idref="CoverageCPersonalPropertyHO3Input.Limit" compute="1" caption="Personal Property" capClass="x_Width125" fldClass="x_Width100" onBlur="1" />
                <reference idref="CoverageCPersonalPropertyHO3Output.IncludedLimit" compute="1" caption=" " />
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat">
                <reference idref="CoverageDLossOfUseInput.Limit" compute="1" capClass="x_Width125" fldClass="x_Width100" caption="Loss Of Use" onBlur="1" />
                <reference idref="CoverageDLossOfUseOutput.IncludedLimit" compute="1" caption=" " />
              </section>
              <section direction="down" captionPosition="before" showCaption="repeat" capClass="x_Width125">
                <reference idref="CoverageELiabilityInput.Limit" onBlur="1" caption="Personal Liability">
                  <nameValues />
                </reference>
                <reference idref="CoverageFMedicalInput.Limit" onBlur="1" caption="Medical Payments">
                  <nameValues />
                </reference>
              </section>
              <nameValues />
            </section>
            <section direction="down" captionPosition="before" showCaption="repeat" class="x_Width600" cc="DriverPanel">
              <section direction="down" captionPosition="before" showCaption="repeat" uid="s_r258BDD8531104DB69C8028AEB2698E0FB_3">
                <tableLayout direction="across" captionPosition="above" showCaption="once" uid="t_r258BDD8531104DB69C8028AEB2698E0F35_3">
                  <tableLayout direction="down" captionPosition="before" showCaption="once" uid="t_r258BDD8531104DB69C8028AEB2698E0F36_3">
                    <reference idref="ReplacementCostContentsInput.Indicator" compute="1" />
                    <reference idref="ReplacementCostDwellingInput.Indicator" compute="1" onBlur="1">
                      <nameValues>
                        <nameValue idref="DwellingPrivate.FormIsCondoOrTenant" name="eliminate" />
                      </nameValues>
                    </reference>
                    <reference idref="ReplacementCostDwellingInput.ReplacementCostValue" compute="1">
                      <nameValues>
                        <nameValue idref="ReplacementCostDwellingPrivate.HideReplacementCostValue" name="eliminate" />
                      </nameValues>
                    </reference>
                    <reference idref="CreditCardInput.Limit" />
                  </tableLayout>
                  <tableLayout direction="down" captionPosition="before" showCaption="once" uid="t_r258BDD8531104DB69C8028AEB2698E0F37_3">
                    <reference idref="RefrigeratedPersonalPropertyInput.Indicator" />
                    <reference idref="WaterBackupOfSewersOrDrainsInput.Indicator">
                      <nameValues>
                        <nameValue idref="DwellingPrivate.FormIsCondoOrTenant" name="eliminate" />
                      </nameValues>
                    </reference>
                  </tableLayout>
                </tableLayout>
                <section direction="down" captionPosition="before" showCaption="repeat">
                  <action command="custom" caption="Import Replacement Cost">
                    <nameValues />
                  </action>
                </section>
                <nameValues />
              </section>
              <nameValues>
                <nameValue value="Common Coverages" name="panelHeader" />
              </nameValues>
            </section>
            <nameValues />
          </section>
        </group>
        <nameValues>
          <nameValue idref="DwellingPage.ReadOnly" name="readOnly" />
        </nameValues>
      </page>
      <page name="AdditionalCoverage" caption="Additional Coverage" pageVersion="2" prevPage="DwellingCoverage" validRef="AdditionalCoveragePage.Show">
        <group object="Risk" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" caption="Additional Coverage Information" cc="GrayPanel" icon="chart_bar.png">
            <section direction="down" captionPosition="before" showCaption="repeat" uid="s_r258BDD8531104DB69C8028AEB2698E0F11_3" class="x_ShortApplicationStyleQuestions">
              <section direction="across" captionPosition="above" showCaption="repeat" uid="s_r258BDD8531104DB69C8028AEB2698E0F12_3" startClosed="1" cc="LightGray">
                <nameValues>
                  <nameValue value="Additional Property Coverages" name="toggleCaption" />
                  <nameValue value="Additional Property Coverages" name="panelHeader" />
                </nameValues>
                <tableLayout direction="across" captionPosition="above" showCaption="once" uid="t_r258BDD8531104DB69C8028AEB2698E0F34_3">
                  <tableLayout direction="down" captionPosition="before" showCaption="repeat" uid="t_r258BDD8531104DB69C8028AEB2698E0F13_3" capClass="x_WiderCaptions" fldClass="x_Width130">
                    <reference idref="AdditionsAlterationsInput.Type" />
                    <reference idref="AdditionsAlterationsInput.Limit" />
                    <reference idref="BusinessPropertyInput.Limit" />
                    <reference idref="EarthquakeInput.Deductible" />
                    <reference idref="EarthquakeInput.LossAssessmentLimit">
                      <nameValues>
                        <nameValue idref="True" name="removeZero" />
                      </nameValues>
                    </reference>
                    <reference idref="IdentityFraudExpenseCoverageInput.Indicator" />
                    <reference idref="InflationGuardInput.Limit" compute="1" />
                    <reference idref="LossAssessmentInput.Limit" />
                    <reference idref="OtherStructuresRentedToOthersInput.Limit" compute="1">
                      <nameValues>
                        <nameValue idref="DwellingPrivate.FormIsDwelling" name="removeZero" />
                      </nameValues>
                    </reference>
                    <reference idref="PermittedIncidentalOccupancyOtherStructuresInput.Limit">
                      <nameValues>
                        <nameValue idref="True" name="removeZero" />
                      </nameValues>
                    </reference>
                    <reference idref="PersonalPropertyOtherResidenceInput.Limit">
                      <nameValues>
                        <nameValue idref="True" name="removeZero" />
                      </nameValues>
                    </reference>
                    <nameValues />
                    <reference idref="LimitedFungiBacteriaInput.Limit" />
                    <reference idref="OrdinanceOrLawInput.Limit" />
                    <reference idref="CarportsPoolCagesInput.Limit" onBlur="1" compute="1" />
                    <reference idref="CarportsPoolCagesInput.Description">
                      <nameValues>
                        <nameValue idref="CarportsPoolCagesPrivate.HideDescription" name="eliminate" />
                      </nameValues>
                    </reference>
                  </tableLayout>
                  <tableLayout direction="down" captionPosition="before" showCaption="repeat" uid="t_r258BDD8531104DB69C8028AEB2698E0F1E_3" capClass="x_WiderCaptions">
                    <reference idref="SpecialComputerCoverageInput.Indicator" />
                    <reference idref="SpecialPersonalPropertyCoverageInput.Indicator" />
                    <reference idref="UnitsRegularlyRentedToOthersInput.Indicator" />
                    <reference idref="UnscheduledElectronicApparatusInput.Limit" />
                    <reference idref="UnscheduledGunsInput.Limit" />
                    <reference idref="UnscheduledJewelryInput.Limit" />
                    <reference idref="UnscheduledMoneyInput.Limit" />
                    <reference idref="UnscheduledSecuritiesInput.Limit" />
                    <reference idref="UnscheduledSilverwareInput.Limit" />
                    <reference idref="WaterBackupAndSumpOverflowInput.Indicator" />
                    <reference idref="WatercraftBlanketHullCoverageInput.Limit" />
                    <nameValues />
                  </tableLayout>
                </tableLayout>
              </section>
            </section>
            <section direction="across" captionPosition="above" showCaption="repeat" uid="s_r258BDD8531104DB69C8028AEB2698E0F28_3" startClosed="1" class="x_ShortApplicationStyleQuestions" cc="LightGray">
              <section direction="down" captionPosition="before" showCaption="repeat" uid="s_r258BDD8531104DB69C8028AEB2698E0F29_3" class="x_ShortApplicationStyleQuestions">
                <tableLayout direction="across" captionPosition="above" showCaption="once" uid="t_r258BDD8531104DB69C8028AEB2698E0F38_3">
                  <tableLayout direction="down" captionPosition="before" showCaption="repeat" uid="t_r258BDD8531104DB69C8028AEB2698E0F39_3">
                    <reference idref="IncidentalFarmingPersonalLiabilityInput.Type" />
                    <reference idref="PersonalInjuryInput.Indicator" />
                  </tableLayout>
                  <tableLayout direction="down" captionPosition="before" showCaption="repeat" uid="t_r258BDD8531104DB69C8028AEB2698E0F3A_3">
                    <reference idref="ResidenceEmployeesInput.NumberOfEmployees">
                      <nameValues>
                        <nameValue idref="True" name="removeZero" />
                      </nameValues>
                    </reference>
                  </tableLayout>
                </tableLayout>
                <nameValues />
              </section>
              <nameValues>
                <nameValue value="Additional Liability Coverages" name="toggleCaption" />
                <nameValue value="Additional Liability Coverages" name="panelHeader" />
              </nameValues>
            </section>
            <tableLayout direction="across" captionPosition="above" showCaption="repeat" uid="t_r258BDD8531104DB69C8028AEB2698E0F2E_3">
              <nameValues />
              <action command="goto" caption="Add/Edit Additional Residence(s)" pageRef="AdditionalResidence" topic="AdditionalResidence">
                <nameValues>
                  <nameValue name="popUp" value="1" />
                </nameValues>
              </action>
              <action command="goto" caption="Add/Edit Business Pursuits" pageRef="BusinessPursuits" topic="BusinessPursuits">
                <nameValues>
                  <nameValue name="popUp" value="1" />
                </nameValues>
              </action>
            </tableLayout>
          </section>
        </group>
        <nameValues>
          <nameValue idref="AdditionalCoveragePage.ReadOnly" name="readOnly" />
        </nameValues>
      </page>
      <page name="Coverage" caption="Pricing &amp; Coverage" pageVersion="2.0" prevPage="ClaimsHistory" override="1" validRef="CoveragePage.Show" calculate="2" idref="ExecutePremiums.Value" worksheet="PricingPage.IncludeWorksheetData">
        <group object="Policy" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" cc="GrayPanel">
            <section direction="across" captionPosition="above" showCaption="repeat" uid="s_p76CC320193BB42169212919040353B781E_3" cc="WhiteRounded" fldClass="x_Width140">
              <reference idref="PolicyPremiums.Premium" />
              <nameValues />
              <reference idref="PolicyPremiums.PremiumChange" caption="Premium Change" />
              <reference idref="PolicyPremiums.PremiumPrior" />
              <reference idref="PolicyPremiums.PremiumWritten" caption="Premium Written" />
            </section>
            <section direction="down" captionPosition="before" showCaption="repeat">
              <widget widgetType="comparison" showCaption="repeat" widgetFormat="slider" formatMaskOverride="$???,???,???.00" idref="LineInput.CoveragePackage" affectedValueRef="data.TotalPremiumChange" onBlur="1" restoreSession="1" class="x_PaddingBottom35 x_PaddingLeft60" affectedRatingRef="ExecutePremiums.Value" />
            </section>
            <section direction="down" captionPosition="above" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7821_3" validRef="DwellingPrivate.FormIsDwelling" cc="LightPanel" caption="Coverage Calculator" icon="calculator.png">
              <nameValues />
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <section direction="across" captionPosition="before" showCaption="only" class="x_Width240">
                  <reference idref="CoverageADwellingInput.Limit" onBlur="1" compute="1">
                    <nameValues>
                      <nameValue idref="DwellingPrivate.FormIsCondoOrTenant" name="eliminate" />
                    </nameValues>
                  </reference>
                </section>
                <nameValues />
                <section direction="across" captionPosition="before" showCaption="none" class="x_Width200">
                  <reference idref="CoverageADwellingInput.Limit" onBlur="1" compute="1">
                    <nameValues>
                      <nameValue idref="DwellingPrivate.FormIsCondoOrTenant" name="eliminate" />
                    </nameValues>
                  </reference>
                </section>
                <section direction="across" captionPosition="before" showCaption="repeat">
                  <reference idref="DwellingOutput.AdjustedBasePremium" fldClass="x_AlignRight x_Width120" caption="$" />
                </section>
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <nameValues />
                <section direction="across" captionPosition="before" showCaption="repeat" class="x_Width240">
                  <reference idref="Spacer" caption="All-Peril Deductible" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none">
                  <widget widgetType="comparison" showCaption="repeat" widgetFormat="extended" formatMaskOverride="$???,???,???.00" idref="DwellingInput.Deductible" affectedValueRef="data.TotalPremiumWritten" onBlur="1" caption=" " restoreSession="1" selectedFormatMask=" " />
                </section>
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <nameValues />
                <section direction="across" captionPosition="before" showCaption="only" class="x_Width240">
                  <reference idref="CoverageBOtherStructuresInput.Limit" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none" class="x_Width200">
                  <reference idref="CoverageBOtherStructuresInput.Limit" onBlur="1" />
                </section>
                <section direction="across" captionPosition="before" showCaption="repeat" class="x_TextAlignRight">
                  <reference idref="CoverageBOtherStructuresOutput.Premium" caption="$" />
                </section>
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <nameValues />
                <section direction="across" captionPosition="before" showCaption="only" class="x_Width240">
                  <reference idref="CoverageCPersonalPropertyHO3Input.Limit" onBlur="1" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none" class="x_Width200">
                  <reference idref="CoverageCPersonalPropertyHO3Input.Limit" onBlur="1" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none">
                  <reference idref="CoverageCPersonalPropertyHO3OutputNonShredded.IncludedInCovAText" compute="1" />
                </section>
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <nameValues />
                <section direction="across" captionPosition="before" showCaption="only" class="x_Width240">
                  <reference idref="CoverageDLossOfUseInput.Limit" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none" class="x_Width200">
                  <reference idref="CoverageDLossOfUseInput.Limit" onBlur="1" />
                </section>
                <section direction="across" captionPosition="before" showCaption="repeat">
                  <reference idref="CoverageDLossOfUseOutput.Premium" caption="$" />
                </section>
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <nameValues />
                <section direction="across" captionPosition="before" showCaption="repeat" class="x_Width240">
                  <reference idref="Spacer" caption="Personal Liability Limit (E)" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none" class="x_Width200">
                  <widget widgetType="comparison" showCaption="repeat" widgetFormat="extended" idref="CoverageELiabilityInput.Limit" affectedValueRef="data.TotalPremiumWritten" restoreSession="1" onBlur="1" selectedFormatMask=" " />
                </section>
                <section direction="across" captionPosition="before" showCaption="repeat" fldClass="x_TextAlignRight">
                  <reference idref="CoverageELiabilityOutput.Premium" caption="$" />
                </section>
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <section direction="across" captionPosition="before" showCaption="repeat" class="x_Width240">
                  <reference idref="Spacer" caption="Medical Payments Limit (F)" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none" class="x_Width200">
                  <widget widgetType="comparison" showCaption="repeat" widgetFormat="extended" idref="CoverageFMedicalInput.Limit" affectedValueRef="data.TotalPremiumWritten" restoreSession="1" onBlur="1" selectedFormatMask=" " />
                </section>
                <section direction="across" captionPosition="before" showCaption="repeat" class="x_TextAlignRight">
                  <reference idref="CoverageFMedicalOutput.Premium" caption="$" />
                </section>
                <nameValues />
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <nameValues />
                <section direction="across" captionPosition="before" showCaption="only" class="x_Width240">
                  <reference idref="Spacer" caption="Optional Property Coverage" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none" class="x_Width200">
                  <reference idref="Spacer" />
                </section>
                <section direction="across" captionPosition="before" showCaption="repeat" class="x_TextAlignRight">
                  <reference idref="SectionICoveragesOutput.SectionIPremium" compute="1" caption="$" />
                </section>
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <nameValues />
                <section direction="across" captionPosition="before" showCaption="only" class="x_Width240">
                  <reference idref="Spacer" caption="Optional Liability Coverage" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none" class="x_Width200">
                  <reference idref="Spacer" />
                </section>
                <section direction="across" captionPosition="before" showCaption="repeat" class="x_TextAlignRight">
                  <reference idref="SectionIICoveragesOutput.SectionIIPremium" compute="1" caption="$" />
                </section>
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <nameValues />
                <section direction="across" captionPosition="before" showCaption="only" class="x_Width240">
                  <reference idref="Spacer" caption="Scheduled Personal Property" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none" class="x_Width200">
                  <reference idref="Spacer" />
                </section>
                <section direction="across" captionPosition="before" showCaption="repeat" class="x_TextAlignRight">
                  <reference idref="SPPSubtotals.SPPTotalPremium" caption="$" />
                </section>
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <nameValues />
                <section direction="across" captionPosition="before" showCaption="only" class="x_Width240">
                  <reference idref="Spacer" caption="Watercraft" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none" class="x_Width200">
                  <reference idref="Spacer" />
                </section>
                <section direction="across" captionPosition="before" showCaption="repeat" class="x_TextAlignRight">
                  <reference idref="WatercraftSubtotals.WatercraftTotalPremium" caption="$" />
                </section>
              </section>
            </section>
            <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p78DA1FADCF4D4A85AE3668C0CC74E2D94_3" caption="Coverage Calculator" cc="lightPanel" icon="calculator.png" validRef="DwellingPrivate.FormIsCondoOrTenant">
              <nameValues />
              <tableLayout direction="across" captionPosition="above" showCaption="once">
                <section direction="down" captionPosition="before" showCaption="repeat" uid="t_p78DA1FADCF4D4A85AE3668C0CC74E2D95_3" capClass="x_Width250" fldClass="x_Width200">
                  <reference idref="CoverageCPersonalPropertyHO46Input.Limit" compute="1" onBlur="1">
                    <nameValues>
                      <nameValue idref="DwellingPrivate.FormIsDwelling" name="eliminate" />
                    </nameValues>
                  </reference>
                  <reference idref="CoverageDLossOfUseInput.Limit" compute="1" onBlur="1" />
                  <reference idref="CoverageELiabilityInput.Limit" compute="1" onBlur="1" />
                  <reference idref="CoverageFMedicalInput.Limit" compute="1" onBlur="1" />
                  <nameValues />
                  <reference idref="Spacer" caption="Optional Property Coverage" />
                  <reference idref="Spacer" caption="Optional Liability Coverage" />
                  <reference idref="Spacer" caption="Scheduled Personal Property" />
                  <reference idref="Spacer" caption="Watercraft" />
                </section>
                <section direction="down" captionPosition="before" showCaption="repeat" readOnly="1" uid="t_p78DA1FADCF4D4A85AE3668C0CC74E2D9F_3" fldClass="x_Width100" capClass="x_Width5">
                  <reference idref="CoverageCPersonalPropertyHO46Output.Premium" compute="1" caption="$">
                    <nameValues>
                      <nameValue idref="DwellingPrivate.FormIsDwelling" name="eliminate" />
                    </nameValues>
                  </reference>
                  <reference idref="CoverageDLossOfUseOutput.Premium" compute="1" caption="$" />
                  <reference idref="CoverageELiabilityOutput.Premium" compute="1" caption="$" />
                  <reference idref="CoverageFMedicalOutput.Premium" compute="1" caption="$" />
                  <nameValues />
                  <reference idref="SectionICoveragesOutput.SectionIPremium" compute="1" caption="$" />
                  <reference idref="SectionIICoveragesOutput.SectionIIPremium" compute="1" caption="$" />
                  <reference idref="SPPSubtotals.SPPTotalPremium" caption="$" />
                  <reference idref="WatercraftSubtotals.WatercraftTotalPremium" caption="$" />
                </section>
              </tableLayout>
            </section>
            <section direction="across" captionPosition="before" showCaption="repeat" cc="lightPanel">
              <reference idref="AutoHomeDiscountInput.Selected" onBlur="1" capClass="x_Width350" fldClass="x_Width100" />
              <section direction="across" captionPosition="before" showCaption="repeat" validRef="AutoHomeDiscountOutput.Indicator">
                <reference idref="AutoHomeDiscountOutput.Premium" caption="$" />
              </section>
            </section>
            <section direction="down" captionPosition="before" showCaption="repeat">
              <section direction="across" captionPosition="before" showCaption="repeat">
                <reference idref="PolicyAdmin.UseDCTFormsAndMessages" onBlur="1" fldClass="x_Width50" capClass="x_Width90" />
                <action command="custom" caption="View Forms" validRef="PolicyAdmin.UseDCTFormsAndMessages">
                  <nameValues>
                    <nameValue value="previewAsyncPrintJob" name="postAction" />
                    <nameValue idref="PrintingAndForms.PrintJobNames" name="printJob" />
                    <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="printJobManuScript" />
                  </nameValues>
                </action>
              </section>
            </section>
            <section direction="across" captionPosition="above" showCaption="repeat" uid="s_p76CC320193BB42169212919040353B7843_3">
              <action command="goto" caption="Premium Detail" pageRef="RatingSummary" topic="RatingSummary">
                <nameValues>
                  <nameValue name="popUp" value="1" />
                  <nameValue value="800" name="popUpHeight" />
                </nameValues>
              </action>
              <action command="custom" caption="Rating Detail" pageRef="RatingWorksheet" topic="RatingWorksheet" validRef="CoveragePage.ShowRatingDetailButton">
                <nameValues />
              </action>
              <action command="custom" validRef="PricingPage.ShowWorksheetButton" caption="Rating Worksheet">
                <nameValues>
                  <nameValue value="printjob:Worksheet" name="PDFPage" />
                  <nameValue idref="True" name="suppressRefresh" />
                </nameValues>
              </action>
              <action command="custom" caption="Quote Letter" validRef="PolicyPrivate.IsQuote">
                <nameValues>
                  <nameValue value="printjob:Quote" name="PDFPage" />
                  <nameValue idref="True" name="suppressRefresh" />
                </nameValues>
              </action>
              <action command="custom" caption="Application" validRef="PolicyPrivate.IsApplication">
                <nameValues>
                  <nameValue value="printjob:Application" name="PDFPage" />
                  <nameValue idref="True" name="suppressRefresh" />
                </nameValues>
              </action>
              <action command="goto" caption="Side-by-Side Comparision" pageRef="Shopping" topic="Shopping">
                <nameValues>
                  <nameValue value="GenerateShopping.Value" name="preEventField" />
                </nameValues>
              </action>
            </section>
            <nameValues />
          </section>
        </group>
        <nameValues>
          <nameValue idref="CoveragePage.ReadOnly" name="readOnly" />
        </nameValues>
      </page>
      <page name="Watercraft" caption="Watercraft" pageVersion="2" prevPage="AdditionalCoverage">
        <group object="Line" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" cc="GrayPanel" caption="Watercraft" icon="anchor.png">
            <group iterMax="*" iterStep="1" object="Watercraft">
              <tableLayout direction="across" captionPosition="above" showCaption="once" cc="LightGray">
                <reference idref="WatercraftInput.Type" fldClass="x_Width150" onBlur="1" />
                <reference idref="WatercraftInput.Length" fldClass="x_Width100">
                  <nameValues>
                    <nameValue idref="True" name="removeZero" />
                  </nameValues>
                </reference>
                <reference idref="WatercraftInput.Horsepower" fldClass="x_Width110">
                  <nameValues>
                    <nameValue idref="True" name="removeZero" />
                  </nameValues>
                </reference>
                <reference idref="WatercraftInput.MilesPerHour" fldClass="x_Width110" compute="1">
                  <nameValues>
                    <nameValue idref="True" name="removeZero" />
                  </nameValues>
                </reference>
                <action command="delete" caption="Delete" validRef="LinePrivate.ShowDelete">
                  <nameValues />
                </action>
                <action command="markForDelete" caption="Delete" validRef="LinePrivate.ShowDeleteMark">
                  <nameValues />
                </action>
              </tableLayout>
              <action command="add" caption="Add Watercraft">
                <nameValues />
              </action>
            </group>
            <nameValues />
          </section>
        </group>
        <nameValues>
          <nameValue idref="AllPage.ReadOnly" name="readOnly" />
        </nameValues>
      </page>
      <page name="ScheduledPersonalProperty" caption="SPP" pageVersion="2" prevPage="Watercraft">
        <group object="Line" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" caption="Scheduled Personal Property" cc="GrayPanel" icon="camera.png">
            <group iterMax="*" iterStep="1" object="SPP">
              <tableLayout direction="across" captionPosition="above" showCaption="once" cc="LightGray">
                <reference idref="SPPInput.Type" onBlur="1" />
                <reference idref="SPPInput.Description" />
                <reference idref="SPPInput.Limit" onBlur="1">
                  <nameValues>
                    <nameValue idref="True" name="removeZero" />
                  </nameValues>
                </reference>
                <reference idref="SPPInput.Vaulted" compute="1" caption="Vltd" />
                <reference idref="SPPInput.BreakageCoverage" compute="1" caption="Bkg" />
                <reference idref="SPPInput.Blanket" compute="1" caption="Blkt" />
                <action command="delete" caption="Del" validRef="LinePrivate.ShowDelete">
                  <nameValues />
                </action>
                <action command="markForDelete" caption="Del" validRef="LinePrivate.ShowDeleteMark">
                  <nameValues />
                </action>
                <action command="specificIter" validRef="SPPPrivate.ShowApprisal" pageRef="AddAttachment" topic="AddAttachment" displayType="hyperlink" caption="Appraisal">
                  <nameValues>
                    <nameValue idref="SPPPrivate.SPPAttachIcon" name="icon" />
                    <nameValue value="loneIcon" name="type" />
                  </nameValues>
                </action>
              </tableLayout>
              <action command="add" caption="Add Item">
                <nameValues />
              </action>
            </group>
            <nameValues />
          </section>
        </group>
        <nameValues>
          <nameValue idref="AllPage.ReadOnly" name="readOnly" />
        </nameValues>
      </page>
      <page name="Underwriting" pageVersion="2.0" validRef="UnderwritingPage.Show" override="1" prevPage="AdditionalOtherInterests" caption="Underwriting">
        <group object="UnderwritingQuestions" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" caption="Additional Information" icon="book_edit.png" cc="GrayPanel">
            <section direction="down" captionPosition="before" showCaption="repeat" uid="s_l5C970B41454544308D62F2F3C6B3D1AF2_3" class="x_LongApplicationStyleQuestions">
              <section direction="down" captionPosition="before" showCaption="repeat" capClass="x_Width450" fldClass="x_Width150" cc="LightGray">
                <reference idref="UnderwritingQuestionsInput.AnyCoverageDeclinedCancelled" />
                <reference idref="UnderwritingQuestionsInput.IndictedOrConvicted" />
                <reference idref="UnderwritingQuestionsInput.ForeclosureBankruptcy" />
                <nameValues>
                  <nameValue value="Insured History" name="panelHeader" />
                </nameValues>
              </section>
              <section direction="down" captionPosition="before" showCaption="repeat" uid="s_l5C970B41454544308D62F2F3C6B3D1AF3_3" class="x_LongApplicationStyleQuestions" fldClass="x_Width150" capClass="x_Width450" cc="LightGray">
                <reference idref="UnderwritingQuestionsInput.IsBuildingUndergoingRenovation" />
                <reference idref="UnderwritingQuestionsInput.IsHouseForSale" />
                <reference idref="UnderwritingQuestionsInput.IsPropertyWithin300FtOfCommercialProp" />
                <reference idref="UnderwritingQuestionsInput.IsThereATrampolineOnPremises" onBlur="1" />
                <nameValues>
                  <nameValue value="Dwelling History" name="panelHeader" />
                </nameValues>
                <reference idref="UnderwritingQuestionsInput.IsHouseInGatedCommunity" />
                <reference idref="UnderwritingQuestionsInput.IsolatedProperty" />
                <section direction="down" captionPosition="before" showCaption="repeat" class="x_LongApplicationStyleQuestions" capClass="x_Width450" fldClass="x_Width150">
                  <reference idref="UnderwritingQuestionsInput.AnyAnimalsOrExoticPets" onBlur="1" />
                  <nameValues />
                  <section direction="down" captionPosition="before" showCaption="repeat" validRef="UnderwritingQuestionsInput.AnyAnimalsOrExoticPets" class="x_LongApplicationStyleQuestions" capClass="x_Width400" fldClass="x_Width150 x_FloatRight" cc="PlainWhite">
                    <reference idref="AnimalPetSubQuestions.ViciousAnimal" />
                    <reference idref="AnimalPetSubQuestions.Reptilesamphibians" />
                    <reference idref="AnimalPetSubQuestions.LivestockSaddleAnimals" />
                    <reference idref="AnimalPetSubQuestions.IneligibleDogBreeds" />
                    <nameValues />
                  </section>
                </section>
                <section direction="down" captionPosition="before" showCaption="repeat" capClass="x_Width450" fldClass="x_Width150">
                  <nameValues />
                  <reference idref="UnderwritingQuestionsInput.SwimmingPool" compute="0" onBlur="1" />
                  <section direction="down" captionPosition="before" showCaption="repeat" validRef="UnderwritingQuestionsPrivate.IsAnySwimmingPool" cc="PlainWhite">
                    <tableLayout direction="across" captionPosition="before" showCaption="repeat" capClass="x_Width150" fldClass="x_Width150">
                      <reference idref="SwimmingPoolSubQuestions.PoolType" />
                      <reference idref="SwimmingPoolSubQuestions.ApprovedFence" />
                    </tableLayout>
                    <tableLayout direction="across" captionPosition="before" showCaption="repeat" capClass="x_Width150" fldClass="x_Width150">
                      <reference idref="SwimmingPoolSubQuestions.DivingBoard" />
                      <reference idref="SwimmingPoolSubQuestions.Slide" />
                    </tableLayout>
                    <nameValues />
                  </section>
                </section>
                <section direction="down" captionPosition="before" showCaption="repeat" uid="s_l5C970B41454544308D62F2F3C6B3D1AF34_3" capClass="x_Width450" fldClass="x_Width150">
                  <reference idref="UnderwritingQuestionsInput.AnyOtherInsurance" onBlur="1" />
                  <nameValues />
                  <section direction="down" captionPosition="before" showCaption="none" validRef="UnderwritingQuestionsPrivate.IsAnyOtherInsurance" class="x_SubQuestionStyle" uid="s_l40B86D00503646DFB18F9B72929ADA1C36_3" cc="PlainWhite">
                    <group iterMax="*" iterStep="1" object="OtherInsurancePolicies">
                      <tableLayout direction="across" captionPosition="above" showCaption="once">
                        <reference idref="OtherInsurancePolicies.PolicyNumber" caption=" " />
                        <action command="delete" caption="Delete">
                          <nameValues />
                        </action>
                      </tableLayout>
                      <action command="add" caption="Add another policy">
                        <nameValues />
                      </action>
                    </group>
                    <nameValues />
                  </section>
                </section>
                <section direction="down" captionPosition="before" showCaption="repeat" uid="s_l5C970B41454544308D62F2F3C6B3D1AF3C_3" capClass="x_Width450" fldClass="x_Width150">
                  <reference idref="UnderwritingQuestionsInput.AnyBusinessConducted" onBlur="1">
                    <nameValues />
                  </reference>
                  <nameValues />
                  <section direction="down" captionPosition="before" showCaption="repeat" validRef="UnderwritingQuestionsPrivate.IsAnyBusinessConducted" class="x_SubQuestionStyle" uid="s_l40B86D00503646DFB18F9B72929ADA1C3E_3" capClass="x_Width400" fldClass="x_Width150" cc="PlainWhite">
                    <reference idref="BusinessSubQuestions.BusinessConductedTypeOfBusiness">
                      <nameValues />
                    </reference>
                    <reference idref="BusinessSubQuestions.BusinessConductedOwnership">
                      <nameValues />
                    </reference>
                    <reference idref="BusinessSubQuestions.BusinessConductedLocation">
                      <nameValues />
                    </reference>
                    <reference idref="BusinessSubQuestions.BusinessConductedCustomers">
                      <nameValues />
                    </reference>
                    <reference idref="BusinessSubQuestions.BusinessConductedNonResidentEmployees">
                      <nameValues />
                    </reference>
                    <reference idref="BusinessSubQuestions.BusinessConductedCommercialCoverageInForce">
                      <nameValues />
                    </reference>
                    <nameValues />
                  </section>
                </section>
              </section>
            </section>
            <nameValues />
          </section>
        </group>
        <nameValues>
          <nameValue idref="UnderwritingPage.ReadOnly" name="readOnly" />
        </nameValues>
      </page>
      <page pageVersion="2.0" name="Account" caption="Applicant" prevPage="" validRef="AccountPage.Show" override="1">
        <group object="Account" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat">
            <section direction="down" captionPosition="before" showCaption="repeat">
              <section direction="down" captionPosition="before" showCaption="repeat">
                <nameValues />
                <section direction="down" captionPosition="before" showCaption="repeat" cc="GrayPanel">
                  <section direction="across" captionPosition="above" showCaption="repeat">
                    <reference idref="AccountInput.FirstName" capClass="x_Width125" fldClass="x_Width125" />
                    <reference idref="AccountInput.MiddleName" caption="MI" fldClass="x_MiddleInitialField x_Width50" capClass="x_Width50" />
                    <reference idref="AccountInput.LastName" capClass="x_Width125" fldClass="x_Width125" />
                    <reference idref="AccountInput.Suffix" />
                    <action command="custom" validRef="AccountPage.ManualPartySearch_Show" displayType="hyperlink">
                      <nameValues>
                        <nameValue value="partyStart:partySearch" name="postAction" />
                        <nameValue value="Party Search" name="popUpTitle" />
                        <nameValue value="800" name="popUpWidth" />
                        <nameValue value="600" name="popUpHeight" />
                        <nameValue value="loneIcon" name="type" />
                        <nameValue value="magnifier.png" name="icon" />
                        <nameValue value="Search" name="qtip" />
                        <nameValue value="1" name="_performStoreData" />
                        <nameValue value="1" name="popUp" />
                        <nameValue value="1" name="hideCloseButton" />
                        <nameValue value="partyAttach" name="PartyReturnAction" />
                        <nameValue value="AccountPrivate.PartyImportAccountEmail" name="FieldsToExecuteOnSelect" />
                      </nameValues>
                    </action>
                    <action command="custom" validRef="AccountPage.AutomaticPartySearch_Show" displayType="hyperlink">
                      <nameValues>
                        <nameValue value="partyStart:searchResults" name="postAction" />
                        <nameValue value="Auto Search" name="popUpTitle" />
                        <nameValue value="800" name="popUpWidth" />
                        <nameValue value="500" name="popUpHeight" />
                        <nameValue value="1" name="_performStoreData" />
                        <nameValue value="_partyReturnAction,partyAttach,_mappingId,PartySearch" name="ExpressActionParameters" />
                        <nameValue value="loneIcon" name="type" />
                        <nameValue value="magnifier.png" name="icon" />
                        <nameValue value="Search" name="qtip" />
                        <nameValue value="1" name="popUp" />
                        <nameValue value="1" name="hideCloseButton" />
                      </nameValues>
                    </action>
                    <action command="custom" caption="Add co-applicant" validRef="False">
                      <nameValues />
                      <request verb="ManuScript.addObjectRecordRq">
                        <nameValues>
                          <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                          <nameValue value="Person" name="objectID" dataType="attribute" />
                        </nameValues>
                      </request>
                    </action>
                    <nameValues />
                  </section>
                  <section direction="across" captionPosition="before" showCaption="repeat" capClass="x_Width90" fldClass="x_Width90">
                    <reference idref="PersonInput.BirthDate" />
                    <reference idref="PersonInput.SSN" />
                  </section>
                  <section direction="across" captionPosition="before" showCaption="repeat" capClass="x_Width90" fldClass="x_Width90">
                    <reference idref="PersonInput.MaritalStatus" />
                    <reference idref="PersonInput.Occupation" />
                  </section>
                  <section direction="across" captionPosition="before" showCaption="repeat" capClass="x_Width125" fldClass="x_Width90">
                    <reference idref="AccountInput.PrimaryPhone" caption="Primary Phone" />
                    <reference idref="AccountInput.PrimaryPhoneType" />
                    <reference idref="PersonInput.WorkPhone" />
                  </section>
                  <section direction="across" captionPosition="before" showCaption="repeat">
                    <reference idref="AccountInput.Email" />
                    <reference idref="AccountInput.EmailNotRequired" onBlur="1" />
                  </section>
                  <section direction="down" captionPosition="before" showCaption="repeat">
                    <section direction="down" captionPosition="before" showCaption="repeat" cc="GrayPanel">
                      <section direction="down" captionPosition="before" showCaption="repeat" capClass="x_Width90">
                        <reference idref="AccountInput.Address1" onBlur="1">
                          <nameValues>
                            <nameValue idref="Geocode.AddressReadOnly" name="readOnly" />
                          </nameValues>
                        </reference>
                        <reference idref="AccountInput.Address2">
                          <nameValues>
                            <nameValue idref="Geocode.AddressReadOnly" name="readOnly" />
                          </nameValues>
                        </reference>
                      </section>
                      <section direction="across" captionPosition="above" showCaption="repeat">
                        <reference idref="AccountInput.City" caption="City:">
                          <nameValues>
                            <nameValue idref="Geocode.AddressReadOnly" name="readOnly" />
                          </nameValues>
                        </reference>
                        <reference idref="AccountInput.State" onBlur="1">
                          <nameValues>
                            <nameValue idref="Geocode.AddressReadOnly" name="readOnly" />
                          </nameValues>
                        </reference>
                        <reference idref="AccountInput.ZipCode" onBlur="1">
                          <nameValues>
                            <nameValue idref="Geocode.AddressReadOnly" name="readOnly" />
                          </nameValues>
                        </reference>
                        <reference idref="AccountInput.County" compute="1">
                          <nameValues />
                        </reference>
                        <section direction="across" captionPosition="above" showCaption="repeat" validRef="Geocode.IsVerified">
                          <reference idref="AccountPBBI.Latitude" />
                          <reference idref="AccountPBBI.Longitude" />
                          <reference idref="Geocode.Confidence" />
                        </section>
                        <tableLayout direction="down" captionPosition="before" showCaption="none" validRef="PitneyBowesOutput.GeocodingEnabled" caption="Geocoding Status">
                          <section direction="across" captionPosition="before" showCaption="repeat" class="x_Width600">
                            <reference idref="Geocode.GeocodeStatusDisplay" compute="1" />
                            <action command="custom" caption="Verify" pageRef="GeocodeResults" topic="Geocode" validRef="Geocode.ShowPBBIVerifyAddress" displayType="hyperlink">
                              <nameValues>
                                <nameValue value="integrationStart:integrationStart" name="postAction" />
                                <nameValue value="1" name="popUp" />
                                <nameValue value="Geocode Results" name="popUpTitle" />
                                <nameValue value="800" name="popUpWidth" />
                                <nameValue value="500" name="popUpHeight" />
                                <nameValue value="1" name="hideCloseButton" />
                                <nameValue value="Geocode.GeocodeRq" name="preEventField" />
                                <nameValue value="PBBI Account Geocoding" name="MappingID" />
                                <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="CallingManuScriptID" />
                                <nameValue value="Geocode.SetLastVerifiedToToday,UserInterface.StorePolicy" name="FieldsToExecuteOnSelect" />
                                <nameValue idref="False" name="IsParentPopup" />
                                <nameValue idref="AccountPrivate.ContextPath" name="ContextPath" />
                                <nameValue idref="Geocode.ManuscriptID" name="manuscript" />
                                <nameValue value="1" name="_performStoreData" />
                                <nameValue idref="AccountOutput.ID" name="ImportContextPath" />
                              </nameValues>
                            </action>
                            <action command="custom" caption="Edit verified address" validRef="Geocode.ShowPBBIEditAddress" displayType="hyperlink" preCommand="Geocode.ClearLastVerified" postCommand="UserInterface.StorePolicy" />
                            <action command="custom" caption="View Map" validRef="InteractiveMap.ShowPBBIInteractiveMapLink" displayType="hyperlink">
                              <nameValues>
                                <nameValue value="hyperlink" name="type" />
                                <nameValue value="InteractiveMap.ViewMapPreEvent" name="preEventField" />
                                <nameValue idref="InteractiveMap.JavaScript" name="actionUrl" />
                              </nameValues>
                            </action>
                          </section>
                        </tableLayout>
                      </section>
                      <nameValues>
                        <nameValue value="Property Address" name="panelHeader" />
                      </nameValues>
                    </section>
                    <nameValues />
                  </section>
                  <nameValues>
                    <nameValue value="Primary Insured" name="panelHeader" />
                  </nameValues>
                  <section direction="down" captionPosition="before" showCaption="repeat">
                    <reference idref="MailingAddressInfo.MailingAddressSame" capClass="x_Width375" onBlur="1" />
                    <section direction="down" captionPosition="before" showCaption="repeat" validRef="PersonPrivate.ShowMailingAddress" cc="GrayPanel" collapsible="1" startClosed="1">
                      <section direction="down" captionPosition="above" showCaption="repeat">
                        <reference idref="MailingAddressInfo.MailingAddress1" onBlur="1" />
                        <reference idref="MailingAddressInfo.MailingAddress2" onBlur="1" />
                      </section>
                      <section direction="across" captionPosition="above" showCaption="repeat">
                        <reference idref="MailingAddressInfo.MailingCity" onBlur="1" />
                        <reference idref="MailingAddressInfo.MailingState" onBlur="1" />
                        <reference idref="MailingAddressInfo.MailingZipcode" onBlur="1" />
                      </section>
                      <nameValues>
                        <nameValue value="Primary Insured Mailing Address" name="panelHeader" />
                        <nameValue value="Primary Insured Mailing Address" name="toggleCaption" />
                      </nameValues>
                    </section>
                  </section>
                </section>
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" validRef="AccountPrivate.CoApplicantExists">
                <group iterMax="*" iterStep="1" object="Person" restriction="AccountPrivate.NonPrimaryInsuredXPath">
                  <section direction="down" captionPosition="above" showCaption="repeat" cc="GrayPanel" startClosed="1">
                    <section direction="down" captionPosition="above" showCaption="repeat" collapsible="1" startClosed="1">
                      <section direction="across" captionPosition="above" showCaption="repeat">
                        <reference idref="PersonInput.FirstName" capClass="x_Width125" fldClass="x_Width125" />
                        <reference idref="PersonInput.MiddleName" fldClass="x_MiddleInitialField x_Width50" caption="MI" capClass="x_Width50" />
                        <reference idref="PersonInput.LastName" />
                      </section>
                      <section direction="across" captionPosition="before" showCaption="repeat" capClass="x_Width90" fldClass="x_Width90">
                        <reference idref="PersonInput.BirthDate" />
                        <reference idref="PersonInput.SSN" />
                      </section>
                      <section direction="across" captionPosition="before" showCaption="repeat" capClass="x_Width90" fldClass="x_Width90">
                        <reference idref="PersonInput.MaritalStatus" />
                        <reference idref="PersonInput.Occupation" />
                      </section>
                      <section direction="across" captionPosition="before" showCaption="repeat" capClass="x_Width90" fldClass="x_Width90">
                        <reference idref="PersonInput.WorkPhone" />
                        <reference idref="PersonInput.EmailAddress" />
                      </section>
                      <section direction="down" captionPosition="before" showCaption="repeat" capClass="x_Width90">
                        <reference idref="PersonInput.RelationToApplicant" />
                      </section>
                      <nameValues>
                        <nameValue value="Co-Applicant" name="toggleCaption" />
                      </nameValues>
                    </section>
                    <section direction="down" captionPosition="before" showCaption="repeat">
                      <reference idref="MailingAddressInfo.MailingAddressSame" capClass="x_Width375" onBlur="1" />
                      <section direction="down" captionPosition="before" showCaption="repeat" cc="GrayPanel" validRef="PersonPrivate.ShowMailingAddress" collapsible="1" startClosed="1">
                        <section direction="down" captionPosition="above" showCaption="repeat">
                          <reference idref="MailingAddressInfo.MailingAddress1" />
                          <reference idref="MailingAddressInfo.MailingAddress2" />
                        </section>
                        <section direction="across" captionPosition="above" showCaption="repeat">
                          <reference idref="MailingAddressInfo.MailingCity" />
                          <reference idref="MailingAddressInfo.MailingState" />
                          <reference idref="MailingAddressInfo.MailingZipcode" />
                        </section>
                        <nameValues>
                          <nameValue value="Co-Applicant Mailing Address" name="panelHeader" />
                          <nameValue value="Co-Applicant Mailing Address" name="toggleCaption" />
                        </nameValues>
                      </section>
                    </section>
                    <section direction="across" captionPosition="above" showCaption="repeat">
                      <action command="delete" caption="Delete Co-applicant" displayType="action">
                        <nameValues />
                      </action>
                    </section>
                    <nameValues>
                      <nameValue value="Co-Applicant" name="panelHeader" />
                      <nameValue value="Co-applicant" name="toggleCaption" />
                    </nameValues>
                  </section>
                </group>
              </section>
              <section direction="down" captionPosition="before" showCaption="repeat">
                <action command="custom" caption="Add co-applicant" validRef="AccountPage.ShowAddCoApplicantButton">
                  <nameValues />
                  <request verb="ManuScript.addObjectRecordRq">
                    <nameValues>
                      <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue value="Person" name="objectID" dataType="attribute" />
                    </nameValues>
                  </request>
                </action>
              </section>
              <nameValues />
            </section>
            <action command="custom" caption="Get Credit Score" validRef="CreditScore.UseCreditScore">
              <nameValues>
                <nameValue value="CreditScore.GetCreditScore" name="preEventField" />
              </nameValues>
            </action>
            <section direction="down" captionPosition="before" showCaption="repeat" validRef="CreditScore.Executed">
              <reference idref="Spacer" caption="Policy premium may have been adjusted based on receipt of credit score" />
            </section>
          </section>
        </group>
        <nameValues>
          <nameValue idref="AccountPage.ReadOnly" name="readOnly" />
          <nameValue value="1" name="usePartyMappings" />
          <nameValue idref="True" name="calculate" />
        </nameValues>
      </page>
      <page pageVersion="2.0" name="PolicyDetail" prevPage="Account" validRef="PolicyDetailPage.Show" caption="Policy Term" override="1">
        <group object="Policy" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat">
            <section direction="down" captionPosition="before" showCaption="none" cc="GrayPanel">
              <nameValues>
                <nameValue value="Fair Credit Reporting Act" name="panelHeader" />
              </nameValues>
              <reference idref="PolicyInput.FairCreditReportingActWording" compute="1" caption=" " fldClass="x_FontXXSmall">
                <nameValues>
                  <nameValue idref="True" name="readOnly" />
                </nameValues>
              </reference>
              <reference idref="PolicyInput.FairCreditReportingAct" caption=" " capClass="x_Width5" />
              <reference idref="PolicyInput.FairCreditReportingActPostWording" caption=" " compute="1" fldClass="x_FontXXSmall">
                <nameValues>
                  <nameValue idref="True" name="readOnly" />
                </nameValues>
              </reference>
            </section>
            <section direction="down" captionPosition="before" showCaption="repeat" cc="GrayPanel" icon="script.png">
              <reference idref="PolicyInput.Description" />
              <reference idref="PolicyInput.EffectiveDate" onBlur="1" />
              <section direction="down" captionPosition="before" showCaption="repeat" validRef="GetLatestRates.Show">
                <reference idref="Spacer" caption="The current effective date does not match with the latest rates. Would you like to get the latest version?" capClass="x_Width500">
                  <nameValues />
                </reference>
                <action command="goto" validRef="GetLatestRates.Show">
                  <nameValues>
                    <nameValue idref="GetLatestRates.Caption" name="caption" />
                    <nameValue value="GetLatestRates.Value" name="preEventField" />
                  </nameValues>
                </action>
                <nameValues>
                  <nameValue value="MinimalLightGray" name="cc" />
                </nameValues>
              </section>
              <reference idref="PolicyInput.Term" onBlur="1" />
              <reference idref="PolicyInput.ExpirationDate" compute="1" onBlur="1" />
              <nameValues>
                <nameValue value="Policy Information" name="panelHeader" />
              </nameValues>
            </section>
            <section direction="down" captionPosition="before" showCaption="repeat" capClass="x_Width450" cc="GrayPanel">
              <reference idref="PolicyInput.NumberOfLosses" />
              <reference idref="PolicyInput.PropertyCurrentlyInsured" />
              <reference idref="PolicyInput.EquippedWithStandbyGenerator" />
              <reference idref="PolicyInput.AgencyWriteAutoPolicy" />
              <reference idref="PolicyInput.BookRollover" />
              <nameValues>
                <nameValue value="Eligibility/Rating Questions" name="panelHeader" />
              </nameValues>
            </section>
          </section>
        </group>
        <nameValues>
          <nameValue idref="PolicyDetailPage.ReadOnly" name="readOnly" />
        </nameValues>
      </page>
      <page pageVersion="2.0" name="InsuranceHistory" caption="Insurance History" prevPage="Underwriting" validRef="InsuranceHistoryPage.Show" override="1">
        <group object="Policy" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" caption="Insurance History" cc="GrayPanel" icon="report.png">
            <reference idref="Spacer" caption="Please list prior insurance" capClass="x_FontCaption" />
            <group iterMax="*" iterStep="1" object="PriorInsurance">
              <grid direction="across" captionPosition="above" showCaption="once" capClass="x_Bold" readOnly="1">
                <reference idref="PriorInsurance.CarrierName">
                  <nameValues>
                    <nameValue value="250" name="columnWidth" />
                  </nameValues>
                </reference>
                <reference idref="PriorInsurance.EffectiveDate" />
                <reference idref="PriorInsurance.ExpirationDate" />
                <reference idref="PriorInsurance.Limit" />
                <reference idref="PriorInsurance.Deductible" />
                <nameValues />
                <action command="specificIter" caption="Detail" pageRef="PriorInsuranceDetail" topic="PriorInsuranceDetail">
                  <nameValues>
                    <nameValue value="1" name="popUp" />
                    <nameValue value="50" name="columnWidth" />
                  </nameValues>
                </action>
                <action command="delete" caption="Delete">
                  <nameValues>
                    <nameValue value="50" name="columnWidth" />
                  </nameValues>
                </action>
              </grid>
              <action command="add" caption="Add Carrier" validRef="LockPolicy.False" pageRef="PriorInsuranceDetail" topic="PriorInsuranceDetail">
                <nameValues>
                  <nameValue value="1" name="popUp" />
                  <nameValue value="1" name="hideCloseButton" />
                </nameValues>
              </action>
            </group>
            <nameValues />
          </section>
        </group>
        <nameValues>
          <nameValue idref="InsuranceHistoryPage.ReadOnly" name="readOnly" />
        </nameValues>
      </page>
      <page name="Pricing" pageVersion="2.0" caption="Pricing" calculate="2" idref="ExecutePremiums.Value" validRef="PricingPage.Show" worksheet="PricingPage.IncludeWorksheetData" override="1" prevPage="Coverage">
        <group object="Policy" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="once" cc="GrayPanel" icon="money_dollar.png" caption="Pricing">
            <section direction="down" captionPosition="before" showCaption="repeat">
              <action command="custom" validRef="PricingPage.ShowWorksheetButton" caption="Rating Worksheet">
                <nameValues>
                  <nameValue value="printjob:Worksheet" name="PDFPage" />
                  <nameValue idref="True" name="suppressRefresh" />
                </nameValues>
              </action>
              <action command="custom" caption="Quote Letter" validRef="PolicyPrivate.IsQuote">
                <nameValues>
                  <nameValue value="printjob:Quote" name="PDFPage" />
                  <nameValue idref="True" name="suppressRefresh" />
                </nameValues>
              </action>
              <action command="custom" caption="Application" validRef="PolicyPrivate.IsApplication">
                <nameValues>
                  <nameValue value="printjob:Application" name="PDFPage" />
                  <nameValue idref="True" name="suppressRefresh" />
                </nameValues>
              </action>
            </section>
            <section direction="down" captionPosition="before" showCaption="repeat">
              <tableLayout direction="across" captionPosition="before" showCaption="repeat">
                <reference idref="PolicyAdmin.UseDCTFormsAndMessages" onBlur="1" fldClass="x_Width50" capClass="x_Width90" />
                <action command="custom" caption="View Forms" validRef="PolicyAdmin.UseDCTFormsAndMessages">
                  <nameValues>
                    <nameValue value="previewAsyncPrintJob" name="postAction" />
                    <nameValue idref="PrintingAndForms.PrintJobNames" name="printJob" />
                    <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="printJobManuScript" />
                  </nameValues>
                </action>
              </tableLayout>
            </section>
            <section direction="across" captionPosition="above" showCaption="repeat" cc="lightpanel" fldClass="x_Width140">
              <reference idref="PolicyPremiums.Premium" caption="Premium" />
              <reference idref="PolicyPremiums.PremiumChange" caption="Premium Change" />
              <reference idref="PolicyPremiums.PremiumPrior" compute="0" />
              <reference idref="PolicyPremiums.PremiumWritten" caption="Premium Written" />
              <nameValues />
            </section>
            <nameValues />
          </section>
        </group>
        <nameValues>
          <nameValue idref="PricingPage.ReadOnly" name="readOnly" />
          <nameValue idref="True" name="calculate" />
        </nameValues>
      </page>
    </topic>
    <topic name="AdditionalResidence">
      <page name="AdditionalResidence" caption="Additional Residence" pageVersion="2.0">
        <group iterMax="*" iterStep="1" object="Risk">
          <section direction="down" captionPosition="before" showCaption="repeat" cc="DriverPanel">
            <group object="AdditionalResidence" iterMax="*" iterStep="1">
              <tableLayout direction="across" captionPosition="above" showCaption="once" cc="LightGray" capClass="x_Width150">
                <reference idref="AdditionalResidenceInput.OccupantType" />
                <reference idref="AdditionalResidenceInput.NumberOfFamilies" />
                <reference idref="IncidentalOccupancyInput.Indicator" />
                <action command="delete" validRef="LinePrivate.ShowDelete" caption="Delete">
                  <nameValues />
                </action>
                <action command="markForDelete" caption="Delete" validRef="LinePrivate.ShowDeleteMark">
                  <nameValues />
                </action>
              </tableLayout>
              <action command="add" caption="Add Additional Residence" validRef="AllPage.NotReadOnly">
                <nameValues />
              </action>
              <action command="goto" pageRef="AdditionalCoverage" topic="MainInterview" caption="OK">
                <nameValues>
                  <nameValue value="2" name="popUp" />
                </nameValues>
              </action>
            </group>
            <nameValues />
          </section>
        </group>
        <nameValues>
          <nameValue idref="True" name="noHeader" />
          <nameValue idref="AllPage.ReadOnly" name="readOnly" />
          <nameValue idref="True" name="popUp" />
        </nameValues>
      </page>
    </topic>
    <topic name="BusinessPursuits">
      <page name="BusinessPursuits" caption="Business Pursuits" pageVersion="2.0">
        <group object="Risk" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" capClass="x_Width350" class="x_Width600" cc="DriverPanel">
            <reference idref="BusinessPursuitsOutputNonShredded.PageColumnHeading" compute="1" capClass="x_Bold" fldClass="x_Bold" />
            <reference idref="BusinessPursuitsInput.NumberOfClerical" />
            <reference idref="BusinessPursuitsInput.NumberOfSalesNoService" />
            <reference idref="BusinessPursuitsInput.NumberOfSalesWithService" />
            <reference idref="BusinessPursuitsInput.NumberOfTeachersAthletic" />
            <reference idref="BusinessPursuitsInput.NumberOfTeachersAthleticCorporalPunishment" />
            <reference idref="BusinessPursuitsInput.NumberOfTeachersNOC" />
            <reference idref="BusinessPursuitsInput.NumberOfTeachersNOCCorporalPunishment" />
            <nameValues />
          </section>
          <action command="goto" pageRef="AdditionalCoverage" topic="MainInterview" caption="OK">
            <nameValues>
              <nameValue name="popUp" value="2" />
            </nameValues>
          </action>
          <action command="goto" caption="Cancel" pageRef="AdditionalCoverage" topic="MainInterview">
            <nameValues>
              <nameValue value="1" name="cancelChanges" />
              <nameValue value="2" name="popUp" />
              <nameValue value="1" name="isCancel" />
              <nameValue value="1" name="hideCloseButton" />
            </nameValues>
          </action>
        </group>
        <nameValues>
          <nameValue idref="True" name="noHeader" />
          <nameValue idref="AllPage.ReadOnly" name="readOnly" />
          <nameValue idref="True" name="popUp" />
        </nameValues>
      </page>
    </topic>
    <topic name="QuickQuote" abstract="1">
      <page pageVersion="2.0" name="QuickQuote" caption="Quick Quote" prevPage="" calculate="2" idref="QuickQuotePage.Calculate" ruleSet="" override="1">
        <group object="data" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat">
            <nameValues />
            <group iterMax="*" iterStep="1" object="Account">
              <section direction="down" captionPosition="above" showCaption="repeat">
                <section direction="down" captionPosition="before" showCaption="repeat" uid="t_a281290821C034D9E92025AA3D5A8E4207_3" collapsible="1">
                  <tableLayout direction="down" captionPosition="before" showCaption="repeat">
                    <section direction="across" captionPosition="before" showCaption="repeat" capClass="x_Width150">
                      <reference idref="AccountInput.FirstName" />
                      <action command="custom" caption="Search" displayType="hyperlink">
                        <nameValues>
                          <nameValue value="partyStart:partySearch" name="postAction" />
                          <nameValue value="1" name="popUp" />
                          <nameValue value="Party Search" name="popUpTitle" />
                          <nameValue value="800" name="popUpWidth" />
                          <nameValue value="600" name="popUpHeight" />
                          <nameValue value="1" name="hideCloseButton" />
                          <nameValue value="loneIcon" name="type" />
                          <nameValue value="magnifier.png" name="icon" />
                          <nameValue value="Search" name="qtip" />
                          <nameValue value="_partyReturnAction,partyAttach" name="ExpressActionParameters" />
                          <nameValue value="1" name="_performStoreData" />
                        </nameValues>
                      </action>
                    </section>
                    <section direction="across" captionPosition="before" showCaption="repeat" capClass="x_Width150">
                      <reference idref="AccountInput.LastName" compute="1" />
                    </section>
                    <section direction="across" captionPosition="before" showCaption="repeat" capClass="x_Width150">
                      <reference idref="AccountInput.ZipCode" />
                    </section>
                    <section direction="across" captionPosition="before" showCaption="repeat" capClass="x_Width150">
                      <reference idref="AccountInput.PrimaryPhone" />
                    </section>
                    <section direction="across" captionPosition="before" showCaption="repeat" capClass="x_Width150">
                      <reference idref="AccountInput.Email" />
                      <reference idref="AccountInput.EmailNotRequired" onBlur="1" />
                    </section>
                    <section direction="down" captionPosition="before" showCaption="repeat" capClass="x_Width150" />
                  </tableLayout>
                  <nameValues>
                    <nameValue value="Applicant Information" name="toggleCaption" />
                  </nameValues>
                </section>
                <nameValues>
                  <nameValue value="Member" name="panelHeader" />
                </nameValues>
                <nameValues />
              </section>
            </group>
            <group iterMax="*" iterStep="1" object="Policy">
              <section direction="down" captionPosition="before" showCaption="repeat">
                <group iterMax="*" iterStep="1" object="Line">
                  <section direction="down" captionPosition="before" showCaption="repeat">
                    <group iterMax="*" iterStep="1" object="Risk">
                      <section direction="down" captionPosition="before" showCaption="repeat">
                        <section direction="down" captionPosition="before" showCaption="repeat" uid="t_r258BDD8531104DB69C8028AEB2698E0F14_3" collapsible="1" class="x_Width630">
                          <nameValues>
                            <nameValue value="Dwelling" name="toggleCaption" />
                          </nameValues>
                          <tableLayout direction="across" captionPosition="before" showCaption="repeat" readOnly="1">
                            <section direction="down" captionPosition="before" showCaption="repeat" capClass="x_Width150">
                              <reference idref="DwellingInput.Form" onBlur="1" />
                              <reference idref="CoverageADwellingInput.Limit" onBlur="1" caption="Dwelling Limit" compute="1">
                                <nameValues>
                                  <nameValue idref="DwellingPrivate.FormIsCondoOrTenant" name="eliminate" />
                                  <nameValue idref="True" name="removeZero" />
                                </nameValues>
                              </reference>
                              <reference idref="CoverageCPersonalPropertyHO46Input.Limit" compute="1" onBlur="1" caption="Personal Property Limit">
                                <nameValues>
                                  <nameValue idref="DwellingPrivate.HideCoverageCLimit" name="eliminate" />
                                  <nameValue idref="True" name="removeZero" />
                                </nameValues>
                              </reference>
                              <reference idref="DwellingInput.UseType" />
                            </section>
                            <section direction="down" captionPosition="before" showCaption="repeat" capClass="x_Width150">
                              <reference idref="DwellingInput.Construction" onBlur="1" />
                              <reference idref="DwellingInput.YearBuilt" onBlur="1">
                                <nameValues>
                                  <nameValue idref="True" name="removeZero" />
                                  <nameValue idref="DwellingPrivate.FormIsCondoOrTenant" name="eliminate" />
                                </nameValues>
                              </reference>
                              <reference idref="DwellingInput.NumberOfFamilies" caption="Number of Families" onBlur="1" />
                            </section>
                          </tableLayout>
                        </section>
                        <section direction="down" captionPosition="before" showCaption="repeat" uid="s_r258BDD8531104DB69C8028AEB2698E0F1C_3" collapsible="1" class="x_Width575">
                          <nameValues>
                            <nameValue value="Coverage" name="toggleCaption" />
                          </nameValues>
                          <tableLayout direction="across" captionPosition="before" showCaption="repeat">
                            <section direction="down" captionPosition="before" showCaption="repeat" capClass="x_Width150">
                              <reference idref="LineInput.CoveragePackage" onBlur="1" compute="1" />
                            </section>
                          </tableLayout>
                          <tableLayout direction="across" captionPosition="before" showCaption="repeat" readOnly="1" uid="t_r258BDD8531104DB69C8028AEB2698E0F1E_3">
                            <section direction="down" captionPosition="before" showCaption="repeat" capClass="x_Width150" readOnly="1">
                              <reference idref="CoverageELiabilityInput.Limit" caption="Liability Limit" />
                              <reference idref="CoverageFMedicalInput.Limit" caption="Medical Limit" />
                              <reference idref="DwellingInput.Deductible" />
                              <reference idref="CreditCardInput.Limit" caption="Credit Card" />
                              <reference idref="RefrigeratedPersonalPropertyInput.Indicator" caption="Refrigerated Property Coverage" />
                            </section>
                            <section direction="down" captionPosition="before" showCaption="repeat" readOnly="1">
                              <reference idref="ReplacementCostContentsInput.Indicator" caption="Rep. Cost - Contents">
                                <nameValues>
                                  <nameValue idref="True" name="eliminate" />
                                </nameValues>
                              </reference>
                              <reference idref="ReplacementCostDwellingInput.Indicator" caption="Repl. Cost - Dwelling">
                                <nameValues>
                                  <nameValue idref="True" name="eliminate" />
                                </nameValues>
                              </reference>
                            </section>
                            <nameValues />
                          </tableLayout>
                        </section>
                        <section direction="down" captionPosition="before" showCaption="repeat" capClass="x_Width350" collapsible="1">
                          <nameValues>
                            <nameValue value="Discounts" name="toggleCaption" />
                          </nameValues>
                          <reference idref="AutoHomeDiscountInput.Selected" onBlur="1" />
                        </section>
                      </section>
                    </group>
                  </section>
                </group>
              </section>
            </group>
            <section direction="down" captionPosition="before" showCaption="repeat" readOnly="1" uid="s_d3AE5E004F38549AC97B065D971C709EA28_3" class="x_ShortApplicationStyleQuestions" capClass="x_Italic x_Bold x_Width350 x_FontLarge" fldClass="x_Italic x_Bold x_FontLarge" collapsible="1">
              <reference idref="data.TotalPremium" caption="Your premium could be as low as:">
                <nameValues />
              </reference>
              <nameValues>
                <nameValue value="Quote" name="toggleCaption" />
              </nameValues>
            </section>
          </section>
        </group>
        <nameValues>
          <nameValue idref="True" name="calculate" />
          <nameValue value="1" name="usePartyMappings" />
        </nameValues>
      </page>
    </topic>
    <topic name="RatingSummary">
      <page name="RatingSummary" caption="Rating Summary" pageVersion="2.0" ruleSet="" prevPage="">
        <group object="Line" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" cc="GrayPanel">
            <group iterMax="*" iterStep="1" object="Risk">
              <section direction="down" captionPosition="before" showCaption="repeat" class="x_PaddingAbove">
                <section direction="down" captionPosition="before" caption="Basic Premiums" readOnly="1" validRef="DwellingPrivate.FormIsDwelling" showCaption="repeat" uid="t_r258BDD8531104DB69C8028AEB2698E0F4_1" capClass="x_Width400" fldClass="x_AlignRight x_Width100">
                  <reference idref="DwellingOutput.AdjustedBasePremium" caption="Dwelling (A) Premium" />
                  <reference idref="CoverageBOtherStructuresOutput.Premium" />
                  <reference idref="CoverageCPersonalPropertyHO3Output.Amount" />
                  <reference idref="CoverageDLossOfUseOutput.Premium" />
                  <reference idref="CoverageELiabilityOutput.Premium" />
                  <reference idref="CoverageFMedicalOutput.Premium" />
                  <nameValues />
                  <reference idref="AutoHomeDiscountOutput.Premium" />
                </section>
                <section direction="down" captionPosition="before" caption="Basic Premiums" readOnly="1" validRef="DwellingPrivate.FormIsCondoOrTenant" showCaption="repeat" capClass="x_Width400" fldClass="x_AlignRight x_Width100">
                  <reference idref="DwellingOutput.AdjustedBasePremium" caption="Personal Property (C) Premium" />
                  <reference idref="CoverageDLossOfUseOutput.Premium" />
                  <reference idref="CoverageELiabilityOutput.Premium" />
                  <reference idref="CoverageFMedicalOutput.Premium" />
                  <reference idref="AutoHomeDiscountOutput.Premium" />
                </section>
                <section direction="down" captionPosition="before" readOnly="1" showCaption="repeat" uid="t_r258BDD8531104DB69C8028AEB2698E0F11_1" capClass="x_Width400" fldClass="x_AlignRight x_Width100" collapsible="1" startClosed="1" contentBorder="hide" contentFrame="hide" contentCollapsible="1">
                  <reference idref="AdditionsAlterationsOutput.Premium" />
                  <reference idref="BusinessPropertyOutput.Premium" />
                  <reference idref="CreditCardOutput.Premium" />
                  <reference idref="EarthquakeOutput.Premium" />
                  <reference idref="IdentityFraudExpenseCoverageOutput.Premium" />
                  <reference idref="InflationGuardOutput.Amount" caption="Inflation Guard (Included In Base)" capClass="x_Italic" fldClass="x_Italic" />
                  <reference idref="LossAssessmentOutput.Premium" />
                  <reference idref="OtherStructuresRentedToOthersOutput.Premium" />
                  <reference idref="PermittedIncidentalOccupancyOtherStructuresOutput.Premium" />
                  <reference idref="PersonalPropertyOtherResidenceOutput.Premium" />
                  <reference idref="RefrigeratedPersonalPropertyOutput.Premium" />
                  <reference idref="ReplacementCostContentsOutput.Amount" caption="Replacement Cost Contents (Included in Base)" capClass="x_Italic" fldClass="x_Italic" />
                  <reference idref="ReplacementCostDwellingOutput.Premium" />
                  <reference idref="SpecialComputerCoverageOutput.Premium" />
                  <reference idref="SpecialPersonalPropertyCoverageOutput.Amount" caption="Special Pers Prop / Unit Owners Cov C Special (Included in Base)" capClass="x_Italic" />
                  <reference idref="UnitsRegularlyRentedToOthersOutput.Premium" />
                  <reference idref="UnscheduledElectronicApparatusOutput.Premium" />
                  <reference idref="UnscheduledJewelryOutput.Premium" />
                  <reference idref="UnscheduledMoneyOutput.Premium" />
                  <reference idref="UnscheduledSecuritiesOutput.Premium" />
                  <reference idref="UnscheduledSilverwareOutput.Premium" />
                  <reference idref="WaterBackupAndSumpOverflowOutput.Premium" />
                  <reference idref="WaterBackupOfSewersOrDrainsOutput.Premium" />
                  <reference idref="WatercraftBlanketHullCoverageOutput.Premium" />
                  <nameValues>
                    <nameValue value="Policy Coverages" name="toggleCaption" />
                  </nameValues>
                  <reference idref="CarportsPoolCagesOutput.Premium" />
                  <reference idref="OrdinanceOrLawOutput.Premium" />
                  <reference idref="LimitedFungiBacteriaOutput.Premium" />
                </section>
                <section direction="down" captionPosition="before" readOnly="1" showCaption="repeat" uid="t_r258BDD8531104DB69C8028AEB2698E0F2A_1" capClass="x_Width400" fldClass="x_AlignRight x_Width100" collapsible="1" startClosed="1">
                  <reference idref="AdditionalResidenceSummaryOutput.IncidentalOccupancyAccumulatedTotal" />
                  <reference idref="AdditionalResidenceSummaryOutput.OwnerOccupiedAccumulatedTotal" />
                  <reference idref="AdditionalResidenceSummaryOutput.RentedToOthersAccumulatedTotal" />
                  <reference idref="BusinessPursuitsOutput.Premium" />
                  <reference idref="IncidentalFarmingPersonalLiabilityOutput.Premium" />
                  <reference idref="PersonalInjuryOutput.Premium" />
                  <reference idref="ResidenceEmployeesOutput.Premium" />
                  <nameValues>
                    <nameValue value="Liability Coverages" name="toggleCaption" />
                  </nameValues>
                </section>
                <nameValues />
              </section>
            </group>
            <section direction="down" captionPosition="before" showCaption="repeat" collapsible="1" startClosed="1" validRef="LinePrivate.ShowSPPSummary">
              <group iterMax="*" iterStep="1" object="SPP">
                <section direction="down" captionPosition="before" showCaption="repeat">
                  <section direction="across" captionPosition="before" readOnly="1" showCaption="none" uid="t_r258BDD8531104DB69C8028AEB2698E0F2A_1">
                    <reference idref="SPPOutput.SummaryDescription" fldClass="x_Width400" compute="1" />
                    <reference idref="SPPCoverageOutput.Premium" fldClass="x_AlignRight x_Width100" />
                  </section>
                </section>
              </group>
              <nameValues>
                <nameValue value="Scheduled Personal Property" name="toggleCaption" />
              </nameValues>
            </section>
            <nameValues />
            <section direction="down" captionPosition="before" showCaption="repeat" collapsible="1" startClosed="1" validRef="LinePrivate.ShowWatercraftSummary">
              <group iterMax="*" iterStep="1" object="Watercraft">
                <section direction="down" captionPosition="before" showCaption="repeat">
                  <section direction="across" captionPosition="before" readOnly="1" showCaption="none" uid="t_r258BDD8531104DB69C8028AEB2698E0F2A_1">
                    <reference idref="WatercraftOutput.SummaryDescription" fldClass="x_Width400" compute="1" />
                    <reference idref="WatercraftCoverageOutput.Premium" fldClass="x_AlignRight x_Width100" />
                  </section>
                </section>
              </group>
              <nameValues>
                <nameValue value="Watercraft" name="toggleCaption" />
              </nameValues>
            </section>
          </section>
          <action command="goto" topic="MainInterview" caption="OK" pageRef="Coverage">
            <nameValues>
              <nameValue name="popUp" value="2" />
            </nameValues>
          </action>
        </group>
        <nameValues>
          <nameValue idref="AllPage.ReadOnly" name="readOnly" />
          <nameValue idref="True" name="noHeader" />
          <nameValue idref="True" name="popUp" />
        </nameValues>
      </page>
    </topic>
    <topic name="ChangeSummary" abstract="1">
      <page name="ChangeSummary" caption="Change Summary" pageVersion="2.0" override="1" prevPage="">
        <group object="data" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="once">
            <reference idref="AccountInput.City" />
            <reference idref="AccountInput.State" />
            <reference idref="AccountInput.County" />
            <reference idref="LineInput.Tier" />
            <reference idref="LocationInput.City" />
            <reference idref="LocationInput.State" />
            <reference idref="LocationInput.County" />
            <reference idref="LocationInput.ZipCode" />
            <reference idref="LinePremiums.PremiumWritten" />
            <reference idref="RiskTotalPremiums.PremiumWritten" />
            <reference idref="SPPSubtotals.SPPTotalPremiumWritten" />
            <reference idref="WatercraftSubtotals.WatercraftTotalPremiumWritten" />
          </section>
        </group>
      </page>
      <page name="RiskChanges" caption="Risk Changes" pageVersion="2">
        <group object="Risk" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat">
            <reference idref="DwellingInput.BuildingType" />
            <reference idref="DwellingInput.BurglarAlarm" />
            <reference idref="DwellingInput.Construction" />
            <reference idref="DwellingInput.Deductible" />
            <reference idref="DwellingInput.FireAlarm" />
            <reference idref="DwellingInput.Form" />
            <reference idref="DwellingInput.NumberOfFamilies" />
            <reference idref="DwellingInput.NumberOfUnits" />
            <reference idref="DwellingInput.OccupancyType" />
            <reference idref="DwellingInput.RatedProtectionClass" />
            <reference idref="DwellingInput.RoofingMaterial" />
            <reference idref="DwellingInput.Sprinkler" />
            <reference idref="DwellingInput.SupplementalHeatType" />
            <reference idref="DwellingInput.UnderConstruction" />
            <reference idref="DwellingInput.UseType" />
            <reference idref="DwellingInput.YearBuilt" />
            <reference idref="AdditionalResidenceInput.NumberOfFamilies" />
            <reference idref="AdditionalResidenceInput.OccupantType" />
            <reference idref="AutoHomeDiscountInput.Selected" />
            <reference idref="CoverageADwellingInput.Limit" />
            <reference idref="CoverageADwellingOutput.PremiumWritten" />
            <reference idref="CoverageBOtherStructuresInput.Limit" />
            <reference idref="CoverageBOtherStructuresOutput.PremiumWritten" />
            <reference idref="CoverageCPersonalPropertyHO3Input.Limit" />
            <reference idref="CoverageCPersonalPropertyHO3Output.PremiumWritten" />
            <reference idref="CoverageCPersonalPropertyHO46Input.Limit" />
            <reference idref="CoverageCPersonalPropertyHO46Output.PremiumWritten" />
            <reference idref="CoverageDLossOfUseInput.Limit" />
            <reference idref="CoverageDLossOfUseOutput.PremiumWritten" />
            <reference idref="CoverageELiabilityInput.Limit" />
            <reference idref="CoverageELiabilityOutput.PremiumWritten" />
            <reference idref="CoverageFMedicalInput.Limit" />
            <reference idref="CoverageFMedicalOutput.PremiumWritten" />
            <reference idref="SectionICoveragesOutput.SectionIPremiumWritten" />
            <reference idref="SectionIICoveragesOutput.SectionIIPremiumWritten" />
            <reference idref="FireResistiveDiscountInput.Indicator" />
            <reference idref="LossSurchargeInput.Indicator" />
            <reference idref="AdditionsAlterationsInput.Type" />
            <reference idref="AdditionsAlterationsInput.Limit" />
            <reference idref="BusinessPropertyInput.Limit" />
            <reference idref="CreditCardInput.Limit" />
            <reference idref="EarthquakeInput.Deductible" />
            <reference idref="EarthquakeInput.LossAssessmentLimit" />
            <reference idref="IdentityFraudExpenseCoverageInput.Limit" />
            <reference idref="InflationGuardInput.Indicator" />
            <reference idref="LossAssessmentInput.Limit" />
            <reference idref="OtherStructuresRentedToOthersInput.Limit" />
            <reference idref="PermittedIncidentalOccupancyOtherStructuresInput.Limit" />
            <reference idref="PersonalPropertyOtherResidenceInput.Limit" />
            <reference idref="RefrigeratedPersonalPropertyInput.Limit" />
            <reference idref="ReplacementCostContentsInput.Indicator" />
            <reference idref="ReplacementCostDwellingInput.Indicator" />
            <reference idref="ReplacementCostDwellingInput.ReplacementCostValue" />
            <reference idref="SpecialComputerCoverageInput.Indicator" />
            <reference idref="UnitsRegularlyRentedToOthersInput.Indicator" />
            <reference idref="UnscheduledElectronicApparatusInput.Limit" />
            <reference idref="UnscheduledGunsInput.Limit" />
            <reference idref="UnscheduledJewelryInput.Limit" />
            <reference idref="UnscheduledMoneyInput.Limit" />
            <reference idref="UnscheduledSecuritiesInput.Limit" />
            <reference idref="UnscheduledSilverwareInput.Limit" />
            <reference idref="WaterBackupAndSumpOverflowInput.Limit" />
            <reference idref="WaterBackupOfSewersOrDrainsInput.Limit" />
            <reference idref="WatercraftBlanketHullCoverageInput.Limit" />
            <reference idref="BusinessPursuitsInput.NumberOfClerical" />
            <reference idref="BusinessPursuitsInput.NumberOfSalesNoService" />
            <reference idref="BusinessPursuitsInput.NumberOfSalesWithService" />
            <reference idref="BusinessPursuitsInput.NumberOfTeachersAthletic" />
            <reference idref="BusinessPursuitsInput.NumberOfTeachersAthleticCorporalPunishment" />
            <reference idref="BusinessPursuitsInput.NumberOfTeachersNOC" />
            <reference idref="BusinessPursuitsInput.NumberOfTeachersNOCCorporalPunishment" />
            <reference idref="IncidentalFarmingPersonalLiabilityInput.Limit" />
            <reference idref="IncidentalFarmingPersonalLiabilityInput.Type" />
            <reference idref="PersonalInjuryInput.Limit" />
            <reference idref="ResidenceEmployeesInput.NumberOfEmployees" />
            <reference idref="SpecialPersonalPropertyCoverageInput.Indicator" />
          </section>
        </group>
      </page>
      <page name="SPPChanges" caption="S P P Changes" pageVersion="2">
        <group object="SPP" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat">
            <reference idref="SPPInput.Type" />
            <reference idref="SPPInput.Limit" />
            <reference idref="SPPInput.Vaulted" />
            <reference idref="SPPInput.Blanket" />
            <reference idref="SPPInput.BreakageCoverage" />
            <reference idref="SPPCoverageOutput.PremiumWritten" />
          </section>
        </group>
      </page>
      <page name="WatercraftChanges" caption="Watercraft Changes" pageVersion="2">
        <group object="Watercraft" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat">
            <reference idref="WatercraftInput.Type" />
            <reference idref="WatercraftInput.Horsepower" />
            <reference idref="WatercraftInput.Length" />
            <reference idref="WatercraftInput.MilesPerHour" />
            <reference idref="WatercraftCoverageOutput.PremiumWritten" />
          </section>
        </group>
      </page>
    </topic>
    <topic name="RatingWorksheet" caption="Rating Worksheet">
      <page name="RatingWorksheet" pageVersion="2" calculate="2" idref="ExecutePremiums.Value" worksheet="PricingPage.IncludeWorksheetData" caption="Rating Detail">
        <group object="Line" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat">
            <section direction="down" captionPosition="before" showCaption="repeat">
              <reference idref="LinePurePremiums.Premium" wsCond="True" wsSuppressRound="1" wsDepth="1" fldClass="x_Bold" caption="Total Premium" capClass="x_Bold x_FontMedium" />
            </section>
            <group iterMax="*" iterStep="1" object="Risk">
              <tableLayout direction="across" captionPosition="above" showCaption="once">
                <tableLayout direction="down" captionPosition="before" showCaption="once">
                  <group iterMax="*" iterStep="1" object="CoverageADwelling">
                    <section direction="down" captionPosition="before" showCaption="none" collapsible="1">
                      <reference idref="CoverageADwellingOutput.Premium" wsCond="True" wsSuppressRound="1" wsDepth="1" />
                      <nameValues>
                        <nameValue value="Dwelling (A) Premium" name="toggleCaption" />
                      </nameValues>
                    </section>
                  </group>
                  <group iterMax="*" iterStep="1" object="CoverageBOtherStructures">
                    <section direction="across" captionPosition="above" showCaption="none" validRef="CoverageBOtherStructuresInput.Indicator" collapsible="1">
                      <reference idref="CoverageBOtherStructuresOutput.Premium" wsCond="True" wsSuppressRound="1" wsDepth="1" />
                      <nameValues>
                        <nameValue value="Other Structures (B) Premium" name="toggleCaption" />
                      </nameValues>
                    </section>
                  </group>
                  <group iterMax="*" iterStep="1" object="CoverageCPersonalPropertyHO46">
                    <section direction="across" captionPosition="above" showCaption="none" capClass="x_Bold" validRef="CoverageCPersonalPropertyHO46Input.Indicator" collapsible="1">
                      <reference idref="CoverageCPersonalPropertyHO46Output.Premium" wsCond="True" wsSuppressRound="1" wsDepth="1" />
                      <nameValues>
                        <nameValue value="Personal Property (C) Premium" name="toggleCaption" />
                      </nameValues>
                    </section>
                  </group>
                  <group iterMax="*" iterStep="1" object="CoverageDLossOfUse">
                    <section direction="across" captionPosition="above" showCaption="none" validRef="CoverageDLossOfUseInput.Indicator" collapsible="1">
                      <reference idref="CoverageDLossOfUseOutput.Premium" wsCond="True" wsSuppressRound="1" wsDepth="1" />
                      <nameValues>
                        <nameValue value="Loss of Use (D) Premium" name="toggleCaption" />
                      </nameValues>
                    </section>
                  </group>
                  <group iterMax="*" iterStep="1" object="CoverageELiability">
                    <section direction="across" captionPosition="above" showCaption="none" collapsible="1">
                      <reference idref="CoverageELiabilityOutput.Premium" wsCond="True" wsDepth="1" wsSuppressRound="1" />
                      <nameValues>
                        <nameValue value="Personal Liability (E) Premium" name="toggleCaption" />
                      </nameValues>
                    </section>
                  </group>
                  <group iterMax="*" iterStep="1" object="CoverageFMedical">
                    <section direction="across" captionPosition="above" showCaption="none" collapsible="1">
                      <reference idref="CoverageFMedicalOutput.Premium" wsCond="True" wsSuppressRound="1" wsDepth="1" />
                      <nameValues>
                        <nameValue value="Medical Payments (F) Premium" name="toggleCaption" />
                      </nameValues>
                    </section>
                  </group>
                  <group iterMax="*" iterStep="1" object="SectionICoverages">
                    <section direction="across" captionPosition="above" showCaption="none" collapsible="1">
                      <reference idref="SectionICoveragesOutput.SectionIPremium" wsCond="True" wsSuppressRound="1" wsDepth="1" />
                      <nameValues>
                        <nameValue value="Section I Premium" name="toggleCaption" />
                      </nameValues>
                    </section>
                  </group>
                  <group iterMax="*" iterStep="1" object="SectionIICoverages">
                    <section direction="across" captionPosition="above" showCaption="none" collapsible="1">
                      <reference idref="SectionIICoveragesOutput.SectionIIPremium" wsCond="True" wsSuppressRound="1" wsDepth="1" />
                      <nameValues>
                        <nameValue value="Section II Premium" name="toggleCaption" />
                      </nameValues>
                    </section>
                  </group>
                  <group iterMax="*" iterStep="1" object="AutoHomeDiscount">
                    <section direction="down" captionPosition="before" showCaption="none" validRef="AutoHomeDiscountOutput.Indicator" collapsible="1">
                      <reference idref="AutoHomeDiscountOutput.Premium" wsCond="True" wsSuppressRound="1" wsDepth="1" />
                      <nameValues>
                        <nameValue value="Auto Home Discount" name="toggleCaption" />
                      </nameValues>
                    </section>
                  </group>
                </tableLayout>
              </tableLayout>
            </group>
            <section direction="down" captionPosition="before" showCaption="repeat" validRef="LinePrivate.ShowWatercraftSummary" collapsible="1">
              <reference idref="WatercraftSubtotals.WatercraftTotalPremium" wsCond="True" wsSuppressRound="1" />
              <nameValues>
                <nameValue value="Watercraft Premium" name="toggleCaption" />
              </nameValues>
            </section>
            <section direction="down" captionPosition="before" showCaption="none" validRef="LinePrivate.ShowSPPSummary" collapsible="1">
              <reference idref="SPPSubtotals.SPPTotalPremium" wsCond="True" wsSuppressRound="1" />
              <nameValues>
                <nameValue value="SPP Premium" name="toggleCaption" />
              </nameValues>
            </section>
            <action command="goto" caption="Return" pageRef="Coverage" topic="MainInterview">
              <nameValues />
            </action>
          </section>
        </group>
        <nameValues />
      </page>
    </topic>
    <topic name="AdditionalOtherInterestDetail" abstract="1">
      <page name="AdditionalOtherInterestDetail" caption="Additional Other Interest Detail" pageVersion="2.0" override="1">
        <group object="AdditionalOtherInterest" iterMax="*" iterStep="1">
          <tableLayout direction="down" captionPosition="above" showCaption="repeat">
            <section direction="down" captionPosition="before" showCaption="repeat" capClass="x_Width80">
              <reference idref="AdditionalOtherInterestInput.InterestType" onBlur="1" />
              <section direction="down" captionPosition="before" showCaption="repeat" validRef="AdditionalOtherInterestPrivate.IsTypeOrganization">
                <reference idref="AdditionalOtherInterestInput.Type" />
                <reference idref="AdditionalOtherInterestInput.Name" />
                <reference idref="AdditionalOtherInterestInput.Address1" />
                <reference idref="AdditionalOtherInterestInput.Address2" />
                <section direction="across" captionPosition="before" showCaption="repeat">
                  <reference idref="AdditionalOtherInterestInput.City" capClass="x_Width80" />
                  <reference idref="AdditionalOtherInterestInput.State" />
                  <reference idref="AdditionalOtherInterestInput.ZipCode" />
                </section>
                <section direction="down" captionPosition="before" showCaption="repeat" capClass="x_Width80">
                  <reference idref="AdditionalOtherInterestInput.PrimaryPhone" />
                  <reference idref="AdditionalOtherInterestInput.LoanNumber" />
                </section>
                <section direction="down" captionPosition="before" showCaption="repeat" capClass="x_Width150">
                  <reference idref="AdditionalOtherInterestInput.CertificateOfInsurance" />
                </section>
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" validRef="AdditionalOtherInterestPrivate.IsTypeIndividual">
                <reference idref="AdditionalOtherInterestInput.FirstName" />
                <reference idref="AdditionalOtherInterestInput.MiddleName" />
                <reference idref="AdditionalOtherInterestInput.LastName" onBlur="1" />
                <section direction="across" captionPosition="before" showCaption="repeat">
                  <reference idref="AdditionalOtherInterestInput.City" />
                  <reference idref="AdditionalOtherInterestInput.State" />
                  <reference idref="AdditionalOtherInterestInput.ZipCode" />
                </section>
                <section direction="down" captionPosition="before" showCaption="repeat">
                  <reference idref="AdditionalOtherInterestInput.PrimaryPhone" />
                </section>
              </section>
            </section>
            <section direction="down" captionPosition="before" showCaption="repeat">
              <action command="custom" topic="MainInterview" pageRef="AdditionalOtherInterests" caption="OK">
                <nameValues>
                  <nameValue value="2" name="popUp" />
                </nameValues>
                <request verb="Session.commitTransactionRq" />
              </action>
              <action command="custom" caption="Cancel" pageRef="AdditionalOtherInterests" topic="MainInterview">
                <nameValues>
                  <nameValue value="2" name="popUp" />
                  <nameValue value="1" name="ignoreValidation" />
                </nameValues>
                <request verb="Session.rollbackTransactionRq" />
              </action>
            </section>
          </tableLayout>
        </group>
        <nameValues>
          <nameValue idref="True" name="popUp" />
          <nameValue idref="True" name="noHeader" />
          <nameValue idref="AdditionalOtherInterestsPage.ReadOnly" name="readOnly" />
        </nameValues>
      </page>
    </topic>
    <topic name="UpdatedServices" caption="Updated Services">
      <page name="UpdatedServices" caption="Updated Services" pageVersion="2" override="1">
        <group object="Dwelling" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat">
            <section direction="across" captionPosition="before" showCaption="repeat">
              <reference idref="UpdatedServicesInfo.ElectricSystemUpdateYear" capClass="x_Width270" />
              <reference idref="UpdatedServicesInfo.ElectricSystemUpdateType" capClass="x_Width150" />
            </section>
            <section direction="across" captionPosition="before" showCaption="repeat">
              <reference idref="UpdatedServicesInfo.HeatingUpdateYear" capClass="x_Width270" />
              <reference idref="UpdatedServicesInfo.HeatingUpdateType" capClass="x_Width150" />
            </section>
            <section direction="across" captionPosition="before" showCaption="repeat">
              <reference idref="UpdatedServicesInfo.PlumbingUpdateYear" capClass="x_Width270" />
              <reference idref="UpdatedServicesInfo.PlumbingUpdateType" capClass="x_Width150" />
            </section>
            <section direction="across" captionPosition="before" showCaption="repeat">
              <reference idref="UpdatedServicesInfo.RoofUpdateYear" capClass="x_Width270" />
              <reference idref="UpdatedServicesInfo.RoofUpdateType" capClass="x_Width150" />
            </section>
            <section direction="down" captionPosition="before" showCaption="repeat">
              <action command="custom" caption="Return" topic="MainInterview" pageRef="RiskSchedule">
                <nameValues>
                  <nameValue value="2" name="popUp" />
                  <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscript" />
                </nameValues>
              </action>
            </section>
          </section>
        </group>
      </page>
    </topic>
    <topic name="LossHistoryDetail" caption="Loss History Detail">
      <page name="LossHistoryDetail" caption="Loss History Detail" pageVersion="2">
        <group object="Loss" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat">
            <reference idref="LossInput.LossType" />
            <reference idref="LossInput.CategoryCode" />
            <reference idref="LossInput.DateOfLoss" />
            <reference idref="LossInput.AmountPaid" />
            <reference idref="LossInput.InDispute" />
            <reference idref="LossInput.Description" />
            <reference idref="Spacer" />
            <tableLayout direction="across" captionPosition="before" showCaption="repeat">
              <action command="custom" caption="OK" pageRef="ClaimsHistory" topic="MainInterview">
                <nameValues>
                  <nameValue value="2" name="popUp" />
                </nameValues>
              </action>
              <action command="custom" caption="Cancel" pageRef="ClaimsHistory" topic="MainInterview">
                <nameValues>
                  <nameValue value="2" name="popUp" />
                  <nameValue value="1" name="cancelChanges" />
                  <nameValue value="1" name="ignoreValidation" />
                </nameValues>
              </action>
            </tableLayout>
          </section>
        </group>
      </page>
    </topic>
    <topic name="PriorInsuranceDetail" caption="Prior Insurance Detail">
      <page name="PriorInsuranceDetail" caption="Prior Coverage Detail" pageVersion="2">
        <group object="PriorInsurance" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" captionClass="x_Width200">
            <reference idref="PriorInsurance.CarrierName" />
            <section direction="across" captionPosition="before" showCaption="repeat">
              <reference idref="PriorInsurance.EffectiveDate" capClass="x_Width215" />
              <reference idref="PriorInsurance.ExpirationDate" />
            </section>
            <reference idref="PriorInsurance.Limit" />
            <reference idref="PriorInsurance.Deductible" />
            <reference idref="PriorInsurance.InterestName" />
            <reference idref="PriorInsurance.NewBusinessPayor" />
            <reference idref="PriorInsurance.PriorPolicyNumber" />
            <reference idref="PriorInsurance.Rank" />
            <reference idref="PriorInsurance.ReferenceLoanNumber" />
            <reference idref="Spacer" />
            <section direction="across" captionPosition="before" showCaption="repeat">
              <action command="custom" caption="OK" pageRef="InsuranceHistory" topic="MainInterview">
                <nameValues>
                  <nameValue value="2" name="popUp" />
                </nameValues>
              </action>
              <action command="custom" caption="Cancel" pageRef="InsuranceHistory" topic="MainInterview">
                <nameValues>
                  <nameValue value="1" name="cancelChanges" />
                  <nameValue value="2" name="popUp" />
                  <nameValue value="1" name="isCancel" />
                </nameValues>
              </action>
            </section>
          </section>
        </group>
      </page>
    </topic>
    <topic name="AddAttachment" caption="Add Attachment">
      <page name="AddAttachment" caption="Add Attachment" pageVersion="2">
        <group object="SPP" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat">
            <reference idref="SPPInputNonShredded.AttachmentFilePath" onBlur="1" computeRef="True" compute="0">
              <nameValues>
                <nameValue idref="SPPPrivate.IsAppraisalAttached" name="eliminate" />
              </nameValues>
            </reference>
            <reference idref="SPPOutput.AppraisalAttachedMessage" compute="1" capClass="x_Width400">
              <nameValues>
                <nameValue idref="SPPPrivate.IsNotAppraisalAttached" name="eliminate" />
              </nameValues>
            </reference>
            <action command="custom" caption="Add Attachment" postCommand="SPPPrivate.UploadButtonPostActions" validRef="SPPPrivate.IsNotAppraisalAttached">
              <nameValues>
                <nameValue value="upload" name="postAction" />
              </nameValues>
            </action>
            <action command="custom" caption="Return" pageRef="ScheduledPersonalProperty" topic="MainInterview">
              <nameValues />
            </action>
          </section>
        </group>
      </page>
    </topic>
    <topic name="Shopping" caption="Shopping" ruleSet="TopNav">
      <page name="Shopping" caption="Quote Options" pageVersion="2" override="1">
        <group iterMax="*" iterStep="1" object="Risk">
          <tableLayout direction="down" captionPosition="before" showCaption="once" readOnly="1">
            <reference idref="RiskOutput.SPPMessage" caption="Note:  All SPP items are not included in the residence calculations and will be reported on the Pricing page." />
          </tableLayout>
        </group>
        <group object="Shopping" iterMax="*" iterStep="1">
          <tableLayout direction="down" captionPosition="before" showCaption="none" readOnly="1">
            <reference idref="Shopping.OptionName" fldClass="x_Bold x_TextAlignCenter x_FontMedium" />
            <tableLayout direction="down" captionPosition="before" showCaption="none" class="x_BorderLightGray">
              <tableLayout direction="across" captionPosition="before" showCaption="none" readOnly="1" applyHeader="1">
                <reference idref="Shopping.Total" fldClass="x_Bold x_TextAlignCenter x_FontMedium" compute="1" />
                <action command="custom" caption="Select" pageRef="Coverage" topic="MainInterview" actClass="x_AlignRight">
                  <nameValues />
                  <request verb="ManuScript.getValueRq">
                    <nameValues>
                      <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue idref="Shopping.ContextPath" name="context" dataType="attribute" />
                      <nameValue value="Shopping.Select" name="field" dataType="attribute" />
                    </nameValues>
                  </request>
                </action>
              </tableLayout>
              <group iterMax="*" iterStep="1" object="ShoppingRisk">
                <section direction="across" captionPosition="above" showCaption="none" readOnly="1" applyHeader="1">
                  <section direction="down" captionPosition="before" showCaption="repeat" class="x_BorderLightGray">
                    <tableLayout direction="down" captionPosition="before" showCaption="none" readOnly="1">
                      <reference idref="ShoppingRisk.Description" fldClass="x_Bold x_BackgroundLightGray x_AlignCenter" />
                    </tableLayout>
                    <tableLayout direction="down" captionPosition="before" showCaption="repeat" readOnly="1">
                      <reference idref="ShoppingRisk.DwellingLimit">
                        <nameValues />
                      </reference>
                      <reference idref="ShoppingRisk.AllPerilDeductible" onBlur="1">
                        <nameValues />
                      </reference>
                      <reference idref="ShoppingRisk.LiabilityLimit" onBlur="1">
                        <nameValues />
                      </reference>
                      <reference idref="ShoppingRisk.MedicalLimit" onBlur="1">
                        <nameValues />
                      </reference>
                      <reference idref="ShoppingRisk.Total" compute="1" />
                    </tableLayout>
                  </section>
                </section>
              </group>
            </tableLayout>
          </tableLayout>
          <action command="goto" caption="Return to Pricing" pageRef="Coverage" topic="MainInterview">
            <nameValues />
          </action>
        </group>
      </page>
    </topic>
    <topic name="PrefillReview" caption="Prefill Review">
      <page name="PrefillReview" caption="Prefill Review" pageVersion="2">
        <group object="PrefillData" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat">
            <section direction="down" captionPosition="before" showCaption="repeat" validRef="PrefillData.DwellingsWereReturned" readOnly="1">
              <section direction="across" captionPosition="above" showCaption="repeat" readOnly="1">
                <reference idref="PrefillAccount.FirstName" caption=" " />
                <reference idref="PrefillAccount.LastName" caption=" " />
              </section>
              <section direction="down" captionPosition="before" showCaption="repeat" readOnly="1" caption="Dwelling Information ">
                <reference idref="PrefillAccount.Address1" />
                <reference idref="PrefillAccount.Address2" />
                <reference idref="PrefillDwelling.SquareFeet" />
                <reference idref="PrefillDwelling.Construction" />
                <reference idref="PrefillDwelling.YearBuilt" />
                <reference idref="PrefillDwelling.Territory" />
              </section>
              <action command="goto" caption="Continue to Quick Quote" pageRef="QuickQuote" topic="QuickQuote">
                <nameValues>
                  <nameValue value="2" name="popUp" />
                </nameValues>
              </action>
            </section>
            <section direction="down" captionPosition="before" showCaption="repeat" validRef="PrefillData.DwellingsWereNotReturned">
              <reference idref="Spacer" caption="No Information Found" />
              <action command="goto" caption="Continue to Quick Quote" pageRef="QuickQuote" topic="QuickQuote" preCommand="Prefill.CopyPrefillInformation">
                <nameValues>
                  <nameValue value="2" name="popUp" />
                </nameValues>
              </action>
            </section>
          </section>
        </group>
      </page>
    </topic>
    <topic name="LossDetail" abstract="1">
    </topic>
    <topic name="Consumer" abstract="1">
      <page name="Household" caption="Your Information" pageVersion="2.0" prevPage="" validRef="AccountPage.Show" override="1">
        <group object="Account" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" caption="Please tell us about yourself">
            <section direction="down" captionPosition="before" showCaption="repeat" cc="LightPanel">
              <section direction="across" captionPosition="before" showCaption="repeat">
                <reference idref="Spacer" caption="To get the most accurate quote, we'll need to gather some information first." />
              </section>
              <section direction="down" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215">
                <reference idref="AccountInput.FirstName" caption="First Name:" fldClass="x_InputWidth215" />
                <reference idref="AccountInput.MiddleName" caption="Middle" />
                <reference idref="AccountInput.LastName" caption="Last Name:" onBlur="1">
                  <nameValues />
                </reference>
              </section>
              <section direction="down" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215">
                <reference idref="AccountInput.Address1" caption="Mailing Address:">
                  <nameValues />
                </reference>
                <reference idref="AccountInput.Address2" caption="Apt #:">
                  <nameValues />
                </reference>
                <reference idref="AccountInput.City" caption="City:">
                  <nameValues />
                </reference>
                <reference idref="AccountInput.State" caption="State:">
                  <nameValues />
                </reference>
                <reference idref="AccountInput.ZipCode" caption="Zip Code:" />
              </section>
              <section direction="down" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215">
                <reference idref="AccountInput.Email" caption="Email Address:" />
                <reference idref="AccountInput.PrimaryPhone" caption="Phone Number:" />
              </section>
              <nameValues />
              <section direction="down" captionPosition="above" showCaption="repeat" caption="When would you like your coverage to start?" fldClass="x_InputWidth215">
                <reference idref="PolicyInput.EffectiveDate" caption="Date:" />
              </section>
              <section direction="down" captionPosition="above" showCaption="none" cc="lightPanel" caption="Fair Credit Reporting Act">
                <nameValues />
                <reference idref="PolicyInput.FairCreditReportingActWording" compute="1" caption=" " fldClass="x_FontXXSmall">
                  <nameValues>
                    <nameValue idref="True" name="readOnly" />
                  </nameValues>
                </reference>
                <reference idref="PolicyInput.FairCreditReportingAct" caption=" " capClass="x_Width5" />
                <reference idref="PolicyInput.FairCreditReportingActPostWording" caption=" " compute="1" fldClass="x_FontXXSmall">
                  <nameValues>
                    <nameValue idref="True" name="readOnly" />
                  </nameValues>
                </reference>
              </section>
              <nameValues>
                <nameValue value="Member" name="panelHeader" />
              </nameValues>
              <section direction="down" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215" validRef="AccountPrivate.CoApplicantExists">
                <group iterMax="*" iterStep="1" object="Person" restriction="AccountPrivate.NonPrimaryInsuredXPath">
                  <section direction="down" captionPosition="before" showCaption="repeat" cc="lightPanel" caption="Co-Applicant">
                    <section direction="down" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215">
                      <reference idref="PersonInput.FirstName" caption="First Name:" />
                      <reference idref="PersonInput.MiddleName" caption="Middle" />
                      <reference idref="PersonInput.LastName" caption="Last Name:" onBlur="1" />
                      <reference idref="PersonInput.Address1" caption="Mailing Address:" />
                      <reference idref="PersonInput.Address2" caption="Apt #:" />
                      <reference idref="PersonInput.City" caption="City:" />
                      <reference idref="PersonInput.State" caption="State:" />
                      <reference idref="PersonInput.ZipCode" caption="Zip Code:" />
                      <reference idref="PersonInput.EmailAddress" caption="Email Address:" />
                    </section>
                    <nameValues />
                    <section direction="down" captionPosition="before" showCaption="repeat">
                      <action command="delete" caption="Delete Co-applicant" />
                    </section>
                  </section>
                </group>
                <nameValues />
              </section>
              <section direction="down" captionPosition="before" showCaption="repeat">
                <action command="custom" caption="Add co-applicant" validRef="AccountPage.ShowAddCoApplicantButton">
                  <nameValues />
                  <request verb="ManuScript.addObjectRecordRq">
                    <nameValues>
                      <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue value="Person" name="objectID" dataType="attribute" />
                    </nameValues>
                  </request>
                </action>
              </section>
            </section>
            <nameValues />
          </section>
        </group>
        <nameValues>
          <nameValue idref="AccountPage.ReadOnly" name="readOnly" />
          <nameValue idref="True" name="hideAnnotations" />
        </nameValues>
      </page>
      <page name="Dwelling" caption="Dwelling Information" pageVersion="2" validRef="RiskSchedulePage.Show" prevPage="Household">
        <group object="Risk" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" caption="Tell us some about your dwelling">
            <section direction="down" captionPosition="before" showCaption="repeat" cc="LightPanel">
              <section direction="across" captionPosition="before" showCaption="repeat">
                <reference idref="Spacer" caption="Help us give you the most accurate quote by providing the following special details about your dwelling." />
              </section>
              <section direction="down" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215">
                <reference idref="DwellingInput.Form" onBlur="1" />
                <reference idref="DwellingInput.UseType" />
                <reference idref="DwellingInput.BuildingType" compute="1" />
                <reference idref="DwellingInput.NumberOfFamilies" />
              </section>
            </section>
          </section>
        </group>
        <nameValues>
          <nameValue idref="RiskSchedulePage.ReadOnly" name="readOnly" />
        </nameValues>
      </page>
      <page name="Structure" caption="Structure" pageVersion="2" validRef="RiskSchedulePage.Show" prevPage="Dwelling">
        <group object="Risk" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" caption="Tell us some about your structure">
            <section direction="down" captionPosition="before" showCaption="repeat" cc="LightPanel">
              <section direction="across" captionPosition="before" showCaption="repeat">
                <reference idref="Spacer" caption="Help us give you the most accurate quote by providing the following special details about your structure." />
              </section>
              <section direction="down" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215">
                <reference idref="DwellingInput.YearBuilt" compute="1">
                  <nameValues>
                    <nameValue idref="True" name="removeZero" />
                  </nameValues>
                </reference>
                <reference idref="DwellingInput.Construction" />
                <reference idref="DwellingInput.FoundationType" />
                <reference idref="DwellingInput.SquareFeet" />
                <reference idref="DwellingInput.UnderConstruction" />
                <reference idref="DwellingInput.RoofGeometry" />
              </section>
            </section>
          </section>
        </group>
        <nameValues>
          <nameValue idref="RiskSchedulePage.ReadOnly" name="readOnly" />
        </nameValues>
      </page>
      <page name="Utilities" caption="Utilities &amp; Safety" pageVersion="2" validRef="RiskSchedulePage.Show" prevPage="Structure">
        <group object="Risk" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" caption="Tell us some about your utilties and protection devices">
            <section direction="down" captionPosition="before" showCaption="repeat" cc="LightPanel">
              <section direction="across" captionPosition="before" showCaption="repeat">
                <reference idref="Spacer" caption="Help us give you the most accurate quote by providing the following special details about your utilties and protection devices." />
              </section>
              <section direction="down" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215">
                <reference idref="DwellingInput.RatedProtectionClass" onBlur="1" />
                <reference idref="DwellingInput.PrimaryHeatType" />
                <reference idref="DwellingInput.BurglarAlarm" />
                <reference idref="DwellingInput.FireAlarm" />
                <reference idref="DwellingInput.Sprinkler" />
                <reference idref="DwellingInput.OpeningProtection" />
              </section>
              <section direction="down" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215" validRef="DwellingPrivate.QualifiesForSuburbanRating" collapsible="1">
                <nameValues>
                  <nameValue idref="True" name="startClosed" />
                  <nameValue value="Suburban Rating Information" name="toggleCaption" />
                </nameValues>
                <reference idref="DwellingInput.DistanceToFireStation" />
                <reference idref="DwellingInput.DistanceToHydrant" />
                <reference idref="DwellingInput.DistanceToWaterSource" />
                <reference idref="DwellingInput.DwellingAccessibleToFireEquipment" />
                <reference idref="DwellingInput.RespondingFireDepartment" />
                <reference idref="DwellingInput.DistanceToCoast" />
                <reference idref="DwellingInput.DistanceToTidalWater" />
                <reference idref="DwellingInput.DistanceToMajorWaterway" />
              </section>
            </section>
          </section>
        </group>
        <nameValues>
          <nameValue idref="RiskSchedulePage.ReadOnly" name="readOnly" />
        </nameValues>
      </page>
      <page name="Coverage" caption="Coverage" pageVersion="2" validRef="DwellingPage.Show" prevPage="Utilities">
        <group object="Risk" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" caption="Enter your desired coverage limits">
            <section direction="down" captionPosition="before" showCaption="repeat" cc="LightPanel">
              <section direction="down" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215">
                <reference idref="CoverageADwellingInput.Limit" caption="Dwelling" compute="1" onBlur="1">
                  <nameValues>
                    <nameValue idref="DwellingPrivate.FormIsCondoOrTenant" name="eliminate" />
                  </nameValues>
                </reference>
                <reference idref="CoverageCPersonalPropertyHO46Input.Limit" caption="Personal Property" compute="1" onBlur="1">
                  <nameValues>
                    <nameValue idref="DwellingPrivate.FormIsDwelling" name="eliminate" />
                  </nameValues>
                </reference>
              </section>
              <section direction="across" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215" validRef="DwellingPrivate.FormIsDwelling">
                <reference idref="CoverageBOtherStructuresInput.Limit" caption="Other Structures" compute="1" onBlur="1" />
                <reference idref="CoverageBOtherStructuresOutput.IncludedLimit" caption="Other Structures Included Limit" compute="1" />
              </section>
              <section direction="across" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215" validRef="DwellingPrivate.FormIsDwelling">
                <reference idref="CoverageCPersonalPropertyHO3Input.Limit" caption="Personal Property" compute="1" onBlur="1" />
                <reference idref="CoverageCPersonalPropertyHO3Output.IncludedLimit" caption="Personal Property Included Limit" compute="1" />
              </section>
              <section direction="across" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215">
                <reference idref="CoverageDLossOfUseInput.Limit" caption="Loss Of Use" compute="1" onBlur="1" />
                <reference idref="CoverageDLossOfUseOutput.IncludedLimit" caption="Loss Of Use Included Limit" compute="1" />
              </section>
              <section direction="down" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215">
                <reference idref="CoverageELiabilityInput.Limit" caption="Personal Liability" onBlur="1" />
                <reference idref="CoverageFMedicalInput.Limit" caption="Medical Payments" onBlur="1" />
                <reference idref="DwellingInput.Deductible" />
                <reference idref="DwellingInput.WindDeductible" />
              </section>
              <section direction="down" captionPosition="above" showCaption="repeat" collapsible="1" fldClass="x_InputWidth215">
                <nameValues>
                  <nameValue value="Common Additional Coverages" name="toggleCaption" />
                  <nameValue idref="True" name="startClosed" />
                </nameValues>
                <reference idref="CreditCardInput.Limit" />
                <reference idref="RefrigeratedPersonalPropertyInput.Indicator" />
                <reference idref="WaterBackupOfSewersOrDrainsInput.Indicator">
                  <nameValues>
                    <nameValue idref="DwellingPrivate.FormIsCondoOrTenant" name="eliminate" />
                  </nameValues>
                </reference>
              </section>
            </section>
          </section>
        </group>
        <nameValues>
          <nameValue idref="DwellingPage.ReadOnly" name="readOnly" />
        </nameValues>
      </page>
      <page name="RightPanel" caption="Right Panel" pageVersion="2" metaPage="1" position="rightpanel" prevPage="" override="1">
        <group object="data" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat">
            <group iterMax="*" iterStep="1" object="Policy">
              <section direction="down" captionPosition="before" showCaption="repeat">
                <section direction="down" captionPosition="before" showCaption="repeat">
                  <section direction="down" captionPosition="before" showCaption="repeat" cc="LightPanel" validRef="False">
                    <tableLayout direction="across" captionPosition="before" showCaption="repeat">
                      <xhtml>
                        <nameValues>
                          <nameValue idref="AgencyPrivate.FindAgentXHTML" name="content" />
                        </nameValues>
                      </xhtml>
                      <reference idref="Spacer" caption="We have many agents ready to assist you.  Feel free to choose an agent near you as you point of contact for this quote." capClass="x_Width180" />
                      <nameValues />
                    </tableLayout>
                    <action command="custom" caption="Find Agent">
                      <nameValues />
                    </action>
                    <nameValues>
                      <nameValue value="Find An Agent" name="panelHeader" />
                    </nameValues>
                  </section>
                  <group iterMax="*" iterStep="1" object="Line">
                    <section direction="down" captionPosition="before" showCaption="repeat">
                      <section direction="down" captionPosition="before" showCaption="repeat" cc="LightPanel">
                        <nameValues>
                          <nameValue value="Quote Details" name="panelHeader" />
                        </nameValues>
                        <tableLayout direction="across" captionPosition="above" showCaption="repeat" readOnly="1">
                          <reference idref="PolicyInput.EffectiveDate" caption="Policy Start Date:" fldClass="x_Width180" />
                          <action command="custom" caption="Edit" pageRef="Household" topic="Consumer" displayType="hyperlink">
                            <nameValues />
                          </action>
                        </tableLayout>
                        <section direction="across" captionPosition="above" showCaption="repeat" readOnly="1">
                          <reference idref="LocationOutputNonShredded.AddressDisplay" caption="Your Address:" compute="1" />
                        </section>
                        <group iterMax="*" iterStep="1" object="Watercraft">
                          <tableLayout direction="across" captionPosition="above" showCaption="once" validRef="LinePrivate.ShowWatercraftSummary">
                            <reference idref="WatercraftOutput.SummaryDescription" caption="Watercraft(s)" fldClass="x_Width180" compute="1">
                              <nameValues>
                                <nameValue idref="True" name="readOnly" />
                              </nameValues>
                            </reference>
                            <action command="specificIter" caption="Edit" displayType="hyperlink" pageRef="WatercraftDetail" topic="WatercraftDetail">
                              <nameValues />
                            </action>
                          </tableLayout>
                        </group>
                        <tableLayout direction="across" captionPosition="above" showCaption="once">
                          <group iterMax="*" iterStep="1" object="SPP">
                            <tableLayout direction="across" captionPosition="above" showCaption="once" readOnly="1">
                              <reference idref="SPPOutput.SummaryDescription" caption="SPP Item(s)" fldClass="x_Width180" compute="1" />
                              <action command="specificIter" caption="Edit" pageRef="SPPDetail" displayType="hyperlink" topic="SPPDetail">
                                <nameValues />
                              </action>
                            </tableLayout>
                          </group>
                        </tableLayout>
                      </section>
                    </section>
                  </group>
                </section>
              </section>
            </group>
            <section direction="down" captionPosition="before" showCaption="repeat" cc="LightPanel" validRef="UserInterface.ShowQuoteTotalPanel">
              <tableLayout direction="down" captionPosition="before" showCaption="repeat" readOnly="1" fldClass="x_AlignRight" capClass="x_Width180">
                <nameValues />
                <reference idref="DwellingOutput.AdjustedBasePremium" />
                <reference idref="CoverageBOtherStructuresOutput.Premium" caption="Other Structures (B)">
                  <nameValues>
                    <nameValue idref="DwellingPrivate.FormIsCondoOrTenant" name="eliminate" />
                  </nameValues>
                </reference>
                <reference idref="CoverageCPersonalPropertyHO3Output.Premium" caption="Personal Property (C)">
                  <nameValues>
                    <nameValue idref="DwellingPrivate.FormIsCondoOrTenant" name="eliminate" />
                  </nameValues>
                </reference>
                <reference idref="CoverageDLossOfUseOutput.Premium" caption="Loss Of Use (D)" />
                <reference idref="CoverageELiabilityOutput.Premium" caption="Personal Liability (E)" />
                <reference idref="CoverageFMedicalOutput.Premium" caption="Medical Payments (F)" />
              </tableLayout>
              <tableLayout direction="down" captionPosition="before" showCaption="repeat" readOnly="1" fldClass="x_AlignRight" class="x_BorderBottomThin" capClass="x_Width180">
                <reference idref="SectionICoveragesOutput.SectionIPremium" caption="Optional Property Coverage" />
                <reference idref="SectionIICoveragesOutput.SectionIIPremium" caption="Optional Liability Coverage" />
                <reference idref="SPPSubtotals.SPPTotalPremium" caption="Scheduled Personal Property" />
                <reference idref="WatercraftSubtotals.WatercraftTotalPremium" caption="Watercraft" />
              </tableLayout>
              <tableLayout direction="down" captionPosition="before" showCaption="repeat" readOnly="1" fldClass="x_AlignRight" class="x_BorderBottomThin" capClass="x_Width180" validRef="AutoHomeDiscountOutput.Indicator">
                <reference idref="AutoHomeDiscountOutput.Premium" caption="Auto/Home Discount" />
              </tableLayout>
              <tableLayout direction="down" captionPosition="before" showCaption="repeat" readOnly="1" class="x_MarginTop10" capClass="x_Width180">
                <reference idref="LinePremiums.Premium" caption="Total:" fldClass="x_AlignRight" />
              </tableLayout>
              <tableLayout direction="down" captionPosition="before" showCaption="repeat">
                <action command="custom" caption="Buy this Policy" validRef="PolicyPrivate.ShowBuyThisPolicy" pageRef="QuoteComplete" topic="QuoteComplete" postCommand="PolicyPrivate.BuyPolicyTask">
                  <nameValues>
                    <nameValue value="UserInterface.CopyReferralMessages" name="preEventField" />
                  </nameValues>
                  <request verb="ManuScript.getValueRq">
                    <nameValues>
                      <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue value="UserInterface.ConsumerSave" name="field" dataType="attribute" />
                    </nameValues>
                  </request>
                </action>
                <action command="custom" caption="Buy this Policy" validRef="PolicyPrivate.ShowBuyThisPolicyCommit" pageRef="QuoteIssue" topic="QuoteComplete">
                  <request verb="ManuScript.getValueRq">
                    <nameValues>
                      <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue value="UserInterface.ConsumerSave" name="field" dataType="attribute" />
                    </nameValues>
                  </request>
                  <request verb="Session.setPropertyRq">
                    <nameValues>
                      <nameValue value="cansave" name="name" dataType="attribute" />
                      <nameValue value="1" name="value" dataType="attribute" />
                    </nameValues>
                  </request>
                  <request verb="ManuScript.getValueRq">
                    <nameValues>
                      <nameValue value="Carrier_ProductBase_Workflow_1_0_0_0" name="manuscript" dataType="attribute" />
                      <nameValue value="Issue.PreAction" name="field" dataType="attribute" />
                    </nameValues>
                  </request>
                </action>
              </tableLayout>
              <nameValues>
                <nameValue value="Your Policy Totals" name="panelHeader" />
              </nameValues>
            </section>
            <section direction="down" captionPosition="before" showCaption="repeat" cc="LightPanel">
              <nameValues>
                <nameValue value="Questions?" name="panelHeader" />
              </nameValues>
              <tableLayout direction="across" captionPosition="before" showCaption="repeat">
                <nameValues />
                <action command="custom">
                  <nameValues>
                    <nameValue value="loneIcon" name="type" />
                    <nameValue value="PersonalAuto/Chat.png" name="icon" />
                  </nameValues>
                </action>
                <reference idref="Spacer" caption="Let our experienced support staff answer your questions." capClass="x_Bold" />
              </tableLayout>
              <tableLayout direction="across" captionPosition="before" showCaption="repeat">
                <nameValues />
                <action command="custom">
                  <nameValues>
                    <nameValue value="loneIcon" name="type" />
                    <nameValue value="PersonalAuto/phone.png" name="icon" />
                  </nameValues>
                </action>
                <reference idref="Spacer" caption="We can contact you to help with your quote." capClass="x_Bold" />
              </tableLayout>
              <tableLayout direction="across" captionPosition="before" showCaption="repeat">
                <nameValues />
                <action command="custom">
                  <nameValues>
                    <nameValue value="loneIcon" name="type" />
                    <nameValue value="PersonalAuto/Question.png" name="icon" />
                  </nameValues>
                </action>
                <reference idref="Spacer" caption="Frequently Asked Questions" compute="0" capClass="x_Bold" />
              </tableLayout>
              <tableLayout direction="down" captionPosition="before" showCaption="once">
                <action command="custom" caption="Save" pageRef="Household" topic="Consumer">
                  <nameValues />
                  <request verb="ManuScript.getValueRq">
                    <nameValues>
                      <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue value="UserInterface.ConsumerSave" name="field" dataType="attribute" />
                    </nameValues>
                  </request>
                </action>
                <action command="custom" caption="Return to MyAccount" validRef="UserInterface.MAPPartyIdSet">
                  <nameValues>
                    <nameValue value="loadMyAccount" name="postAction" />
                  </nameValues>
                </action>
              </tableLayout>
            </section>
          </section>
        </group>
      </page>
      <page name="Watercraft" caption="Watercraft" pageVersion="2" prevPage="AdditionalCoverage">
        <group object="Line" iterMax="*" iterStep="1">
          <section direction="across" captionPosition="before" showCaption="repeat" caption="Tell us about any watercraft you own">
            <section direction="down" captionPosition="before" showCaption="repeat">
              <section direction="across" captionPosition="before" showCaption="repeat">
                <action command="custom" caption="Add watercraft" displayType="action">
                  <request verb="ManuScript.addObjectRecordRq">
                    <nameValues>
                      <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue value="Watercraft" name="objectID" dataType="attribute" />
                    </nameValues>
                  </request>
                </action>
              </section>
              <section direction="down" captionPosition="before" showCaption="repeat" validRef="LinePrivate.MultipleWatercraft">
                <group iterMax="*" iterStep="1" object="Watercraft">
                  <section direction="down" captionPosition="above" showCaption="repeat">
                    <nameValues>
                      <nameValue idref="WatercraftPrivate.TypeCaption" name="panelHeader" />
                    </nameValues>
                    <section direction="down" captionPosition="before" showCaption="repeat" cc="WhiteRounded">
                      <nameValues>
                        <nameValue idref="WatercraftPrivate.TypeCaption" name="panelHeader" />
                      </nameValues>
                      <tableLayout direction="across" captionPosition="above" showCaption="repeat" readOnly="1">
                        <reference idref="WatercraftInput.Length" />
                        <reference idref="WatercraftInput.Horsepower" />
                      </tableLayout>
                    </section>
                  </section>
                </group>
              </section>
              <section direction="down" captionPosition="before" showCaption="repeat" validRef="LinePrivate.SingleWatercraft">
                <group iterMax="*" iterStep="1" object="Watercraft">
                  <section direction="down" captionPosition="before" showCaption="repeat">
                    <section direction="down" captionPosition="before" showCaption="repeat" cc="LightPanel">
                      <section direction="down" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215">
                        <reference idref="WatercraftInput.Type" onBlur="1" />
                        <reference idref="WatercraftInput.Length">
                          <nameValues>
                            <nameValue idref="True" name="removeZero" />
                          </nameValues>
                        </reference>
                        <reference idref="WatercraftInput.Horsepower">
                          <nameValues>
                            <nameValue idref="True" name="removeZero" />
                          </nameValues>
                        </reference>
                        <reference idref="WatercraftInput.MilesPerHour" compute="1">
                          <nameValues>
                            <nameValue idref="True" name="removeZero" />
                          </nameValues>
                        </reference>
                      </section>
                      <action command="markForDelete" caption="Remove" />
                    </section>
                  </section>
                </group>
              </section>
            </section>
          </section>
        </group>
        <nameValues>
          <nameValue idref="AllPage.ReadOnly" name="readOnly" />
        </nameValues>
      </page>
      <page name="SPP" caption="SPP" pageVersion="2" prevPage="Watercraft">
        <group object="Line" iterMax="*" iterStep="1">
          <section direction="across" captionPosition="before" showCaption="repeat" caption="Tell us about any personal property you wish to schedule">
            <section direction="down" captionPosition="before" showCaption="repeat">
              <section direction="across" captionPosition="before" showCaption="repeat">
                <action command="custom" caption="Add Item" displayType="action">
                  <request verb="ManuScript.addObjectRecordRq">
                    <nameValues>
                      <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue value="SPP" name="objectID" dataType="attribute" />
                    </nameValues>
                  </request>
                </action>
              </section>
              <section direction="down" captionPosition="before" showCaption="repeat" validRef="LinePrivate.MultipleSPP">
                <group iterMax="*" iterStep="1" object="SPP">
                  <section direction="down" captionPosition="above" showCaption="repeat">
                    <nameValues>
                      <nameValue idref="SPPPrivate.TypeCaption" name="panelHeader" />
                    </nameValues>
                    <section direction="down" captionPosition="before" showCaption="repeat" cc="WhiteRounded">
                      <nameValues>
                        <nameValue idref="SPPPrivate.TypeCaption" name="panelHeader" />
                      </nameValues>
                      <tableLayout direction="across" captionPosition="above" showCaption="repeat" readOnly="1">
                        <reference idref="SPPInput.Description" />
                      </tableLayout>
                      <section direction="across" captionPosition="before" showCaption="repeat">
                        <reference idref="Spacer" />
                        <action command="specificIter" caption="Edit" displayType="action" pageRef="SPPDetail" topic="SPPDetail" />
                        <action command="markForDelete" caption="Remove" />
                      </section>
                    </section>
                  </section>
                </group>
              </section>
              <section direction="down" captionPosition="before" showCaption="repeat" validRef="LinePrivate.SingleSPP">
                <group iterMax="*" iterStep="1" object="SPP">
                  <section direction="down" captionPosition="before" showCaption="repeat">
                    <section direction="down" captionPosition="before" showCaption="repeat" cc="LightPanel">
                      <section direction="down" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215">
                        <reference idref="SPPInput.Type" onBlur="1" />
                        <reference idref="SPPInput.Description" />
                        <reference idref="SPPInput.Limit" onBlur="1">
                          <nameValues>
                            <nameValue idref="True" name="removeZero" />
                          </nameValues>
                        </reference>
                        <reference idref="SPPInput.Vaulted" compute="1" />
                        <reference idref="SPPInput.BreakageCoverage" compute="1" />
                        <reference idref="SPPInput.Blanket" compute="1" />
                      </section>
                      <action command="markForDelete" caption="Remove" />
                    </section>
                  </section>
                  <action command="specificIter" validRef="SPPPrivate.ShowApprisal" pageRef="AddAttachment" topic="AddAttachment" displayType="hyperlink" caption="Appraisal">
                    <nameValues>
                      <nameValue idref="SPPPrivate.SPPAttachIcon" name="icon" />
                      <nameValue value="loneIcon" name="type" />
                    </nameValues>
                  </action>
                </group>
              </section>
            </section>
          </section>
        </group>
        <nameValues>
          <nameValue idref="AllPage.ReadOnly" name="readOnly" />
        </nameValues>
      </page>
      <page name="AdditionalCoverage" caption="Additional Coverage" pageVersion="2" validRef="AdditionalCoveragePage.Show" prevPage="Coverage">
        <group object="Risk" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" caption="Enter your desired coverage limits">
            <section direction="down" captionPosition="before" showCaption="repeat" cc="LightPanel">
              <section direction="down" captionPosition="above" showCaption="repeat" collapsible="1" fldClass="x_InputWidth215">
                <nameValues>
                  <nameValue value="Additional Property Coverages" name="toggleCaption" />
                  <nameValue idref="True" name="startClosed" />
                </nameValues>
                <reference idref="AdditionsAlterationsInput.Type" />
                <reference idref="AdditionsAlterationsInput.Limit" />
                <reference idref="BusinessPropertyInput.Limit" />
                <reference idref="EarthquakeInput.Deductible" />
                <reference idref="EarthquakeInput.LossAssessmentLimit">
                  <nameValues>
                    <nameValue idref="True" name="removeZero" />
                  </nameValues>
                </reference>
                <reference idref="IdentityFraudExpenseCoverageInput.Indicator" />
                <reference idref="InflationGuardInput.Limit" compute="1" />
                <reference idref="LossAssessmentInput.Limit" />
                <reference idref="OtherStructuresRentedToOthersInput.Limit" compute="1">
                  <nameValues>
                    <nameValue idref="DwellingPrivate.FormIsDwelling" name="removeZero" />
                  </nameValues>
                </reference>
                <reference idref="PermittedIncidentalOccupancyOtherStructuresInput.Limit">
                  <nameValues>
                    <nameValue idref="True" name="removeZero" />
                  </nameValues>
                </reference>
                <reference idref="PersonalPropertyOtherResidenceInput.Limit" compute="1">
                  <nameValues>
                    <nameValue idref="True" name="removeZero" />
                  </nameValues>
                </reference>
                <reference idref="LimitedFungiBacteriaInput.Limit" />
                <reference idref="OrdinanceOrLawInput.Limit" />
                <reference idref="CarportsPoolCagesInput.Limit" compute="1" onBlur="1" />
                <reference idref="CarportsPoolCagesInput.Description">
                  <nameValues>
                    <nameValue idref="CarportsPoolCagesPrivate.HideDescription" name="eliminate" />
                  </nameValues>
                </reference>
                <reference idref="SpecialComputerCoverageInput.Indicator" />
                <reference idref="SpecialPersonalPropertyCoverageInput.Indicator" />
                <reference idref="UnitsRegularlyRentedToOthersInput.Indicator" />
                <reference idref="UnscheduledElectronicApparatusInput.Limit" />
                <reference idref="UnscheduledGunsInput.Limit" />
                <reference idref="UnscheduledJewelryInput.Limit" />
                <reference idref="UnscheduledMoneyInput.Limit" />
                <reference idref="UnscheduledSecuritiesInput.Limit" />
                <reference idref="UnscheduledSilverwareInput.Limit" />
                <reference idref="WaterBackupAndSumpOverflowInput.Indicator" />
                <reference idref="WatercraftBlanketHullCoverageInput.Limit" />
              </section>
              <section direction="down" captionPosition="above" showCaption="repeat" collapsible="1" fldClass="x_InputWidth215">
                <nameValues>
                  <nameValue value="Additional Liability Coverages" name="toggleCaption" />
                  <nameValue idref="True" name="startClosed" />
                </nameValues>
                <reference idref="IncidentalFarmingPersonalLiabilityInput.Type" />
                <reference idref="PersonalInjuryInput.Indicator" />
                <reference idref="ResidenceEmployeesInput.NumberOfEmployees">
                  <nameValues>
                    <nameValue idref="True" name="removeZero" />
                  </nameValues>
                </reference>
              </section>
            </section>
          </section>
        </group>
        <nameValues>
          <nameValue idref="AdditionalCoveragePage.ReadOnly" name="readOnly" />
        </nameValues>
      </page>
      <page name="Summary" caption="Quote" pageVersion="2" validRef="SummaryPage.Show" calculate="2" idref="ExecutePremiums.Value">
        <group object="data" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" caption="Your Quote is Ready!">
            <section direction="across" captionPosition="before" showCaption="repeat">
              <reference idref="Spacer" caption="Please review your quote below.  Use our tools to customize your coverage to meet you needs." />
            </section>
            <group iterMax="*" iterStep="1" object="Policy">
              <section direction="down" captionPosition="before" showCaption="repeat">
                <group iterMax="*" iterStep="1" object="Line">
                  <section direction="down" captionPosition="before" showCaption="repeat">
                    <section direction="down" captionPosition="before" showCaption="repeat" cc="WhiteRounded">
                      <nameValues>
                        <nameValue value="Choose your coverage package" name="panelHeader" />
                      </nameValues>
                      <section direction="down" captionPosition="before" showCaption="repeat">
                        <widget widgetType="comparison" showCaption="repeat" widgetFormat="radio" idref="LineInput.CoveragePackage" affectedValueRef="data.TotalPremiumChange" affectedRatingRef="ExecutePremiums.Value" formatMaskOverride="$???,???,???.00" widgetName=" " restoreSession="1" class="x_PaddingBottom35 x_PaddingLeft10" onBlur="1" />
                      </section>
                      <section direction="down" captionPosition="before" showCaption="repeat">
                        <action command="custom" caption="Buy this policy" pageRef="Purchase" displayType="action" preCommand="PolicyPrivate.SetConsumerPurchaseAvailableTrue" validRef="PolicyWorkflowDataInput.IsEligible">
                          <nameValues>
                            <nameValue value="0" name="ignoreValidation" />
                          </nameValues>
                        </action>
                      </section>
                    </section>
                    <section direction="down" captionPosition="above" showCaption="repeat">
                      <nameValues />
                      <section direction="down" captionPosition="before" showCaption="repeat" cc="WhiteRounded">
                        <nameValues>
                          <nameValue value="COVERAGES" name="panelHeader" />
                        </nameValues>
                        <section direction="down" captionPosition="above" showCaption="repeat">
                          <reference idref="CoverageADwellingInput.Limit" caption="Dwelling" compute="1" onBlur="1">
                            <nameValues>
                              <nameValue idref="DwellingPrivate.FormIsCondoOrTenant" name="eliminate" />
                            </nameValues>
                          </reference>
                          <reference idref="CoverageCPersonalPropertyHO46Input.Limit" caption="Personal Property" compute="1" onBlur="1">
                            <nameValues>
                              <nameValue idref="DwellingPrivate.FormIsDwelling" name="eliminate" />
                            </nameValues>
                          </reference>
                          <reference idref="DwellingInput.Deductible" onBlur="1" />
                        </section>
                        <section direction="down" captionPosition="above" showCaption="repeat" validRef="DwellingPrivate.FormIsDwelling">
                          <reference idref="CoverageBOtherStructuresInput.Limit" caption="Other Structures" onBlur="1" />
                          <reference idref="CoverageCPersonalPropertyHO3Input.Limit" caption="Personal Property" onBlur="1" />
                        </section>
                        <section direction="down" captionPosition="above" showCaption="repeat">
                          <reference idref="CoverageDLossOfUseInput.Limit" caption="Loss of Use" onBlur="1" />
                          <reference idref="CoverageELiabilityInput.Limit" caption="Personal Liability" onBlur="1" />
                          <reference idref="CoverageFMedicalInput.Limit" caption="Medical Payments" onBlur="1" />
                        </section>
                        <section direction="down" captionPosition="before" showCaption="repeat" readOnly="1" class="x_SectionTopBorderSeparator">
                          <reference idref="PolicyPremiums.Premium" caption=" Premium" fldClass="x_TextIndent" />
                        </section>
                      </section>
                    </section>
                  </section>
                </group>
              </section>
            </group>
          </section>
        </group>
        <nameValues>
          <nameValue idref="AllPage.ReadOnly" name="readOnly" />
          <nameValue idref="True" name="hideAnnotations" />
        </nameValues>
      </page>
      <page name="Purchase" caption="Purchase" pageVersion="2" validRef="PurchaseInformationPage.Show">
        <group object="Policy" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" caption="Now that you've decided to purchase this policy, we need some information to complete the process.  Thank you for doing business with us!">
            <group iterMax="*" iterStep="1" object="Line">
              <section direction="down" captionPosition="before" showCaption="repeat" cc="WhiteRounded">
                <section direction="down" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215">
                  <reference idref="UnderwritingQuestionsInput.IsThereATrampolineOnPremises" onBlur="1" />
                </section>
                <section direction="down" captionPosition="above" showCaption="repeat" caption="Animals/Exotic Pets" fldClass="x_InputWidth215">
                  <reference idref="UnderwritingQuestionsInput.AnyAnimalsOrExoticPets" onBlur="1" />
                </section>
                <section direction="down" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215" validRef="UnderwritingQuestionsInput.AnyAnimalsOrExoticPets" cc="PlainWhite">
                  <reference idref="AnimalPetSubQuestions.AnimalWeight" onBlur="1" />
                  <reference idref="AnimalPetSubQuestions.AnimalDescription" />
                  <reference idref="AnimalPetSubQuestions.ViciousAnimal" />
                  <reference idref="AnimalPetSubQuestions.Reptilesamphibians" />
                  <reference idref="AnimalPetSubQuestions.LivestockSaddleAnimals" />
                  <reference idref="AnimalPetSubQuestions.IneligibleDogBreeds" />
                </section>
                <nameValues>
                  <nameValue value="Additional Information" name="panelHeader" />
                </nameValues>
                <section direction="down" captionPosition="above" showCaption="repeat" caption="Swimming Pool" fldClass="x_InputWidth215">
                  <reference idref="UnderwritingQuestionsInput.SwimmingPool" onBlur="1" />
                </section>
                <section direction="down" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215" validRef="UnderwritingQuestionsInput.SwimmingPool" cc="PlainWhite">
                  <reference idref="SwimmingPoolSubQuestions.PoolType" />
                  <reference idref="SwimmingPoolSubQuestions.ApprovedFence" />
                  <reference idref="SwimmingPoolSubQuestions.DivingBoard" />
                  <reference idref="SwimmingPoolSubQuestions.Slide" />
                </section>
                <section direction="down" captionPosition="above" showCaption="repeat" caption="Home-based Business" fldClass="x_InputWidth215">
                  <reference idref="UnderwritingQuestionsInput.AnyBusinessConducted" onBlur="1" />
                </section>
                <section direction="down" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215" validRef="UnderwritingQuestionsInput.AnyBusinessConducted" cc="PlainWhite">
                  <reference idref="BusinessSubQuestions.BusinessConductedTypeOfBusiness" />
                  <reference idref="BusinessSubQuestions.BusinessConductedOwnership" />
                  <reference idref="BusinessSubQuestions.BusinessConductedLocation" />
                  <reference idref="BusinessSubQuestions.BusinessConductedCustomers" />
                  <reference idref="BusinessSubQuestions.BusinessConductedNonResidentEmployees" />
                  <reference idref="BusinessSubQuestions.BusinessConductedCommercialCoverageInForce" />
                </section>
              </section>
            </group>
          </section>
        </group>
        <nameValues>
          <nameValue idref="AllPage.ReadOnly" name="readOnly" />
          <nameValue idref="True" name="hideAnnotations" />
          <nameValue idref="True" name="calculate" />
        </nameValues>
      </page>
      <page name="PaymentDetails" caption="Payment Details" pageVersion="2" manuscriptIdRef="PolicyAdmin.BillingWorkflowManuScriptID" topicRef="BillingSetup" pageRef="PaymentDetails" validRef="PurchaseInformationPage.PaymentPageShow" />
    </topic>
    <topic name="WatercraftDetail" caption="Watercraft Detail" ruleSet="noNav">
      <page name="WatercraftDetail" caption="Watercraft Detail" pageVersion="2">
        <group object="Watercraft" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat">
            <section direction="down" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215">
              <reference idref="WatercraftInput.Type" compute="0" onBlur="1" />
              <reference idref="WatercraftInput.Length">
                <nameValues>
                  <nameValue idref="True" name="removeZero" />
                </nameValues>
              </reference>
              <reference idref="WatercraftInput.Horsepower">
                <nameValues>
                  <nameValue idref="True" name="removeZero" />
                </nameValues>
              </reference>
              <reference idref="WatercraftInput.MilesPerHour" compute="1">
                <nameValues>
                  <nameValue idref="True" name="removeZero" />
                </nameValues>
              </reference>
            </section>
            <action command="custom" caption="OK" pageRef="Watercraft" topic="Consumer" />
          </section>
        </group>
      </page>
    </topic>
    <topic name="SPPDetail" caption="SPP Detail" ruleSet="noNav">
      <page name="SPPDetail" caption="SPP Detail" pageVersion="2">
        <group iterMax="*" iterStep="1" object="SPP">
          <section direction="down" captionPosition="before" showCaption="repeat">
            <section direction="down" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215">
              <reference idref="SPPInput.Type" onBlur="1" />
              <reference idref="SPPInput.Description" />
              <reference idref="SPPInput.Limit" onBlur="1">
                <nameValues>
                  <nameValue idref="True" name="removeZero" />
                </nameValues>
              </reference>
              <reference idref="SPPInput.Vaulted" compute="1" />
              <reference idref="SPPInput.BreakageCoverage" compute="1" />
              <reference idref="SPPInput.Blanket" compute="1" />
            </section>
            <action command="custom" caption="OK" pageRef="SPP" topic="Consumer" />
          </section>
        </group>
      </page>
    </topic>
    <topic name="HomePackageCoverage" caption="Home Package Coverage">
      <page name="HomePackageCoverage" caption="Homeowners Pricing" pageVersion="2.0">
        <group object="Policy" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" cc="GrayPanel">
            <section direction="down" captionPosition="before" showCaption="repeat">
              <widget widgetType="comparison" showCaption="repeat" widgetFormat="slider" formatMaskOverride="$???,???,???.00" idref="LineInput.CoveragePackage" affectedValueRef="data.TotalPremiumChange" onBlur="1" restoreSession="1" class="x_PaddingBottom20 x_PaddingLeft60" affectedRatingRef="ExecutePremiums.Value" />
            </section>
            <section direction="down" captionPosition="above" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7821_3" validRef="DwellingPrivate.FormIsDwelling" cc="LightPanel" caption="Coverage Calculator" icon="calculator.png">
              <nameValues />
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <section direction="across" captionPosition="before" showCaption="only" class="x_Width240">
                  <reference idref="CoverageADwellingInput.Limit" onBlur="1" compute="1">
                    <nameValues>
                      <nameValue idref="DwellingPrivate.FormIsCondoOrTenant" name="eliminate" />
                    </nameValues>
                  </reference>
                </section>
                <nameValues />
                <section direction="across" captionPosition="before" showCaption="none" class="x_Width200">
                  <reference idref="CoverageADwellingInput.Limit" onBlur="1" compute="1">
                    <nameValues>
                      <nameValue idref="DwellingPrivate.FormIsCondoOrTenant" name="eliminate" />
                    </nameValues>
                  </reference>
                </section>
                <section direction="across" captionPosition="before" showCaption="repeat">
                  <reference idref="DwellingOutput.AdjustedBasePremium" fldClass="x_AlignRight x_Width120" caption="$" />
                </section>
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <nameValues />
                <section direction="across" captionPosition="before" showCaption="repeat" class="x_Width240">
                  <reference idref="Spacer" caption="All-Peril Deductible" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none">
                  <widget widgetType="comparison" showCaption="repeat" widgetFormat="extended" formatMaskOverride="$???,???,???.00" idref="DwellingInput.Deductible" affectedValueRef="data.TotalPremiumWritten" onBlur="1" caption=" " restoreSession="1" selectedFormatMask=" " />
                </section>
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <nameValues />
                <section direction="across" captionPosition="before" showCaption="only" class="x_Width240">
                  <reference idref="CoverageBOtherStructuresInput.Limit" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none" class="x_Width200">
                  <reference idref="CoverageBOtherStructuresInput.Limit" onBlur="1" />
                </section>
                <section direction="across" captionPosition="before" showCaption="repeat" class="x_TextAlignRight">
                  <reference idref="CoverageBOtherStructuresOutput.Premium" caption="$" />
                </section>
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <nameValues />
                <section direction="across" captionPosition="before" showCaption="only" class="x_Width240">
                  <reference idref="CoverageCPersonalPropertyHO3Input.Limit" onBlur="1" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none" class="x_Width200">
                  <reference idref="CoverageCPersonalPropertyHO3Input.Limit" onBlur="1" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none">
                  <reference idref="CoverageCPersonalPropertyHO3OutputNonShredded.IncludedInCovAText" compute="1" />
                </section>
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <nameValues />
                <section direction="across" captionPosition="before" showCaption="only" class="x_Width240">
                  <reference idref="CoverageDLossOfUseInput.Limit" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none" class="x_Width200">
                  <reference idref="CoverageDLossOfUseInput.Limit" onBlur="1" />
                </section>
                <section direction="across" captionPosition="before" showCaption="repeat">
                  <reference idref="CoverageDLossOfUseOutput.Premium" caption="$" />
                </section>
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <nameValues />
                <section direction="across" captionPosition="before" showCaption="repeat" class="x_Width240">
                  <reference idref="Spacer" caption="Personal Liability Limit (E)" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none" class="x_Width200">
                  <widget widgetType="comparison" showCaption="repeat" widgetFormat="extended" idref="CoverageELiabilityInput.Limit" affectedValueRef="data.TotalPremiumWritten" restoreSession="1" onBlur="1" selectedFormatMask=" " />
                </section>
                <section direction="across" captionPosition="before" showCaption="repeat" fldClass="x_TextAlignRight">
                  <reference idref="CoverageELiabilityOutput.Premium" caption="$" />
                </section>
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <section direction="across" captionPosition="before" showCaption="repeat" class="x_Width240">
                  <reference idref="Spacer" caption="Medical Payments Limit (F)" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none" class="x_Width200">
                  <widget widgetType="comparison" showCaption="repeat" widgetFormat="extended" idref="CoverageFMedicalInput.Limit" affectedValueRef="data.TotalPremiumWritten" restoreSession="1" onBlur="1" selectedFormatMask=" " />
                </section>
                <section direction="across" captionPosition="before" showCaption="repeat" class="x_TextAlignRight">
                  <reference idref="CoverageFMedicalOutput.Premium" caption="$" />
                </section>
                <nameValues />
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <nameValues />
                <section direction="across" captionPosition="before" showCaption="only" class="x_Width240">
                  <reference idref="Spacer" caption="Optional Property Coverage" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none" class="x_Width200">
                  <reference idref="Spacer" />
                </section>
                <section direction="across" captionPosition="before" showCaption="repeat" class="x_TextAlignRight">
                  <reference idref="SectionICoveragesOutput.SectionIPremium" compute="1" caption="$" />
                </section>
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <nameValues />
                <section direction="across" captionPosition="before" showCaption="only" class="x_Width240">
                  <reference idref="Spacer" caption="Optional Liability Coverage" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none" class="x_Width200">
                  <reference idref="Spacer" />
                </section>
                <section direction="across" captionPosition="before" showCaption="repeat" class="x_TextAlignRight">
                  <reference idref="SectionIICoveragesOutput.SectionIIPremium" compute="1" caption="$" />
                </section>
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <nameValues />
                <section direction="across" captionPosition="before" showCaption="only" class="x_Width240">
                  <reference idref="Spacer" caption="Scheduled Personal Property" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none" class="x_Width200">
                  <reference idref="Spacer" />
                </section>
                <section direction="across" captionPosition="before" showCaption="repeat" class="x_TextAlignRight">
                  <reference idref="SPPSubtotals.SPPTotalPremium" caption="$" />
                </section>
              </section>
              <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p76CC320193BB42169212919040353B7822_3">
                <nameValues />
                <section direction="across" captionPosition="before" showCaption="only" class="x_Width240">
                  <reference idref="Spacer" caption="Watercraft" />
                </section>
                <section direction="across" captionPosition="before" showCaption="none" class="x_Width200">
                  <reference idref="Spacer" />
                </section>
                <section direction="across" captionPosition="before" showCaption="repeat" class="x_TextAlignRight">
                  <reference idref="WatercraftSubtotals.WatercraftTotalPremium" caption="$" />
                </section>
              </section>
            </section>
            <section direction="across" captionPosition="before" showCaption="repeat" uid="t_p78DA1FADCF4D4A85AE3668C0CC74E2D94_3" caption="Coverage Calculator" cc="lightPanel" icon="calculator.png" validRef="DwellingPrivate.FormIsCondoOrTenant">
              <nameValues />
              <tableLayout direction="across" captionPosition="above" showCaption="once">
                <section direction="down" captionPosition="before" showCaption="repeat" uid="t_p78DA1FADCF4D4A85AE3668C0CC74E2D95_3" capClass="x_Width250" fldClass="x_Width200">
                  <reference idref="CoverageCPersonalPropertyHO46Input.Limit" compute="1" onBlur="1">
                    <nameValues>
                      <nameValue idref="DwellingPrivate.FormIsDwelling" name="eliminate" />
                    </nameValues>
                  </reference>
                  <reference idref="CoverageDLossOfUseInput.Limit" compute="1" onBlur="1" />
                  <reference idref="CoverageELiabilityInput.Limit" compute="1" onBlur="1" />
                  <reference idref="CoverageFMedicalInput.Limit" compute="1" onBlur="1" />
                  <nameValues />
                  <reference idref="Spacer" caption="Optional Property Coverage" />
                  <reference idref="Spacer" caption="Optional Liability Coverage" />
                  <reference idref="Spacer" caption="Scheduled Personal Property" />
                  <reference idref="Spacer" caption="Watercraft" />
                </section>
                <section direction="down" captionPosition="before" showCaption="repeat" readOnly="1" uid="t_p78DA1FADCF4D4A85AE3668C0CC74E2D9F_3" fldClass="x_Width100" capClass="x_Width5">
                  <reference idref="CoverageCPersonalPropertyHO46Output.Premium" compute="1" caption="$">
                    <nameValues>
                      <nameValue idref="DwellingPrivate.FormIsDwelling" name="eliminate" />
                    </nameValues>
                  </reference>
                  <reference idref="CoverageDLossOfUseOutput.Premium" compute="1" caption="$" />
                  <reference idref="CoverageELiabilityOutput.Premium" compute="1" caption="$" />
                  <reference idref="CoverageFMedicalOutput.Premium" compute="1" caption="$" />
                  <nameValues />
                  <reference idref="SectionICoveragesOutput.SectionIPremium" compute="1" caption="$" />
                  <reference idref="SectionIICoveragesOutput.SectionIIPremium" compute="1" caption="$" />
                  <reference idref="SPPSubtotals.SPPTotalPremium" caption="$" />
                  <reference idref="WatercraftSubtotals.WatercraftTotalPremium" caption="$" />
                </section>
              </tableLayout>
            </section>
            <section direction="across" captionPosition="before" showCaption="repeat" cc="lightPanel">
              <reference idref="AutoHomeDiscountInput.Selected" onBlur="1" capClass="x_Width350" fldClass="x_Width100" />
              <section direction="across" captionPosition="before" showCaption="repeat" validRef="AutoHomeDiscountOutput.Indicator">
                <reference idref="AutoHomeDiscountOutput.Premium" caption="$" />
              </section>
            </section>
            <nameValues />
          </section>
        </group>
        <nameValues>
          <nameValue idref="CoveragePage.ReadOnly" name="readOnly" />
        </nameValues>
      </page>
    </topic>
    <topic name="ChangeWatercraft_MAP" caption="Add/Remove Watercraft" ruleSet="noNav">
      <page name="Select" caption="Add/Remove Watercraft" pageVersion="2">
        <group object="Line" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat">
            <group iterMax="*" iterStep="1" object="Watercraft">
              <tableLayout direction="across" captionPosition="above" showCaption="once" caption="Do you want to remove a watercraft from the policy?">
                <action command="markForDelete" pageRef="Summary">
                  <nameValues>
                    <nameValue idref="WatercraftPrivate.RemoveLabel" name="caption" />
                  </nameValues>
                </action>
              </tableLayout>
            </group>
            <section direction="down" captionPosition="before" showCaption="repeat" caption="Do you want to add a watercraft to the policy?">
              <group iterMax="*" iterStep="1" object="Watercraft">
                <tableLayout direction="down" captionPosition="before" showCaption="once" />
                <action command="add" caption="Add New Watercraft" topic="ChangeWatercraft_Add" pageRef="NewWatercraft" />
              </group>
            </section>
          </section>
        </group>
      </page>
      <page name="Summary" caption="Summary" pageVersion="2">
        <group object="Line" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" caption="Summary of Changes" readOnly="1" class="x_condensedLayout">
            <reference idref="data.SubmissionExecute" />
            <reference idref="data.TotalPremium" caption="The full-term total is now" />
            <reference idref="data.TotalPremiumWritten" caption="The prorated total is" />
            <reference idref="data.TotalPremiumChange" caption="The cost of the change" />
            <group iterMax="*" iterStep="1" object="Watercraft">
              <section direction="across" captionPosition="above" showCaption="repeat" readOnly="1" caption="Watercraft on Policy">
                <section direction="down" captionPosition="before" showCaption="repeat" cc="LightPanel">
                  <tableLayout direction="across" captionPosition="above" showCaption="none" readOnly="1">
                    <reference idref="WatercraftOutput.SummaryDescription" caption="Watercraft" compute="1" fldClass="x_Width200" />
                  </tableLayout>
                  <tableLayout direction="across" captionPosition="above" showCaption="repeat" readOnly="1">
                    <reference idref="WatercraftCoverageOutput.Premium" caption="Full-Term Premium" />
                    <reference idref="WatercraftCoverageOutput.PremiumWritten" caption="Pro-Rated Premium" />
                  </tableLayout>
                </section>
              </section>
            </group>
          </section>
        </group>
        <nameValues>
          <nameValue value="" name="nextButton" />
          <nameValue value="" name="prevButton" />
        </nameValues>
      </page>
      <page name="MAPEndorse" caption="M A P Endorse" pageVersion="2" metaPage="1" position="header" manuscriptRef="MyAccountPortal_1_0_1" topicRef="PolicyWorkflow" pageRef="MAPEndorse" />
    </topic>
    <topic name="ChangeWatercraft_Add" caption="Add Watercraft" ruleSet="noNav">
      <page name="NewWatercraft" caption="New Watercraft" pageVersion="2">
        <group object="Watercraft" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat">
            <section direction="down" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215">
              <reference idref="WatercraftInput.Type" compute="0" onBlur="1" />
              <reference idref="WatercraftInput.Length">
                <nameValues>
                  <nameValue idref="True" name="removeZero" />
                </nameValues>
              </reference>
              <reference idref="WatercraftInput.Horsepower">
                <nameValues>
                  <nameValue idref="True" name="removeZero" />
                </nameValues>
              </reference>
              <reference idref="WatercraftInput.MilesPerHour" compute="1">
                <nameValues>
                  <nameValue idref="True" name="removeZero" />
                </nameValues>
              </reference>
            </section>
            <action command="goto" caption="OK" pageRef="Summary" topic="ChangeWatercraft_MAP" />
            <action command="delete" caption="Cancel" pageRef="Select" topic="ChangeWatercraft_MAP">
              <nameValues>
                <nameValue idref="True" name="ignoreValidation" />
              </nameValues>
            </action>
          </section>
        </group>
        <nameValues>
          <nameValue value="" name="nextButton" />
          <nameValue value="" name="prevButton" />
        </nameValues>
      </page>
    </topic>
    <topic name="ChangeSPP_MAP" caption="Add/Remove SPP" ruleSet="noNav">
      <page name="Select" caption="Add/Remove SPP" pageVersion="2">
        <group object="Line" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat">
            <group iterMax="*" iterStep="1" object="SPP">
              <tableLayout direction="across" captionPosition="above" showCaption="once" caption="Do you want to remove a SPP item from the policy?">
                <action command="markForDelete" pageRef="Summary">
                  <nameValues>
                    <nameValue idref="SPPPrivate.RemoveLabel" name="caption" />
                  </nameValues>
                </action>
              </tableLayout>
            </group>
            <section direction="down" captionPosition="before" showCaption="repeat" caption="Do you want to add a SPP item to the policy?">
              <group iterMax="*" iterStep="1" object="SPP">
                <tableLayout direction="down" captionPosition="before" showCaption="once" />
                <action command="add" caption="Add New SPP Item" topic="ChangeSPP_Add" pageRef="NewSPP" />
              </group>
            </section>
          </section>
        </group>
      </page>
      <page name="Summary" caption="Summary" pageVersion="2">
        <group object="Line" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" caption="Summary of Changes" readOnly="1" class="x_condensedLayout">
            <reference idref="data.SubmissionExecute" />
            <reference idref="data.TotalPremium" caption="The full-term total is now" />
            <reference idref="data.TotalPremiumWritten" caption="The prorated total is" />
            <reference idref="data.TotalPremiumChange" caption="The cost of the change" />
            <group iterMax="*" iterStep="1" object="SPP">
              <section direction="across" captionPosition="above" showCaption="repeat" readOnly="1" caption="Scheduled Personal Property on Policy">
                <section direction="down" captionPosition="before" showCaption="repeat" cc="LightPanel">
                  <tableLayout direction="across" captionPosition="above" showCaption="none" readOnly="1">
                    <reference idref="SPPOutput.SummaryDescription" caption="Scheduled Personal Property" compute="1" fldClass="x_Width200" />
                  </tableLayout>
                  <tableLayout direction="across" captionPosition="above" showCaption="repeat" readOnly="1">
                    <reference idref="SPPCoverageOutput.Premium" caption="Full-Term Premium" />
                    <reference idref="SPPCoverageOutput.PremiumWritten" caption="Pro-Rated Premium" />
                  </tableLayout>
                </section>
              </section>
            </group>
          </section>
        </group>
        <nameValues>
          <nameValue value="" name="nextButton" />
          <nameValue value="" name="prevButton" />
        </nameValues>
      </page>
      <page name="MAPEndorse" caption="M A P Endorse" pageVersion="2" metaPage="1" position="header" manuscriptRef="MyAccountPortal_1_0_1" topicRef="PolicyWorkflow" pageRef="MAPEndorse" />
    </topic>
    <topic name="ChangeSPP_Add" caption="Add SPP Item" ruleSet="noNav">
      <page name="NewSPP" caption="New SPP Item" pageVersion="2">
        <group object="SPP" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat">
            <section direction="down" captionPosition="above" showCaption="repeat" fldClass="x_InputWidth215">
              <reference idref="SPPInput.Type" onBlur="1" />
              <reference idref="SPPInput.Description" />
              <reference idref="SPPInput.Limit" onBlur="1">
                <nameValues>
                  <nameValue idref="True" name="removeZero" />
                </nameValues>
              </reference>
              <reference idref="SPPInput.Vaulted" compute="1" />
              <reference idref="SPPInput.BreakageCoverage" compute="1" />
              <reference idref="SPPInput.Blanket" compute="1" />
            </section>
            <action command="goto" caption="OK" pageRef="Summary" topic="ChangeSPP_MAP" />
            <action command="delete" caption="Cancel" pageRef="Select" topic="ChangeSPP_MAP">
              <nameValues>
                <nameValue idref="True" name="ignoreValidation" />
              </nameValues>
            </action>
          </section>
        </group>
        <nameValues>
          <nameValue value="" name="nextButton" />
          <nameValue value="" name="prevButton" />
        </nameValues>
      </page>
    </topic>
    <topic name="ChangeCoverage_MAP" caption="Modify Coverage" ruleSet="noNav">
      <page name="Coverage" caption="Coverage" pageVersion="2" topicRef="Consumer" pageRef="Coverage" />
      <page name="AdditionalCoverage" caption="Additional Coverage" pageVersion="2" topicRef="Consumer" pageRef="AdditionalCoverage" />
      <page name="Summary" caption="Summary" pageVersion="2">
        <group object="Line" iterMax="*" iterStep="1">
          <section direction="down" captionPosition="before" showCaption="repeat" readOnly="1" class="x_condensedLayout" caption="Summary of Changes">
            <reference idref="data.SubmissionExecute" />
            <reference idref="data.TotalPremium" caption="The full-term total is now" />
            <reference idref="data.TotalPremiumWritten" caption="The prorated total is" />
            <reference idref="data.TotalPremiumChange" caption="The cost of the change" />
            <group iterMax="*" iterStep="1" object="Risk">
              <section direction="across" captionPosition="above" showCaption="repeat" readOnly="1" caption="Coverages">
                <section direction="down" captionPosition="before" showCaption="repeat" cc="LightPanel">
                  <section direction="down" captionPosition="before" showCaption="repeat" readOnly="1">
                    <reference idref="DwellingOutput.AdjustedBasePremium" />
                    <reference idref="CoverageBOtherStructuresOutput.Premium" caption="Other Structures (B)">
                      <nameValues>
                        <nameValue idref="DwellingPrivate.FormIsCondoOrTenant" name="eliminate" />
                      </nameValues>
                    </reference>
                    <reference idref="CoverageCPersonalPropertyHO3Output.Premium" caption="Personal Property (C)">
                      <nameValues>
                        <nameValue idref="DwellingPrivate.FormIsCondoOrTenant" name="eliminate" />
                      </nameValues>
                    </reference>
                    <reference idref="CoverageDLossOfUseOutput.Premium" caption="Loss of Use (D)" />
                    <reference idref="CoverageELiabilityOutput.Premium" caption="Personal Liability (E)" />
                    <reference idref="CoverageFMedicalOutput.Premium" caption="Medical Payments (F)" />
                    <reference idref="SectionICoveragesOutput.SectionIPremium" caption="Optional Property Coverages" />
                    <reference idref="SectionIICoveragesOutput.SectionIIPremium" caption="Optional Liability Coverages" />
                  </section>
                </section>
              </section>
            </group>
          </section>
        </group>
        <nameValues>
          <nameValue value="" name="nextButton" />
          <nameValue value="" name="prevButton" />
        </nameValues>
      </page>
      <page name="MAPEndorse" caption="M A P Endorse" pageVersion="2" metaPage="1" position="header" manuscriptRef="MyAccountPortal_1_0_1" topicRef="PolicyWorkflow" pageRef="MAPEndorse" />
    </topic>
  </topics>
  <documents>
    <documentSet name="Binder" paperBinNum="0" printDefault="Selected" inherited="DCT_ProductBase_1_0_0_0" override="1" prevPage="">
      <scope name="data" increment="1" startIter="1" endIter="*" />
      <document>
        <subdoc name="QUICKBINDERTop.DOC" path="Marketplace|PersonalHome|US|" />
        <subdoc name="QUICKBINDERCoverages.DOC" path="Marketplace|PersonalHome|US|">
          <scope name="Line" increment="1" startIter="1" endIter="*" />
          <scope name="Risk" increment="1" startIter="1" endIter="*" />
        </subdoc>
        <subdoc name="QUICKBINDERBottom.DOC" path="Marketplace|PersonalHome|US|" />
      </document>
      <merge>
        <mergeField name="PolicyOutputPolicyNumber1" idref="PolicyOutput.PolicyNumber" iter="1" formatValue="" />
        <mergeField name="PolicyInputEffectiveDate1" idref="PolicyInput.EffectiveDate" iter="1" formatSpecifier="format" formatValue="mm/dd/yyyy" />
        <mergeField name="PolicyInputExpirationDate1" idref="PolicyInput.ExpirationDate" iter="1" formatSpecifier="format" formatValue="mm/dd/yyyy" />
        <mergeField name="AccountInputName1" idref="AccountInput.Name" iter="1" formatValue="" />
        <mergeField name="AccountInputAddress11" idref="AccountInput.Address1" iter="1" formatValue="" />
        <mergeField name="AccountInputAddress21" idref="AccountInput.Address2" iter="1" formatValue="" />
        <mergeField name="AccountInputCity1" idref="AccountInput.City" iter="1" formatValue="" />
        <mergeField name="AccountInputState1" idref="AccountInput.State" iter="1" formatValue="" />
        <mergeField name="AccountInputZipCode1" idref="AccountInput.ZipCode" iter="1" formatValue="" />
        <mergeField name="AgencyInputName1" idref="AgencyInput.Name" iter="1" formatValue="" />
        <mergeField name="ProducerInputFullName1" idref="ProducerInput.FullName" iter="2" formatValue="" />
        <mergeField name="PolicyOutputPremiumWritten1" idref="data.TotalPremiumWritten" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="AgencyInputAddress1" idref="AgencyInput.Address1" iter="1" formatValue="" />
        <mergeField name="AgencyInputAddress2" idref="AgencyInput.Address2" iter="1" formatValue="" />
        <mergeField name="AgencyInputCity" idref="AgencyInput.City" iter="1" formatValue="" />
        <mergeField name="AgencyInputState" idref="AgencyInput.State" iter="1" formatValue="" />
        <mergeField name="AgencyInputZipCode" idref="AgencyInput.ZipCode" iter="1" formatValue="" />
        <mergeField name="CovALim" idref="CoverageADwellingInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovAPrem" idref="CoverageADwellingOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovBLim" idref="CoverageBOtherStructuresInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovBPrem" idref="CoverageBOtherStructuresOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovCLim" idref="DwellingPrivate.PolicyCoverageCLimit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovCPrem" idref="DwellingPrivate.PolicyCoverageCPremium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovDLim" idref="CoverageDLossOfUseInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovDPrem" idref="CoverageDLossOfUseOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovELim" idref="CoverageELiabilityInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovEPrem" idref="CoverageELiabilityOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovFLim" idref="CoverageFMedicalInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovFPrem" idref="CoverageFMedicalOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="TotalPremium" idref="PolicyPremiums.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="OptPropCov" idref="SectionICoveragesOutput.SectionIPremium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="OptLiabCov" idref="SectionIICoveragesOutput.SectionIIPremium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="SPP" idref="SPPSubtotals.SPPTotalPremium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="Watercraft" idref="WatercraftSubtotals.WatercraftTotalPremium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="AutoHomeDiscount" idref="AutoHomeDiscountOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
      </merge>
    </documentSet>
    <documentSet name="Worksheet" paperBinNum="0" printDefault="Selected" inherited="DCT_ProductBase_1_0_0_0" prevPage="" override="1">
      <scope name="data" increment="1" startIter="1" endIter="*" />
      <document>
        <subdoc name="Rating Worksheet.doc" path="Marketplace|PersonalHome|US|" />
        <subdoc name="Dwelling Worksheet.doc" path="Marketplace|PersonalHome|US|" />
        <subdoc name="SPP Worksheet Header.doc" path="Marketplace|PersonalHome|US|" condition="LinePrivate.ShowSPPSummary" />
        <subdoc name="SPP Worksheet.doc" path="Marketplace|PersonalHome|US|" condition="LinePrivate.ShowSPPSummary" />
        <subdoc name="Watercraft Worksheet Header.doc" path="Marketplace|PersonalHome|US|" condition="LinePrivate.ShowWatercraftSummary" />
        <subdoc name="Watercraft Worksheet.doc" path="Marketplace|PersonalHome|US|" condition="LinePrivate.ShowWatercraftSummary" />
      </document>
      <scope name="Account" increment="1" startIter="1" endIter="*" />
      <scope name="Policy" increment="1" startIter="1" endIter="*" />
      <merge>
        <mergeField name="AccountName" idref="AccountInput.Name" iter="1" formatValue="" />
        <mergeField name="EffectiveDate" idref="PolicyInput.EffectiveDate" iter="1" formatSpecifier="format" formatValue="mm/dd/yyyy" />
        <mergeField name="PolicyPremium" idref="PolicyPremiums.Premium" iter="1" formatSpecifier="formatField" formatValue="" />
        <mergeField name="LinePremium" idref="LinePurePremiums.Premium" iter="1" formatValue="" wsCond="True" readOnly="True" wsSuppressRound="1" wsDepth="1" />
        <mergeField name="RiskPremium" idref="RiskPurePremiums.Premium" iter="1" formatValue="" wsCond="True" wsSuppressRound="1" />
        <mergeField name="SPPPremium" idref="SPPSubtotals.SPPTotalPremium" iter="1" formatValue="" wsCond="True" wsSuppressRound="1" />
        <mergeField name="WatercraftPremium" idref="WatercraftSubtotals.WatercraftTotalPremium" iter="1" formatValue="" wsCond="True" wsSuppressRound="1" />
        <mergeField name="LOB" idref="LinePrivate.LOBName" iter="1" formatValue="" />
        <mergeField name="Form" idref="DwellingInput.Form" iter="1" formatSpecifier="codedField" formatValue="" />
        <mergeField name="PropAddress" />
        <mergeField name="City" />
        <mergeField name="State" />
        <mergeField name="ZipCode" />
        <mergeField name="Usage" />
        <mergeField name="StructureType" />
        <mergeField name="YearBuilt" />
        <mergeField name="ConstructionType" />
        <mergeField name="ProtectionClass" />
        <mergeField name="DwellLimit" />
        <mergeField name="CoverageB" />
        <mergeField name="CoverageC" />
        <mergeField name="CoverageD" />
        <mergeField name="CoverageE" />
        <mergeField name="CoverageF" />
        <mergeField name="CoverageABase" />
        <mergeField name="DwellingForm" />
        <mergeField name="FormFac" />
        <mergeField name="CovAFormFacAccum" />
        <mergeField name="ProtClass" />
        <mergeField name="ProtectionConstFac" />
        <mergeField name="CovAKeyPremium" />
        <mergeField name="DwellLimitFac" />
        <mergeField name="BaseRateBeforeCov" />
        <mergeField name="FireResisFac" />
        <mergeField name="FireResisPrem" />
        <mergeField name="BaseWithFireResisAccum" />
        <mergeField name="ThreeFourFamFac" />
        <mergeField name="ThreeFourFamilyPrem" />
        <mergeField name="BaseWithThreeFourFamAccum" />
        <mergeField name="TownRowHouseFac" />
        <mergeField name="TownRowHousePrem" />
        <mergeField name="BaseWithTownRowHouseAccum" />
        <mergeField name="LossSurchargeFac" />
        <mergeField name="LossSurchargePrem" />
        <mergeField name="LossSurchargeAccum" />
        <mergeField name="Deductible" />
        <mergeField name="DeductibleFac" />
        <mergeField name="DeductiblePrem" />
        <mergeField name="DeductibleAccum" />
        <mergeField name="CovCHO3Fac" />
        <mergeField name="CovCHO3Prem" />
        <mergeField name="CovCHO3Accum" />
        <mergeField name="RCCFac" />
        <mergeField name="RCCPrem" />
        <mergeField name="RCCAccum" />
        <mergeField name="ProtectiveDeviceFac" />
        <mergeField name="ProtectiveDevicePrem" />
        <mergeField name="ProtectiveDeviceAccum" />
        <mergeField name="InflationGuardFac" />
        <mergeField name="InflationGuardPrem" />
        <mergeField name="InflationGuardAccum" />
        <mergeField name="WoodStoveSchgFac" />
        <mergeField name="WoodStoveSchgPrem" />
        <mergeField name="WoodStoveSchgAccum" />
        <mergeField name="NewHomeDsctFac" />
        <mergeField name="NewHomeDsctPrem" />
        <mergeField name="NewHomeDsctAccum" />
        <mergeField name="NonSmokerDsctFac" />
        <mergeField name="NonSmokerDsctPrem" />
        <mergeField name="NonSmokerDsctAccum" />
        <mergeField name="CoverageAPrem" />
        <mergeField name="CoverageBPrem" />
        <mergeField name="CoverageBLimit" />
        <mergeField name="CoverageBIncludedLimit" />
        <mergeField name="CoverageBBaseRate" />
        <mergeField name="CoverageDPrem" />
        <mergeField name="CoverageDLimit" />
        <mergeField name="CoverageDIncludedLimit" />
        <mergeField name="CoverageDBaseRate" />
        <mergeField name="CoverageEPrem" />
        <mergeField name="CoverageEBaseRate" />
        <mergeField name="CoverageELimit" />
        <mergeField name="CoverageELimitFac" />
        <mergeField name="CoverageFBaseRate" />
        <mergeField name="CoverageFLimit" />
        <mergeField name="CoverageFLimitFac" />
        <mergeField name="BusinessPropertyPrem" />
        <mergeField name="BusinessPropertyLimit" />
        <mergeField name="BusinessPropertyIncludedLimit" />
        <mergeField name="BusinessPropertyBaseRate" />
        <mergeField name="AddAltPrem" />
        <mergeField name="AddAltLimit" />
        <mergeField name="AddAltIncludedLimit" />
        <mergeField name="AddAltEachAddlRate" />
        <mergeField name="AddAltSpecialRate" />
        <mergeField name="CrediCardPrem" />
        <mergeField name="CreditCardBaseRate" />
        <mergeField name="IdentityFraudPrem" />
        <mergeField name="IdentityFraudBaseRate" />
        <mergeField name="LossAssessmentPrem" />
        <mergeField name="LossAssessmentLimit" />
        <mergeField name="LossAssessmentBaseRate" />
        <mergeField name="OthrStructRentOtherPrem" />
        <mergeField name="OthrStructRentOtherLimit" />
        <mergeField name="OthrStructRentOtherIncludedLimit" />
        <mergeField name="OthrStructRentOtherBaseRate" />
        <mergeField name="TotalPrem" />
      </merge>
    </documentSet>
    <documentSet name="Quote" paperBinNum="0" printDefault="Selected" inherited="DCT_ProductBase_1_0_0_0" override="1" prevPage="">
      <scope name="data" increment="1" startIter="1" endIter="*" />
      <document>
        <subdoc name="Personal Lines Quote Letter.doc" path="Marketplace|PersonalHome|US|" />
        <subdoc name="PersonalHomeQuoteLetterCoverages.doc" path="Marketplace|PersonalHome|US|" />
      </document>
      <scope name="Account" increment="1" startIter="1" endIter="*" />
      <scope name="Policy" increment="1" startIter="1" endIter="*" />
      <scope name="Line" increment="1" startIter="1" endIter="*" />
      <merge>
        <mergeField name="Applicant Name" idref="AccountInput.Name" iter="1" formatValue="" />
        <mergeField name="Applicant Address1" idref="AccountInput.Address1" iter="1" formatValue="" />
        <mergeField name="Applicant Address2" idref="AccountInput.Address2" iter="1" formatValue="" />
        <mergeField name="Applicant City" idref="AccountInput.City" iter="1" formatValue="" />
        <mergeField name="Applicant State" idref="AccountInput.State" iter="1" formatValue="" />
        <mergeField name="Applicant Zip" idref="AccountInput.ZipCode" iter="1" formatValue="" />
        <mergeField name="Policy Premium" idref="PolicyPremiums.Premium" iter="1" formatSpecifier="format" formatValue="$???,???.??" />
        <mergeField name="Policy EffDate" idref="PolicyInput.EffectiveDate" iter="1" formatSpecifier="format" formatValue="mm/dd/yyyy" />
        <mergeField name="Policy ExpDate" idref="PolicyInput.ExpirationDate" iter="1" formatSpecifier="format" formatValue="mm/dd/yyyy" />
        <mergeField name="Producer Name" idref="ProducerInput.FullName" iter="1" formatValue="" />
        <mergeField name="Applicant FirstName" idref="AccountInput.Name" iter="2" formatValue="" />
        <mergeField name="Usage" idref="DwellingInput.UseType" iter="1" formatValue="" />
        <mergeField name="Construction" idref="DwellingInput.Construction" iter="1" formatValue="" />
        <mergeField name="Structure" idref="DwellingInput.BuildingType" iter="1" formatValue="" />
        <mergeField name="Protection" idref="DwellingInput.RatedProtectionClass" iter="1" formatValue="" />
        <mergeField name="YearBuilt" idref="DwellingInput.YearBuilt" iter="1" formatValue="" />
        <mergeField name="LocationAddress" idref="LocationOutputNonShredded.AddressDisplay" iter="1" formatValue="" />
        <mergeField name="DwellingForm" idref="DwellingInput.Form" iter="1" formatSpecifier="coded" formatValue="HO1|Homeowner - Basic|HO2|Homeowner - Broad|HO3|Homeowner|HO4|Renter|HO6|Condo" />
        <mergeField name="CovALim" idref="CoverageADwellingInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovAPrem" idref="CoverageADwellingOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovBLim" idref="CoverageBOtherStructuresInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovBPrem" idref="CoverageBOtherStructuresOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovCLim" idref="DwellingPrivate.PolicyCoverageCLimit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovCPrem" idref="DwellingPrivate.PolicyCoverageCPremium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovDLim" idref="CoverageDLossOfUseInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovDPrem" idref="CoverageDLossOfUseOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovELim" idref="CoverageELiabilityInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovEPrem" idref="CoverageELiabilityOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovFLim" idref="CoverageFMedicalInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovFPrem" idref="CoverageFMedicalOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="TotalPremium" idref="PolicyPremiums.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="OptPropCov" idref="SectionICoveragesOutput.SectionIPremium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="OptLiabCov" idref="SectionIICoveragesOutput.SectionIIPremium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="SPP" idref="SPPSubtotals.SPPTotalPremium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="Watercraft" idref="WatercraftSubtotals.WatercraftTotalPremium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="QuoteNumber" idref="PolicyOutput.QuoteNumber" iter="1" formatValue="" />
        <mergeField name="AutoHomeDiscount" idref="AutoHomeDiscountOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
      </merge>
    </documentSet>
    <documentSet name="PolicyForms" paperBinNum="0" printDefault="Selected" inherited="DCT_ProductBase_1_0_0_0" condition="PolicyPrivate.ShowPolicyForms" override="1" prevPage="">
      <scope name="data" increment="1" startIter="1" endIter="*" />
      <document>
        <subdoc name="PolicyForms.doc" path="Marketplace|PersonalHome|US|" />
      </document>
    </documentSet>
    <documentSet name="ManuScriptEndorsementForm" paperBinNum="0" printDefault="Selected" condition="LinePrivate.ManuScriptCoverageFormRule" inherited="DCT_ProductBase_1_0_0_0" override="1" prevPage="">
      <scope name="Line" increment="1" startIter="1" endIter="*" />
      <document>
        <subdoc name="ManuScriptEndorsementForm.doc" path="Marketplace|PersonalHome|US|" />
        <subdoc name="ManuScriptEndorsementFormBottom.doc" path="Marketplace|PersonalHome|US|">
          <scope name="ManuScriptCoverage" increment="1" startIter="1" endIter="*" />
        </subdoc>
      </document>
      <merge>
        <mergeField name="ManuScriptDescription" idref="ManuScriptCoverageInput.Description" iter="1" formatValue="" />
        <mergeField name="ManuScriptPremium" idref="ManuScriptCoverageOutput.Premium" iter="1" formatSpecifier="formatField" formatValue="" />
      </merge>
    </documentSet>
    <documentSet name="QuoteLetter" paperBinNum="0" printDefault="Selected" prevPage="Worksheet" inherited="DCT_ProductBase_PersonalHome_1_0_0_0" override="1">
      <scope name="data" increment="1" startIter="1" endIter="*" />
      <document>
        <subdoc name="QuoteLetterTop.doc" path="Marketplace|PersonalHome|US|" />
        <subdoc name="QuoteLetterCoverages.doc" path="Marketplace|PersonalHome|US|" />
        <subdoc name="QuoteLetterBottom.doc" path="Marketplace|PersonalHome|US|" />
      </document>
      <merge>
        <mergeField name="City" idref="AccountInput.City" iter="1" formatValue="" />
        <mergeField name="State" idref="AccountInput.State" iter="1" formatValue="" />
        <mergeField name="ZipCode" idref="AccountInput.ZipCode" iter="1" formatValue="" />
        <mergeField name="Usage" idref="DwellingInput.UseType" iter="1" formatValue="" />
        <mergeField name="StructureType" idref="DwellingInput.BuildingType" iter="1" formatValue="" />
        <mergeField name="YearBuilt" idref="DwellingInput.YearBuilt" iter="1" formatValue="" />
        <mergeField name="ConstructionType" idref="DwellingInput.Construction" iter="1" formatValue="" />
        <mergeField name="ProtectionClass" idref="DwellingInput.RatedProtectionClass" iter="1" formatValue="" />
        <mergeField name="CoverageA" idref="CoverageADwellingInput.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="PremiumA" idref="CoverageADwellingOutput.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="CoverageB" idref="CoverageBOtherStructuresInput.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="PremiumB" idref="CoverageBOtherStructuresOutput.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="CoverageC" idref="CoverageCPersonalPropertyHO3Input.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="PremiumC" idref="CoverageCPersonalPropertyHO3Output.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="CoverageD" idref="CoverageDLossOfUseInput.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="PremiumD" idref="CoverageDLossOfUseOutput.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="CoverageE" idref="CoverageELiabilityInput.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="PremiumE" idref="CoverageELiabilityOutput.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="CoverageF" idref="CoverageFMedicalInput.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="PremiumF" idref="CoverageFMedicalOutput.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="PolicyTerm" idref="PolicyInput.Term" iter="1" formatValue="" />
        <mergeField name="TotalPremium" idref="PolicyPurePremiums.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="AgentPhone" />
        <mergeField name="AgentName" idref="AgencyInput.Name" iter="1" formatValue="" />
        <mergeField name="Date" iter="1" formatValue="" idref="DateTime.Today" />
        <mergeField name="TodayDate" idref="DateTime.CurrentDate" iter="1" formatSpecifier="format" formatValue="mm/dd/yyyy" />
        <mergeField name="FirstName" idref="AccountInput.FirstName" iter="1" formatValue="" />
        <mergeField name="LastName" idref="AccountInput.LastName" iter="1" formatValue="" />
        <mergeField name="PropAddress" idref="AccountInput.Address1" iter="1" formatValue="" />
      </merge>
    </documentSet>
    <printJob name="Quote" condition="PolicyPrivate.IsQuote" override="1">
      <printJob name="Quote" idref="RiskManuscript.FormsManuScriptID" />
    </printJob>
    <documentSet name="CancellationNotice" paperBinNum="0" printDefault="Selected" prevPage="DecPage" inherited="DCT_ProductBase_PersonalHome_1_0_0_0" override="1">
      <scope name="data" increment="1" startIter="1" endIter="*" />
      <document>
        <subdoc name="CancellationNotice.doc" path="marketplace\personalhome\us\|" />
      </document>
      <merge>
        <mergeField name="EffectiveDate" idref="PolicyInput.EffectiveDate" iter="1" formatSpecifier="format" formatValue="mm/dd/yyyy" />
        <mergeField name="Name" idref="AccountInput.Name" iter="1" formatValue="" />
        <mergeField name="AgentName" idref="ProducerInput.FullName" iter="1" formatValue="" />
        <mergeField name="Address" idref="AccountInput.Address1" iter="1" formatValue="" />
        <mergeField name="AgentAddress" idref="AgencyInput.Address1" iter="1" formatValue="" />
        <mergeField name="City" idref="AccountInput.City" iter="1" formatValue="" />
        <mergeField name="State" idref="AccountInput.State" iter="1" formatValue="" />
        <mergeField name="Zip" idref="AccountInput.ZipCode" iter="1" formatValue="" />
        <mergeField name="AgentCity" idref="AgencyInput.City" iter="1" formatValue="" />
        <mergeField name="AgentState" idref="AgencyInput.State" iter="1" formatValue="" />
        <mergeField name="AgentZip" idref="AgencyInput.ZipCode" iter="1" formatValue="" />
        <mergeField name="PolicyNumber" idref="PolicyOutput.PolicyNumber" iter="1" formatValue="" />
        <mergeField name="ExpirationDate" idref="PolicyInput.ExpirationDate" iter="1" formatSpecifier="format" formatValue="mm/dd/yyyy" />
        <mergeField name="TotalPremium" idref="PolicyPremiums.Premium" iter="1" formatSpecifier="formatField" formatValue="" />
        <mergeField name="CancelEffectiveDate" readOnly="True" idref="CurrentTransaction.EffectiveDate" iter="1" formatSpecifier="format" formatValue="mm/dd/yyyy" />
      </merge>
    </documentSet>
    <documentSet name="DecPage" paperBinNum="0" printDefault="Selected" prevPage="MarketplaceRatingWorksheet" inherited="DCT_ProductBase_PersonalHome_1_0_0_0" override="1">
      <scope name="data" increment="1" startIter="1" endIter="*" />
      <document>
        <subdoc name="HO Dec Top.doc" path="Marketplace|PersonalHome|US|" />
        <subdoc name="HO Dec Summary.doc" path="Marketplace|PersonalHome|US|" />
        <subdoc name="Dwelling Information.doc" path="Marketplace|PersonalHome|US|" />
        <subdoc name="HOPolicyDecSppTitles.doc" path="Marketplace|PersonalHome|US|" />
        <subdoc name="HOPolicyDecSppList.doc" path="Marketplace|PersonalHome|US|" condition="LinePrivate.ShowSPPSummary">
          <scope name="SPP" increment="1" startIter="1" endIter="*" />
        </subdoc>
        <subdoc name="HOPolicyUWComm.doc" path="Marketplace|PersonalHome|US|" />
      </document>
      <merge>
        <mergeField name="First" idref="AccountInput.FirstName" iter="1" formatValue="" />
        <mergeField name="MiddleInitial" idref="AccountInput.MiddleName" iter="1" formatValue="" />
        <mergeField name="LastName" idref="AccountInput.LastName" iter="1" formatValue="" />
        <mergeField name="AgentName" idref="AgencyInput.Name" iter="1" formatValue="" />
        <mergeField name="AgentPhone" />
        <mergeField name="Address" idref="AccountInput.Address1" iter="1" formatValue="" />
        <mergeField name="AgentAddress" idref="AgencyInput.Address1" iter="1" formatValue="" />
        <mergeField name="City" idref="AccountInput.City" iter="1" formatValue="" />
        <mergeField name="State" idref="AccountInput.State" iter="1" formatValue="" />
        <mergeField name="Zip" idref="AccountInput.ZipCode" iter="1" formatValue="" />
        <mergeField name="AgentCity" idref="AgencyInput.City" iter="1" formatValue="" />
        <mergeField name="AgentState" idref="AgencyInput.State" iter="1" formatValue="" />
        <mergeField name="AgentZip" idref="AgencyInput.ZipCode" iter="1" formatValue="" />
        <mergeField name="PolicyNumber" idref="PolicyOutput.PolicyNumber" iter="1" formatValue="" />
        <mergeField name="EffectiveDate" idref="PolicyInput.EffectiveDate" iter="1" formatSpecifier="format" formatValue="mm/dd/yyyy" />
        <mergeField name="ExpirationDate" idref="PolicyInput.ExpirationDate" iter="1" formatSpecifier="format" formatValue="mm/dd/yyyy" />
        <mergeField name="SPPType1" />
        <mergeField name="SPPDesc1" />
        <mergeField name="SPPLimit1" />
        <mergeField name="Comment" />
        <mergeField name="LocIter" />
        <mergeField name="LocationDesc" />
        <mergeField name="Dwelling Usage" idref="DwellingInput.UseType" iter="1" formatValue="" />
        <mergeField name="ConstType" idref="DwellingInput.Construction" iter="1" formatValue="" />
        <mergeField name="StructureType" />
        <mergeField name="ProtClass" idref="DwellingInput.RatedProtectionClass" iter="1" formatValue="" />
        <mergeField name="YearBuilt" idref="DwellingInput.YearBuilt" iter="1" formatValue="" />
        <mergeField name="NumFam" idref="DwellingInput.NumberOfFamilies" iter="1" formatValue="" />
        <mergeField name="RCDwelling" />
        <mergeField name="RCContents" />
        <mergeField name="MultiLine" />
        <mergeField name="NewHome" />
        <mergeField name="BurglarAlarm" idref="DwellingInput.BurglarAlarm" iter="1" formatValue="" />
        <mergeField name="FireAlarm" idref="DwellingInput.FireAlarm" iter="1" formatValue="" />
        <mergeField name="CoverageA" idref="CoverageADwellingInput.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="PremiumA" idref="CoverageADwellingOutput.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="CoverageB" idref="CoverageBOtherStructuresInput.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="PremiumB" idref="CoverageBOtherStructuresOutput.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="CoverageC" idref="CoverageCPersonalPropertyHO3Input.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="PremiumC" idref="CoverageCPersonalPropertyHO3Output.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="CoverageD" idref="CoverageDLossOfUseInput.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="PremiumD" idref="CoverageDLossOfUseOutput.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="CoverageE" idref="CoverageELiabilityInput.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="PremiumE" idref="CoverageELiabilityOutput.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="CoverageF" idref="CoverageFMedicalInput.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="PremiumF" idref="CoverageFMedicalOutput.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="BusinessProp" idref="BusinessPropertyInput.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="BusinessPropPrem" idref="BusinessPropertyOutput.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="EQDed" idref="EarthquakeInput.Deductible" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="EQDedPrem" idref="EarthquakeOutput.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="EQLoss" />
        <mergeField name="EQLossPrem" />
        <mergeField name="LossAssess" idref="LossAssessmentInput.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="LossAssessPrem" idref="LossAssessmentOutput.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="OtherStructure" idref="OtherStructuresRentedToOthersInput.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="OtherStructurePrem" idref="OtherStructuresRentedToOthersOutput.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="PerPropOthRes" idref="PersonalPropertyOtherResidenceInput.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="PerPropOthResPrem" idref="PersonalPropertyOtherResidenceOutput.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="Watercraft" idref="" iter="1" formatValue="" />
        <mergeField name="WatercraftPrem" idref="" iter="1" />
        <mergeField name="InflationGuard" idref="InflationGuardInput.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="InflationPremium" idref="InflationGuardOutput.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="FarmPerLiab" />
        <mergeField name="FarmPerLiabPrem" />
        <mergeField name="IncedFarm" idref="IncidentalFarmingPersonalLiabilityInput.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="IncedFarmPrem" idref="IncidentalFarmingPersonalLiabilityOutput.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
      </merge>
    </documentSet>
    <printJob name="_Issue" condition="False" override="1">
      <printDoc name="DecPage" />
      <printDoc name="PolicyForms" />
      <printDoc name="ManuScriptEndorsementForm" />
    </printJob>
    <printJob name="_Cancel">
      <printDoc name="CancellationNotice" />
    </printJob>
    <documentSet name="MarketplaceRatingWorksheet" paperBinNum="0" printDefault="Selected" prevPage="Worksheet" inherited="DCT_ProductBase_PersonalHome_1_0_0_0" override="1">
      <scope name="data" increment="1" startIter="1" endIter="*" />
      <document>
        <subdoc name="Rating Worksheet.doc" path="Marketplace|PersonalHome|US|" />
      </document>
      <merge>
        <mergeField name="CoverageABase" idref="CoverageADwellingPrivate.BaseRate" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="FormFac" idref="CoverageADwellingPrivate.FormFactor" iter="1" formatValue="" />
        <mergeField name="CovAFormFacAccum" idref="CoverageADwellingPrivate.CovABaseFormFacCalc" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="ProtectionConstFac" idref="CoverageADwellingPrivate.ProtectionConstructionFactor" iter="1" formatValue="" />
        <mergeField name="CovAKeyPremium" idref="CoverageADwellingPrivate.KeyPremium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="DwellingForm" idref="DwellingInput.Form" iter="1" formatValue="" />
        <mergeField name="ProtClass" idref="DwellingInput.RatedProtectionClass" iter="1" formatValue="" />
        <mergeField name="DwellLimit" idref="CoverageADwellingInput.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="DwellLimitFac" idref="CoverageADwellingPrivate.KeyFactor" iter="1" formatValue="" />
        <mergeField name="BaseRateBeforeCov" idref="CoverageADwellingPrivate.BasePremiumBeforeCoverage" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="FireResisFac" idref="FireResistiveDiscountPrivate.Factor" iter="1" formatValue="" />
        <mergeField name="FireResisPrem" idref="FireResistiveDiscountOutput.Amount" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="BaseWithFireResisAccum" idref="CoverageADwellingPrivate.BasePremiumBeforeCovWithFireResistive" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="ThreeFourFamFac" idref="ThreeAndFourFamilySurchargePrivate.Factor" iter="1" formatValue="" />
        <mergeField name="ThreeFourFamilyPrem" idref="ThreeAndFourFamilySurchargeOutput.Amount" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="BaseWithThreeFourFamAccum" idref="CoverageADwellingPrivate.BasePremiumBeforeCovWithThreeFourFamily" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="TownRowHouseFac" idref="TownhouseRowhouseSurchargePrivate.Factor" iter="1" formatValue="" />
        <mergeField name="TownRowHousePrem" idref="TownhouseRowhouseSurchargeOutput.Amount" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="BaseWithTownRowHouseAccum" idref="CoverageADwellingOutput.BasePremium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="LossSurchargeFac" idref="LossSurchargePrivate.Factor" iter="1" formatValue="" />
        <mergeField name="LossSurchargePrem" idref="LossSurchargeOutput.Amount" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="LossSurchargeAccum" idref="CoverageADwellingPrivate.LossSurchargeCalc" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="Deductible" idref="DwellingInput.Deductible" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="DeductibleFac" idref="DeductiblePrivate.Factor" iter="1" formatValue="" />
        <mergeField name="DeductiblePrem" idref="DwellingOutput.DeductibleCalculation" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="DeductibleAccum" idref="CoverageADwellingPrivate.DeductibleCalc" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="CovCHO3Fac" idref="" iter="1" formatValue="" />
        <mergeField name="CovCHO3Prem" idref="CoverageCPersonalPropertyHO3Output.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="CovCHO3Accum" idref="CoverageADwellingPrivate.CovCHO3Calc" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="RCCFac" idref="ReplacementCostContentsPrivate.Factor" iter="1" formatValue="" />
        <mergeField name="RCCPrem" idref="ReplacementCostContentsOutput.Amount" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="RCCAccum" idref="CoverageADwellingPrivate.ReplacementCostContentsCalc" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="ProtectiveDeviceFac" idref="ProtectiveDeviceDiscountPrivate.Factor" iter="1" formatValue="" />
        <mergeField name="ProtectiveDevicePrem" idref="ProtectiveDeviceDiscountOutput.Amount" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="ProtectiveDeviceAccum" idref="CoverageADwellingPrivate.ProtectiveDeviceDsctCalc" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="InflationGuardFac" idref="InflationGuardPrivate.Factor" iter="1" formatValue="" />
        <mergeField name="InflationGuardPrem" idref="InflationGuardOutput.Amount" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="InflationGuardAccum" idref="CoverageADwellingPrivate.InflationGuardCalc" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="WoodStoveSchgFac" idref="WoodStoveSurchargePrivate.Factor" iter="1" formatValue="" />
        <mergeField name="WoodStoveSchgPrem" idref="WoodStoveSurchargeOutput.Amount" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="WoodStoveSchgAccum" idref="CoverageADwellingPrivate.WoodStoveSurchargeCalc" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="NewHomeDsctFac" idref="NewHomeDiscountOutput.Factor" iter="1" formatValue="" />
        <mergeField name="NewHomeDsctPrem" idref="NewHomeDiscountOutput.Amount" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="NewHomeDsctAccum" idref="CoverageADwellingPrivate.NewHomeDsctCalc" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="NonSmokerDsctFac" idref="NonSmokerDiscountPrivate.Factor" iter="1" formatValue="" />
        <mergeField name="NonSmokerDsctPrem" idref="NonSmokerDiscountOutput.Amount" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="NonSmokerDsctAccum" idref="CoverageADwellingPrivate.NonSmokerDsctCalc" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="PropAddress" idref="AccountInput.Address1" iter="1" formatValue="" />
        <mergeField name="City" idref="AccountInput.City" iter="1" formatValue="" />
        <mergeField name="State" idref="AccountInput.State" iter="1" formatValue="" />
        <mergeField name="ZipCode" idref="AccountInput.ZipCode" iter="1" formatValue="" />
        <mergeField name="Usage" idref="DwellingInput.UseType" iter="1" formatValue="" />
        <mergeField name="StructureType" idref="DwellingInput.BuildingType" iter="1" formatValue="" />
        <mergeField name="YearBuilt" idref="DwellingInput.YearBuilt" iter="1" formatValue="" />
        <mergeField name="ConstructionType" idref="DwellingInput.Construction" iter="1" formatValue="" />
        <mergeField name="ProtectionClass" idref="DwellingInput.RatedProtectionClass" iter="1" formatValue="" />
        <mergeField name="CoverageA" idref="CoverageADwellingInput.Limit" iter="1" formatValue="" />
        <mergeField name="CoverageB" idref="CoverageBOtherStructuresInput.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="CoverageC" idref="CoverageCPersonalPropertyHO3Input.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="CoverageD" idref="CoverageDLossOfUseInput.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="CoverageE" idref="CoverageELiabilityInput.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="CoverageF" idref="CoverageFMedicalInput.Limit" iter="1" formatSpecifier="field" formatValue="FormatMask.Limit" />
        <mergeField name="CoverageAPrem" idref="CoverageADwellingOutput.Premium" iter="1" formatSpecifier="field" formatValue="FormatMask.PremiumPenniesDisplay" />
        <mergeField name="CoverageBPrem" formatSpecifier="field" iter="1" formatValue="FormatMask.PremiumPenniesDisplay" idref="CoverageBOtherStructuresOutput.Premium" />
        <mergeField name="CoverageBLimit" formatSpecifier="field" iter="1" formatValue="FormatMask.Limit" idref="CoverageBOtherStructuresInput.Limit" />
        <mergeField name="CoverageBIncludedLimit" formatSpecifier="field" iter="1" formatValue="FormatMask.Limit" idref="CoverageBOtherStructuresOutput.IncludedLimit" />
        <mergeField name="CoverageBBaseRate" formatSpecifier="field" iter="1" formatValue="FormatMask.PremiumPenniesDisplay" idref="CoverageBOtherStructuresPrivate.BaseRate" />
        <mergeField name="CoverageDPrem" formatSpecifier="field" iter="1" formatValue="FormatMask.PremiumPenniesDisplay" idref="CoverageDLossOfUseOutput.Premium" />
        <mergeField name="CoverageDLimit" formatSpecifier="field" iter="1" formatValue="FormatMask.Limit" idref="CoverageDLossOfUseInput.Limit" />
        <mergeField name="CoverageDIncludedLimit" formatSpecifier="field" iter="1" formatValue="FormatMask.Limit" idref="CoverageDLossOfUseOutput.IncludedLimit" />
        <mergeField name="CoverageDBaseRate" formatSpecifier="field" iter="1" formatValue="FormatMask.PremiumPenniesDisplay" idref="CoverageDLossOfUsePrivate.BaseRate" />
        <mergeField name="CoverageEPrem" formatSpecifier="field" iter="1" formatValue="FormatMask.PremiumPenniesDisplay" idref="CoverageELiabilityOutput.Premium" />
        <mergeField name="CoverageEBaseRate" formatSpecifier="field" iter="1" formatValue="FormatMask.PremiumPenniesDisplay" idref="CoverageELiabilityPrivate.BaseRate" />
        <mergeField name="CoverageELimit" formatSpecifier="field" iter="1" formatValue="FormatMask.Limit" idref="CoverageELiabilityInput.Limit" />
        <mergeField name="CoverageELimitFac" idref="CoverageELiabilityPrivate.LiabilityLimitFactor" iter="1" formatValue="" />
        <mergeField name="CoverageFBaseRate" formatSpecifier="field" iter="1" formatValue="FormatMask.PremiumPenniesDisplay" idref="CoverageFMedicalPrivate.BaseRate" />
        <mergeField name="CoverageFLimit" formatSpecifier="field" iter="1" formatValue="FormatMask.Limit" idref="CoverageFMedicalInput.Limit" />
        <mergeField name="CoverageFLimitFac" />
        <mergeField name="BusinessPropertyPrem" formatSpecifier="field" iter="1" formatValue="FormatMask.PremiumPenniesDisplay" idref="BusinessPropertyOutput.Premium" />
        <mergeField name="BusinessPropertyLimit" formatSpecifier="field" iter="1" formatValue="FormatMask.Limit" idref="BusinessPropertyInput.Limit" />
        <mergeField name="BusinessPropertyIncludedLimit" formatSpecifier="field" iter="1" formatValue="FormatMask.Limit" idref="BusinessPropertyPrivate.IncludedLimit" />
        <mergeField name="BusinessPropertyBaseRate" formatSpecifier="field" iter="1" formatValue="FormatMask.PremiumPenniesDisplay" idref="BusinessPropertyPrivate.BaseRate" />
        <mergeField name="AddAltPrem" formatSpecifier="field" iter="1" formatValue="FormatMask.PremiumPenniesDisplay" idref="AdditionsAlterationsOutput.Premium" />
        <mergeField name="AddAltLimit" formatSpecifier="field" iter="1" formatValue="FormatMask.Limit" idref="AdditionsAlterationsInput.Limit" />
        <mergeField name="AddAltIncludedLimit" formatSpecifier="field" iter="1" formatValue="FormatMask.Limit" idref="AdditionsAlterationsPrivate.IncludedLimit" />
        <mergeField name="AddAltEachAddlRate" formatSpecifier="field" iter="1" formatValue="FormatMask.PremiumPenniesDisplay" idref="AdditionsAlterationsPrivate.EachAdditionalRate" />
        <mergeField name="AddAltSpecialRate" formatSpecifier="field" iter="1" formatValue="FormatMask.PremiumPenniesDisplay" idref="AdditionsAlterationsPrivate.SpecialRate" />
        <mergeField name="CrediCardPrem" formatSpecifier="field" iter="1" formatValue="FormatMask.PremiumPenniesDisplay" idref="CreditCardOutput.Premium" />
        <mergeField name="CreditCardBaseRate" formatSpecifier="field" iter="1" formatValue="FormatMask.PremiumPenniesDisplay" idref="CreditCardPrivate.BaseRate" />
        <mergeField name="IdentityFraudPrem" formatSpecifier="field" iter="1" formatValue="FormatMask.PremiumPenniesDisplay" idref="IdentityFraudExpenseCoverageOutput.Premium" />
        <mergeField name="IdentityFraudBaseRate" formatSpecifier="field" iter="1" formatValue="FormatMask.PremiumPenniesDisplay" idref="IdentityFraudExpenseCoveragePrivate.BaseRate" />
        <mergeField name="LossAssessmentPrem" formatSpecifier="field" iter="1" formatValue="FormatMask.PremiumPenniesDisplay" idref="LossAssessmentOutput.Premium" />
        <mergeField name="LossAssessmentLimit" formatSpecifier="field" iter="1" formatValue="FormatMask.Limit" idref="LossAssessmentInput.Limit" />
        <mergeField name="LossAssessmentBaseRate" formatSpecifier="field" iter="1" formatValue="FormatMask.PremiumPenniesDisplay" idref="LossAssessmentPrivate.BaseRate" />
        <mergeField name="OthrStructRentOtherPrem" formatSpecifier="field" iter="1" formatValue="FormatMask.PremiumPenniesDisplay" idref="OtherStructuresRentedToOthersOutput.Premium" />
        <mergeField name="OthrStructRentOtherLimit" formatSpecifier="field" iter="1" formatValue="FormatMask.Limit" idref="OtherStructuresRentedToOthersInput.Limit" />
        <mergeField name="OthrStructRentOtherIncludedLimit" formatSpecifier="field" iter="1" formatValue="FormatMask.Limit" idref="OtherStructuresRentedToOthersPrivate.IncludedLimit" />
        <mergeField name="OthrStructRentOtherBaseRate" formatSpecifier="field" iter="1" formatValue="FormatMask.PremiumPenniesDisplay" idref="OtherStructuresRentedToOthersPrivate.BaseRate" />
        <mergeField name="TotalPrem" formatSpecifier="field" iter="1" formatValue="FormatMask.PremiumPenniesDisplay" idref="PolicyPurePremiums.PremiumWritten" />
      </merge>
    </documentSet>
    <printJob name="Worksheet" condition="False" override="1">
      <printJob name="Worksheet" idref="RiskManuscript.FormsManuScriptID" />
    </printJob>
    <printJob name="Application" condition="PolicyPrivate.IsApplication" override="1">
      <printJob name="Application" idref="RiskManuscript.FormsManuScriptID" />
    </printJob>
    <printJob name="Binder" condition="PolicyPrivate.IsBound" override="1">
      <printJob name="Binder" idref="RiskManuscript.FormsManuScriptID" />
    </printJob>
    <printJob name="ManuScriptEndorsementForms" condition="LinePrivate.ManuScriptCoverageFormRule" override="1">
      <printJob name="ManuScriptEndorsementForm" idref="RiskManuscript.FormsManuScriptID" />
    </printJob>
    <documentSet name="Application" paperBinNum="0" printDefault="Selected" inherited="DCT_ProductBase_1_0_0_0" override="1" prevPage="" condition="PolicyPrivate.IsApplication">
      <scope name="data" increment="1" startIter="1" endIter="*" />
      <document>
        <subdoc name="ApplicationHeader.doc" path="Marketplace|PersonalHome|US|" />
        <subdoc name="ApplicationAdditionalInterestsHeader.doc" path="Marketplace|PersonalHome|US|" condition="AccountPrivate.AdditionalOtherInterestAdded" />
        <subdoc name="ApplicationAdditionalInterestsList.doc" path="Base|" />
        <subdoc name="PersonalHomeApplicationRiskHeader.doc" path="Marketplace|PersonalHome|US|">
          <scope name="Risk" increment="1" startIter="1" endIter="*" />
        </subdoc>
        <subdoc name="PersonalHomeApplicationRiskList.doc" path="Marketplace|PersonalHome|US|">
          <scope name="Risk" increment="1" startIter="1" endIter="*" />
          <scope name="Dwelling" increment="1" startIter="1" endIter="*" />
        </subdoc>
        <subdoc name="ApplicationCoverageHeader.doc" path="Marketplace|PersonalHome|US|" />
        <subdoc name="PersonalHomeApplicationCoverageDwelling.doc" path="Marketplace|PersonalHome|US|" condition="DwellingPrivate.FormIsDwelling" />
        <subdoc name="PersonalHomeApplicationCoverageRenterCondo.doc" path="Marketplace|PersonalHome|US|" condition="DwellingPrivate.FormIsCondoOrTenant" />
        <subdoc name="PersonalHomeApplicationCoverageListPerRisk.doc" path="Marketplace|PersonalHome|US|" />
        <subdoc name="PersonalHomeApplicationSPPHeader.doc" path="Marketplace|PersonalHome|US|" condition="LinePrivate.ShowSPPSummary" />
        <subdoc name="PersonalHomeApplicationSPPList.doc" path="Marketplace|PersonalHome|US|" condition="LinePrivate.ShowSPPSummary">
          <scope name="SPP" increment="1" startIter="1" endIter="*" />
          <scope name="SPPCoverage" increment="1" startIter="1" endIter="*" />
        </subdoc>
        <subdoc name="PersonalHomeApplicationWatercraftHeader.doc" path="Marketplace|PersonalHome|US|" condition="LinePrivate.ShowWatercraftSummary" />
        <subdoc name="PersonalHomeApplicationWatercraftList.doc" path="Marketplace|PersonalHome|US|" condition="LinePrivate.ShowWatercraftSummary">
          <scope name="Watercraft" increment="1" startIter="1" endIter="*" />
          <scope name="WatercraftCoverage" increment="1" startIter="1" endIter="*" />
        </subdoc>
        <subdoc name="ApplicationManuScriptEndorsementList.doc" path="Marketplace|PersonalHome|US|">
          <scope name="ManuScriptCoverage" increment="1" startIter="1" endIter="*" />
        </subdoc>
        <subdoc name="ApplicationAppQuestionsHeader.doc" path="Marketplace|PersonalHome|US|" />
        <subdoc name="ApplicationAppQuestions.doc" path="Marketplace|PersonalHome|US|" />
        <subdoc name="ApplicationInsuranceHistoryHeader.doc" path="Marketplace|PersonalHome|US|" condition="AccountPrivate.PriorInsuranceAdded" />
        <subdoc name="applicationinsurancehistorylist.doc" path="Marketplace|PersonalHome|US|" />
      </document>
      <scope name="Policy" increment="1" startIter="1" endIter="*" />
      <scope name="Line" increment="1" startIter="1" endIter="*" />
      <scope name="Account" increment="1" startIter="1" endIter="*" />
      <merge>
        <mergeField name="AgencyName" idref="AgencyInput.Name" iter="1" formatValue="" />
        <mergeField name="ProducerName" idref="ProducerInput.FullName" iter="1" formatValue="" />
        <mergeField name="AgencyAddress1" idref="AgencyInput.Address1" iter="1" formatValue="" />
        <mergeField name="AgencyAddress2" idref="AgencyInput.Address2" iter="1" formatValue="" />
        <mergeField name="AgencyCity" idref="AgencyInput.City" iter="1" formatValue="" />
        <mergeField name="AgencyState" idref="AgencyInput.State" iter="1" formatValue="" />
        <mergeField name="AgencyZipCode" idref="AgencyInput.ZipCode" iter="1" formatValue="" />
        <mergeField name="ApplicantName" idref="AccountInput.Name" iter="1" formatValue="" />
        <mergeField name="Address1" idref="AccountInput.Address1" iter="1" formatValue="" />
        <mergeField name="Address2" idref="AccountInput.Address2" iter="1" formatValue="" />
        <mergeField name="City" idref="AccountInput.City" iter="1" formatValue="" />
        <mergeField name="State" idref="AccountInput.State" iter="1" formatValue="" />
        <mergeField name="ZipCode" idref="AccountInput.ZipCode" iter="1" formatValue="" />
        <mergeField name="PhoneNumber" idref="AccountInput.PrimaryPhone" iter="1" formatValue="" />
        <mergeField name="CoApplicantName" idref="AccountInput.CoApplicantFirstName" iter="2" formatValue="" />
        <mergeField name="CoApplicantLastName" idref="AccountInput.CoApplicantLastName" iter="1" formatValue="" />
        <mergeField name="EffectiveDate" idref="PolicyInput.EffectiveDate" iter="1" formatSpecifier="format" formatValue="mm/dd/yyyy" />
        <mergeField name="ExpirationDate" idref="PolicyInput.ExpirationDate" iter="1" formatSpecifier="format" formatValue="mm/dd/yyyy" />
        <mergeField name="PreviousPolicyNumber" idref="PolicyOutput.PreviousPolicyNumber" iter="1" formatValue="" />
        <mergeField name="AddlInt#" idref="AdditionalOtherInterestPrivate.CurrentIteration" iter="1" formatValue="" />
        <mergeField name="Name" idref="AdditionalOtherInterestInput.Name" iter="1" formatValue="" />
        <mergeField name="AddIntAddress1" idref="AdditionalOtherInterestInput.Address1" iter="1" formatValue="" />
        <mergeField name="AddIntAddress2" idref="AdditionalOtherInterestInput.Address2" iter="1" formatValue="" />
        <mergeField name="AddIntCity" idref="AdditionalOtherInterestInput.City" iter="1" formatValue="" />
        <mergeField name="AddIntState" idref="AdditionalOtherInterestInput.State" iter="1" formatValue="" />
        <mergeField name="AddIntZipCode" idref="AdditionalOtherInterestInput.ZipCode" iter="1" formatValue="" />
        <mergeField name="AddlIntType" idref="AdditionalOtherInterestInput.Type" iter="1" formatValue="" />
        <mergeField name="AddIntCOI" idref="AdditionalOtherInterestInput.CertificateOfInsurance" iter="1" formatSpecifier="coded" formatValue="0|No|1|Yes" />
        <mergeField name="ManEndNum" />
        <mergeField name="CarrierName" idref="PriorInsurance.CarrierName" iter="1" formatValue="" />
        <mergeField name="InsHisEffDt" idref="PriorInsurance.EffectiveDate" iter="1" formatSpecifier="format" formatValue="mm/dd/yyyy" />
        <mergeField name="InsHisExpDt" idref="PriorInsurance.ExpirationDate" iter="1" formatSpecifier="format" formatValue="mm/dd/yyyy" />
        <mergeField name="InsHisLimit" idref="PriorInsurance.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="InsHisDed" idref="PriorInsurance.Deductible" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="LOBNAME" idref="LinePrivate.LOBName" iter="1" formatValue="" />
        <mergeField name="CurrentDate" idref="DateTime.CurrentDate" iter="1" formatSpecifier="format" formatValue="mm/dd/yyyy" />
        <mergeField name="CoApplicantFirstName" idref="AccountInput.CoApplicantFirstName" iter="1" formatValue="" />
        <mergeField name="YearBuilt" idref="DwellingInput.YearBuilt" iter="1" formatValue="" />
        <mergeField name="Family" idref="DwellingInput.NumberOfFamilies" iter="1" formatValue="" />
        <mergeField name="FDDistance" idref="DwellingInput.DistanceToFireStation" iter="1" formatValue="" />
        <mergeField name="PropertyType" idref="DwellingInput.UseType" iter="1" formatSpecifier="coded" formatValue="Primary|Primary|Secondary|Secondary|Seasonal|Seasonal" />
        <mergeField name="Units" idref="DwellingInput.NumberOfUnits" iter="1" formatValue="" />
        <mergeField name="HydrantDistance" idref="DwellingInput.DistanceToHydrant" iter="1" formatValue="" />
        <mergeField name="ProtectionClass" idref="DwellingInput.RatedProtectionClass" iter="1" formatSpecifier="coded" formatValue="1|1|2|2|3|3|4|4|5|5|6|6|7|7|8|8|9|9|10|10|88|88|6/9|6/9|4/10|4/10|1|1|2|2|3|3|4|4|5|5|6|6|7|7|8|8|9|9|10|10|88|88|1/9|1/9|2/9|2/9|3/9|3/9|4/9|4/9|5/9|5/9|6/9|6/9|7/9|7/9|8/9|8/9|10/9|10/9|1/10|1/10|2/10|2/10|3/10|3/10|4/10|4/10|5/10|5/10|6/10|6/10|7/10|7/10|8/10|8/10|9/10|9/10" />
        <mergeField name="PrimaryHeat" idref="DwellingInput.PrimaryHeatType" iter="1" formatValue="" />
        <mergeField name="ConstructionType" idref="DwellingInput.Construction" iter="1" formatSpecifier="coded" formatValue="Frame|Frame|Aluminum|Aluminum|PlasticSiding|Plastic Siding|Masonry|Masonry|MasonryVeneer|Masonry Veneer|Superior|Superior" />
        <mergeField name="Territory" idref="DwellingOutput.RatedTerritory" iter="1" />
        <mergeField name="CovALim" idref="CoverageADwellingInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovAPrem" idref="CoverageADwellingOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovBLim" idref="CoverageBOtherStructuresInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovBPrem" idref="CoverageBOtherStructuresOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovCLim" idref="CoverageCPersonalPropertyHO3Input.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovCPrem" idref="CoverageCPersonalPropertyHO3OutputNonShredded.IncludedInCovAText" iter="1" formatValue="" />
        <mergeField name="CovDLim" idref="CoverageDLossOfUseInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovDPrem" idref="CoverageDLossOfUseOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovELim" idref="CoverageELiabilityInput.Limit" iter="1" formatSpecifier="coded" formatValue="N|No Coverage|100000|$100,000|200000|$200,000|300000|$300,000|400000|$400,000|500000|$500,000|1000000|$1,000,000" />
        <mergeField name="CovEPrem" idref="CoverageELiabilityOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CovFLim" idref="CoverageFMedicalInput.Limit" iter="1" formatSpecifier="coded" formatValue="N|No Coverage|1000|$1,000|2000|$2,000|3000|$3,000|4000|$4,000|5000|$5,000" />
        <mergeField name="CovFPrem" idref="CoverageFMedicalOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="TotalAddProp" idref="SectionICoveragesOutput.SectionIPremium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="TotalAddLiab" idref="SectionIICoveragesOutput.SectionIIPremium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="TotalPremium" idref="data.TotalPremium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="DedPremAdj" idref="DwellingOutput.DeductibleCalculation" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="FireResistiveCredit" idref="FireResistiveDiscountOutput.Amount" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="NewHomeCredit" idref="NewHomeDiscountOutput.Amount" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="HomeandAutoDis" idref="AutoHomeDiscountOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="ThreeAndFourFamilySurcharge" idref="ThreeAndFourFamilySurchargeOutput.Amount" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="ProtDevicesCredit" idref="ProtectiveDeviceDiscountOutput.Amount" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="BurglarAlarm" idref="DwellingInput.BurglarAlarm" iter="1" formatSpecifier="coded" formatValue="Central|Central Station Reporting|PoliceStation|Police Station Reporting|Local|Local " />
        <mergeField name="FireAlarm" idref="DwellingInput.FireAlarm" iter="1" formatSpecifier="coded" formatValue="Central|Central Station Reporting|FireDepartment|Fire Department Reporting|Local|Local / Smoke Detector" />
        <mergeField name="Sprinkler" idref="DwellingInput.Sprinkler" iter="1" formatSpecifier="coded" formatValue="SprinklersAllAreas|Automatic - All Areas|SprinklersExcludedAreas|Automatic - Excluded Areas" />
        <mergeField name="CovCRCostPremAmt" idref="ReplacementCostContentsOutput.Amount" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="RepRepPremAmtt" idref="ReplacementCostDwellingOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="WaterBackupPremAmt" idref="WaterBackupAndSumpOverflowOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="PPOthResAggLimit" idref="PersonalPropertyOtherResidenceInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="PPOthResPremAmt" idref="PersonalPropertyOtherResidenceOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="ISLFirearmsAggLimit" idref="UnscheduledGunsInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="ISLFirearmsPremAmt" idref="UnscheduledGunsOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="ISLJewelryAggLimit" idref="UnscheduledJewelryInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="ISLJewelryPremAmt" idref="UnscheduledJewelryOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="ISLMoneyAggLimit" idref="UnscheduledMoneyInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="ISLMoneyPremAmt" idref="UnscheduledMoneyOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="ISLSecurAggLimit" idref="UnscheduledSecuritiesInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="ISLSecurPremAmt" idref="UnscheduledSecuritiesOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="ISLSilverAggLimit" idref="UnscheduledSilverwareInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="ISLSilverPremAmt" idref="UnscheduledSilverwareOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="BusPropIncAggLimit" idref="BusinessPropertyInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="BusPropIncPremAmt" idref="BusinessPropertyOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CreditCardAggLimit" idref="CreditCardInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="CreditCardPremAmt" idref="CreditCardOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="InfGuardAggLimit" idref="InflationGuardInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="InfGuardPremAmt" idref="InflationGuardOutput.Amount" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="EQDed" idref="EarthquakeInput.Deductible" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="EQPremAmt" idref="EarthquakeOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="OSRTOResAggLimit" idref="OtherStructuresRentedToOthersInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="OSRTOResPremAmt" idref="OtherStructuresRentedToOthersOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="PerIncOccResAggLimit" idref="PermittedIncidentalOccupancyOtherStructuresInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="PerIncOccResPremAmtt" idref="PermittedIncidentalOccupancyOtherStructuresOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="LossAssessAggLimit" idref="LossAssessmentInput.Limit" iter="1" formatSpecifier="coded" formatValue="1000|$1,000|5000|$5,000|10000|$10,000|15000|$15,000|20000|$20,000|25000|$25,000|30000|$30,000|35000|$35,000|40000|$40,000|45000|$45,000|50000|$50,000" />
        <mergeField name="LossAssessPremAmt" idref="LossAssessmentOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="PersInjAggLimit" idref="PersonalInjuryInput.Indicator" iter="1" formatSpecifier="coded" formatValue="1|Yes|0|No" />
        <mergeField name="PersInjPremAmt" idref="PersonalInjuryOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="BusPursAggLimit" />
        <mergeField name="BusPursPremAmt" idref="BusinessPursuitsOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="IncFarmLiabType" idref="IncidentalFarmingPersonalLiabilityInput.Type" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="IncFarmLiabResPrem" idref="IncidentalFarmingPersonalLiabilityOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="SPPType" idref="SPPPrivate.TypeCaption" iter="1" formatValue="" />
        <mergeField name="SPPLimits" idref="SPPInput.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="SPPPrem" idref="SPPCoverageOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="TotalSPP" idref="SPPSubtotals.SPPTotalPremium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="PersPropHO46Lim" idref="CoverageCPersonalPropertyHO46Input.Limit" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="PersPropHO46Prem" idref="CoverageCPersonalPropertyHO46Output.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="TownRowSur" idref="TownhouseRowhouseSurchargeOutput.Amount" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="TotalWaterLiab" readOnly="True" idref="WatercraftSubtotals.WatercraftTotalPremium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="OtherBusiness" idref="UnderwritingQuestionsInput.AnyBusinessConducted" iter="1" formatSpecifier="codedField" formatValue="" />
        <mergeField name="CoverageDeclined" idref="UnderwritingQuestionsInput.AnyCoverageDeclinedCancelled" iter="1" formatSpecifier="codedField" formatValue="" />
        <mergeField name="OtherInsurance" idref="UnderwritingQuestionsInput.AnyOtherInsurance" iter="1" formatSpecifier="codedField" formatValue="" />
        <mergeField name="ForeclosureBankr" idref="UnderwritingQuestionsInput.ForeclosureBankruptcy" iter="1" formatSpecifier="codedField" formatValue="" />
        <mergeField name="IndictedOrConvicted" idref="UnderwritingQuestionsInput.IndictedOrConvicted" iter="1" formatSpecifier="codedField" formatValue="" />
        <mergeField name="UndergoingRenovation" idref="UnderwritingQuestionsInput.IsBuildingUndergoingRenovation" iter="1" formatSpecifier="codedField" formatValue="" />
        <mergeField name="HouseForSale" idref="UnderwritingQuestionsInput.IsHouseForSale" iter="1" formatSpecifier="codedField" formatValue="" />
        <mergeField name="PropertyWithin300Ft" idref="UnderwritingQuestionsInput.IsPropertyWithin300FtOfCommercialProp" iter="1" formatSpecifier="codedField" formatValue="" />
        <mergeField name="TrampolineOnPremises" idref="UnderwritingQuestionsInput.IsThereATrampolineOnPremises" iter="1" formatSpecifier="codedField" formatValue="" />
        <mergeField name="SpecialPersPropHO4" idref="SpecialPersonalPropertyCoverageOutput.Amount" iter="1" condition="DwellingPrivate.FormIsHO4" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="UnitOwnSpecialHO6" idref="SpecialPersonalPropertyCoverageOutput.Amount" iter="1" condition="DwellingPrivate.FormIsHO6" formatSpecifier="format" formatValue="$###,###.##" />
        <mergeField name="Watercraft" idref="WatercraftPrivate.SummaryDescription" iter="1" formatValue="" />
        <mergeField name="WatercraftPrem" idref="WatercraftCoverageOutput.Premium" iter="1" formatSpecifier="format" formatValue="$###,###.##" />
      </merge>
    </documentSet>
  </documents>
  <annotations>
    <comments idref="AdditionalOtherInterestInput.Type" inherited="Harleysville_PersonalLines_ProductBase_US_00_10" override="1">
      <comment>Choose the type of this Additional Other Insured.   If "Other" is chosen, you will be allowed to enter an "Other" description in the next field which will be presented.</comment>
    </comments>
    <comments idref="AdditionalOtherInterestInput.Name" inherited="Harleysville_PersonalLines_ProductBase_US_00_10" override="1">
      <comment>Name of Additional Named Insured.</comment>
    </comments>
    <comments idref="AdditionalOtherInterestInput.Address1" inherited="Harleysville_PersonalLines_ProductBase_US_00_10" override="1">
      <comment>Address Line 1.</comment>
    </comments>
    <comments idref="AdditionalOtherInterestInput.City" override="1">
      <comment>City Name, State and Zipcode information.</comment>
    </comments>
    <comments idref="AdditionalOtherInterestInput.State" inherited="Harleysville_PersonalLines_ProductBase_US_00_10" override="1">
      <comment>Choose the apppropriate state from the list.</comment>
    </comments>
    <comments idref="AdditionalOtherInterestInput.ZipCode" inherited="Harleysville_PersonalLines_ProductBase_US_00_10" override="1">
      <comment>Zipcode.</comment>
    </comments>
    <comments idref="ReplacementCostDwellingInput.Indicator">
      <comment>Provides additional insurance for Coverages A, B, C and D when loss to the dwelling building exceeds the limit of liability shown in the policy declarations.</comment>
    </comments>
    <comments idref="WaterBackupAndSumpOverflowInput.Indicator">
      <comment>Provides coverage for loss resulting from water which backs up through sewers or drains or which overflows from a sump.</comment>
    </comments>
    <comments idref="ReplacementCostContentsInput.Indicator">
      <comment>Modifies the policy to provide replacement cost coverage for personal property.  Enables the insured to replace damaged belongings with new property of like, kind and quality subject to certain limitations.</comment>
    </comments>
    <comments idref="UnscheduledSilverwareInput.Limit">
      <comment>The special limit of liability of $2,500 for loss by theft of silverware, goldware and pewterware may be increased to a maximum of $10,000 in increments of $500.</comment>
      <comment break="1">If the Signature Homeowners Endorsement has been selected additional silverware, goldware and pewterware coverage is not available, as the Signature Homeowners Endorsement includes the maximum coverage allowed.</comment>
    </comments>
    <comments idref="CreditCardInput.Limit">
      <comment>Increases the limit of liability that applies to Credit card, Fund Transfer Card, Forgery and Counterfeit Money.</comment>
    </comments>
    <comments idref="EarthquakeInput.LossAssessmentLimit">
      <comment>Covers Sections I property for physical damage caused by earthquake for the same limits provided in the policy.</comment>
    </comments>
    <comments idref="IncidentalFarmingPersonalLiabilityInput.Type">
      <comment>Provides coverage for the liability of the insured when farming is conducted either on or away from the premises. Farming activities must be incidental and not be the insured s primary source of income.</comment>
    </comments>
    <comments idref="PersonalPropertyOtherResidenceInput.Limit">
      <comment>Coverage for personal property usually located at other residences may be increased by this endorsement. The unendorsed policy form limits this coverage to 10% of Coverage C or $1,000 whichever is greater.</comment>
    </comments>
    <comments idref="InflationGuardInput.Limit">
      <comment>Increases the limits of liability for Coverages A, B, C and D annually in the amount selected.</comment>
    </comments>
    <comments idref="LossAssessmentInput.Limit">
      <comment>Increases the amount of coverage for loss assessments charged by a property owners association against the insured in connection with a direct loss to the residence premises or liability relating to the residence premises. Either Section I or Section II, or both I and II may be increased.</comment>
    </comments>
    <comments idref="EarthquakeInput.Deductible">
      <comment>Pays insureds share of any loss assessment charged during the policy period against them by a corporation or association of property owners, up to the limit of liability shown, when the assessment is made as a result of direct loss to the property, owned by all members collectively, caused by earthquake including land shock waves or tremors before, during or after a volcanic eruption.</comment>
    </comments>
    <comments idref="OtherStructuresRentedToOthersInput.Limit">
      <comment>Allows for increased limits on a specific structure on the residence premises.</comment>
    </comments>
    <comments idref="PermittedIncidentalOccupancyOtherStructuresInput.Limit">
      <comment>Provides coverage for the premises liability exposure of the insured engaged in a business conducted at a residence other than the residence premises.</comment>
    </comments>
    <comments idref="PersonalInjuryInput.Indicator">
      <comment>Adds liability coverage for injury to others arising out of specified offenses, such as false arrest, libel or invasion of privacy.</comment>
    </comments>
    <comments idref="DwellingInput.DistanceToHydrant">
      <comment>This field indicates the distance in feet from the residence premises to the nearest fire hydrant.</comment>
    </comments>
    <comments idref="DwellingInput.DistanceToFireStation">
      <comment>This field indicates the distance in miles from the residence premises to the nearest fire station.</comment>
    </comments>
    <comments idref="DwellingInput.DistanceToWaterSource">
      <comment>This field indicates the distance to a year round water source.  This field will be used, as one of the criteria, to determine if the dwelling is eligible for suburban rating.</comment>
    </comments>
    <comments idref="DwellingInput.DwellingAccessibleToFireEquipment">
      <comment>This field indicates if the dwelling is accessible year-round to fire fighting equipment by an all-weather road.  This field will be used, as one of the criteria, to determine if the dwelling is eligible for suburban rating.</comment>
    </comments>
    <comments idref="BusinessPursuitsInput.Indicator">
      <comment>Provides coverage for the liability of the insured arising out of business activities in the following classes:  office, sales, teachers.  This endorsement should not be used if the insured owns, is a partner or maintains financial control in the business.</comment>
    </comments>
    <comments idref="CreditCardInput.Indicator">
      <comment>Increases the limit of liability that applies to Credit card, Fund Transfer Card, Forgery and Counterfeit Money.</comment>
    </comments>
    <comments idref="EarthquakeInput.Indicator">
      <comment>Covers Sections I property for physical damage caused by earthquake for the same limits provided in the policy.</comment>
    </comments>
    <comments idref="IncidentalFarmingPersonalLiabilityInput.Indicator">
      <comment>Provides coverage for the liability of the insured when farming is conducted either on or away from the premises.  Farming activities must be incidental and not be the insured's primary source of income.</comment>
    </comments>
    <comments idref="BusinessPropertyInput.Indicator">
      <comment>Increases the special limit of liability that applies to business property on the residences premises by the additional limit selected.</comment>
    </comments>
    <comments idref="PersonalPropertyOtherResidenceInput.Indicator">
      <comment>Coverage for personal property usually located at other residences may be increased by this endorsement.  The unendorsed policy form limits this coverage to 10% of Coverage C or $1,000 whichever is greater.</comment>
    </comments>
    <comments idref="InflationGuardInput.Indicator">
      <comment>Increases the limits of liability for Coverages A, B, C and D annually in the amount selected.</comment>
    </comments>
    <comments idref="LossAssessmentInput.Indicator">
      <comment>Increases the amount of coverage for loss assessments charged by a property owners' association against the insured in connection with a direct loss to the residence premises or liability relating to the residence premises.  Either Section I or Section II, or both I and II may be increased.</comment>
    </comments>
    <comments idref="PermittedIncidentalOccupancyOtherStructuresInput.Indicator">
      <comment>Provides expanded Section I property coverages and Section II liability coverage for an incidental business conducted by the insured in the dwelling or in another structure on the residence premises.</comment>
    </comments>
    <comments idref="RefrigeratedPersonalPropertyInput.Indicator">
      <comment>Insures up to limit stated, covered property stored in freezers or refrigerators on the residence premises for direct loss caused by interruption of electrical service caused by damage to generating or transmitting equipment, or mechanical failure of the unit storing the property.</comment>
    </comments>
    <comments idref="SpecialComputerCoverageInput.Indicator">
      <comment>Insures computers and related equipment against "all risks" subject to certain exclusions.</comment>
    </comments>
    <comments idref="DwellingInput.NonSmoker">
      <comment>Non-Smoking discount is available with 1 Family Dwellings.</comment>
    </comments>
  </annotations>
  <revisions />
  <mapping mappingCount="25">
    <reference mapId="clientName" name="Client Name" idref="AccountInput.Name" />
    <reference mapId="policyStatus" name="Policy Status" idref="PolicyOutput.Status" />
    <reference mapId="policyNumber" name="Policy Number" idref="ConstantsPolicy.CurrentPolicyNumberIdentifier" />
    <reference mapId="effectiveDate" name="Effective Date" idref="PolicyInput.EffectiveDate" />
    <reference mapId="expirationDate" name="Expiration Date" idref="PolicyInput.ExpirationDate" />
    <reference mapId="policyPremium" name="Policy Premium" idref="PolicyPremiums.PremiumWritten" />
    <reference mapId="address" name="Address" idref="AccountInput.Address1" />
    <reference mapId="address2" name="Address2" idref="AccountInput.Address2" />
    <reference mapId="city" name="City" idref="AccountInput.City" />
    <reference mapId="state" name="State" idref="AccountInput.State" />
    <reference mapId="zipCode" name="ZIP Code" idref="AccountInput.ZipCode" />
    <reference mapId="phoneNumber" name="Phone Number" idref="AccountInput.PrimaryPhone" />
    <reference mapId="faxNumber" name="Fax Number" idref="AccountInput.Fax" />
    <reference mapId="producer" name="Producer" idref="ProducerInput.Name" />
    <reference mapId="agency" name="Agency" idref="AgencyInput.Name" />
    <reference mapId="description" name="Description" idref="PolicyInput.Description" />
    <reference mapId="transactionDate" name="TransactionDate" idref="CurrentTransaction.EffectiveDate" />
    <reference mapId="description2" name="Description2" idref="ConstantsPolicyAdminProcessing.Description" />
    <reference mapId="partyLastNameOptional" name="Party Last Name (optional)" idref="AccountInput.LastName" />
    <reference mapId="partyFirstNameOptional" name="Party First Name (optional)" idref="AccountInput.FirstName" />
    <reference mapId="partyMiddleNameOptional" name="Party Middle Name (optional)" idref="AccountInput.MiddleName" />
    <reference mapId="partyPrefixCodeOptional" name="Party Prefix Code (optional)" idref="AccountInput.Prefix" />
    <reference mapId="partySuffixCodeOptional" name="Party Suffix Code (optional)" idref="AccountInput.Suffix" />
    <reference mapId="quoteNumber" name="Quote Number" idref="PolicyOutput.QuoteNumber" />
    <reference mapId="partyTypeCode" name="Party Type Code (optional)" idref="AccountInput.PartyType" />
    <reference mapId="ConsumerKeyLastName" name="ConsumerKeyLastName" idref="AccountInput.LastName" />
    <reference mapId="ConsumerKeyEmail" name="ConsumerKeyEmail" idref="AccountInput.Email" />
    <reference mapId="ConsumerKeyZip" name="ConsumerKeyZip" idref="AccountInput.ZipCode" />
  </mapping>
  <schemaMaps>
    <schemaMap name="PBBI Account Geocoding">
      <recordActions caption="Not Currently Used">
        <recordAction caption="Not Currently Used" execute="content" value="notCurrentlyUsed" show="False" />
        <recordAction caption="Not Currently Used" execute="content" value="notCurrentlyUsed" show="False" />
      </recordActions>
      <GeocodeUS rootGroupId="Account" xpath=".">
        <AddressLine1 idref="AccountInput.Address1" />
        <AddressLine2 idref="AccountInput.Address2" />
        <City idref="AccountInput.City" />
        <StateProvince idref="AccountInput.State" />
        <County value="" />
        <PostalCode idref="AccountInput.ZipCode" />
        <PostalCodeBase idref="AccountInput.ZipCodeBase" />
        <PostalCodeAddOn idref="AccountInput.ZipCodeAddOn" />
        <Latitude idref="AccountPBBI.Latitude" />
        <Longitude idref="AccountPBBI.Longitude" />
        <GeocodeMatchCode idref="Geocode.GeocodeMatchCode" />
        <Confidence idref="Geocode.Confidence" />
      </GeocodeUS>
      <GeocodeEventing rootGroupId="Address" xpath="GeocodeEventing[1]">
        <OnAcceptRunField value="Geocode.SetLastVerifiedToToday" />
        <OnRejectRunField value="" />
      </GeocodeEventing>
    </schemaMap>
    <schemaMap name="PBBI Location Geocoding">
      <recordActions caption="Not Currently Used">
        <recordAction caption="Not Currently Used" execute="content" value="notCurrentlyUsed" show="False" />
        <recordAction caption="Not Currently Used" execute="content" value="notCurrentlyUsed" show="False" />
      </recordActions>
      <GeocodeUS rootGroupId="Location" xpath=".">
        <AddressLine1 idref="LocationInput.Address1" />
        <AddressLine2 idref="LocationInput.Address2" />
        <City idref="LocationInput.City" />
        <StateProvince idref="LocationInput.State" />
        <PostalCode idref="LocationInput.ZipCode" />
        <PostalCodeBase idref="LocationInput.ZipCodeBase" />
        <PostalCodeAddOn idref="LocationInput.ZipCodeAddOn" />
        <Latitude idref="LocationPBBI.Latitude" />
        <Longitude idref="LocationPBBI.Longitude" />
        <County value="" />
        <Country idref="LocationInput.Country" />
        <Confidence idref="LocationGeocode.Confidence" />
        <GeocodeMatchCode idref="LocationGeocode.GeocodeMatchCode" />
      </GeocodeUS>
      <GeocodeEventing rootGroupId="Location" xpath="GeocodeEventing[1]">
        <OnAcceptRunField value="LocationGeocode.SetLastVerifiedToToday" />
        <OnRejectRunField value="" />
      </GeocodeEventing>
    </schemaMap>
    <schemaMap name="PrimaryLocation">
      <recordActions caption="Location actions">
        <recordAction caption="Update this location" execute="content" value="partyUpdateMappedRecord" show="True" />
        <recordAction caption="Update Sample" execute="content" value="partyUpdateMappedRecord" show="False" />
      </recordActions>
      <Location rootGroupId="Account">
        <LocationAddressLine2 idref="AccountInput.Address2" />
        <LocationCity idref="AccountInput.City" />
        <LocationStateCode idref="AccountInput.State" />
        <LocationPostalCode idref="AccountInput.ZipCode" />
        <LocationAddressLine1 idref="AccountInput.Address1" slideOut="1" />
        <LocationCounty value="" />
      </Location>
    </schemaMap>
    <schemaMap name="PrimaryPhone">
      <recordActions caption="Phone number actions">
        <recordAction caption="Update this phone number" execute="content" value="partyUpdateMappedRecord" show="True" />
        <recordAction caption="Update Sample" execute="content" value="partyUpdateMappedRecord" show="False" />
      </recordActions>
      <PartyPhone codeType="PTY_PHONETYPE" typeCodes="PhoneTypeCode" rootGroupId="Account">
        <PhoneNumber idref="AccountInput.PrimaryPhone" slideOut="1" />
      </PartyPhone>
    </schemaMap>
    <schemaMap name="PrimaryEmail">
      <recordActions caption="Email actions">
        <recordAction caption="Update this email address" execute="content" value="partyUpdateMappedRecord" show="True" />
        <recordAction caption="Update Sample" execute="content" value="partyUpdateMappedRecord" show="False" />
      </recordActions>
      <PartyEmail codeType="PTY_EMAILTYPE" rootGroupId="Account" typeCodes="EmailTypeCode">
        <EmailAddress idref="AccountInput.Email" slideOut="1" />
      </PartyEmail>
    </schemaMap>
    <schemaMap name="PartySearch">
      <recordActions caption="Party actions">
        <recordAction caption="Add Sample" execute="content" value="partyAddMappedRecord" show="" />
        <recordAction caption="Update Sample" execute="content" value="partyUpdateMappedRecord" show="" />
      </recordActions>
      <Party rootGroupId="Account">
        <PartyName idref="AccountInput.Name" />
        <PartyTypeCode idref="AccountInput.PartyType" />
      </Party>
      <Location rootGroupId="Account">
        <LocationStateCode idref="AccountInput.State" />
        <LocationAddressLine1 slideOut="1" idref="AccountInput.Address1" />
        <LocationAddressLine2 idref="AccountInput.Address2" />
        <LocationCity idref="AccountInput.City" />
        <LocationPostalCode idref="AccountInput.ZipCode" />
      </Location>
    </schemaMap>
    <schemaMap name="PBBI Account View Map">
      <ViewMap rootGroupId="Account" xpath="ViewMap[1]">
        <Latitude idref="AccountPBBI.Latitude" />
        <Longitude idref="AccountPBBI.Longitude" />
        <ZoomLevel value="5" />
        <Caption idref="AccountInput.Name" />
        <Marker value="Skins/PitneyBowesRIAControl/img/marker-gold.png" />
      </ViewMap>
    </schemaMap>
    <schemaMap name="PBBI Location View Map">
      <ViewMap rootGroupId="Location" xpath="ViewMap[1]">
        <Latitude idref="LocationPBBI.Latitude" />
        <Longitude idref="LocationPBBI.Longitude" />
        <ZoomLevel value="5" />
        <Caption idref="LocationInput.Description" />
        <Marker value="Skins/PitneyBowesRIAControl/img/marker.png" />
      </ViewMap>
    </schemaMap>
  </schemaMaps>
  <metaData>
    <schemaGroups manuscriptID="DCT_ProductBase_PersonalHome_1_0_0_0">
      <schemaGroup name="data" />
      <schemaGroup name="Account" />
      <schemaGroup name="AdditionalOtherInterest" />
      <schemaGroup name="AdditionalOtherInterestInput" />
      <schemaGroup name="AdditionalOtherInterestOutput" />
      <schemaGroup name="AccountInput" />
      <schemaGroup name="Address" />
      <schemaGroup name="AccountOutput" />
      <schemaGroup name="Person" />
      <schemaGroup name="PersonInput" />
      <schemaGroup name="PersonOutput" />
      <schemaGroup name="AccountPBBI" />
      <schemaGroup name="Location" />
      <schemaGroup name="LocationInput" />
      <schemaGroup name="LocationOutput" />
      <schemaGroup name="LocationPBBI" />
      <schemaGroup name="Policy" />
      <schemaGroup name="PolicyOutput" />
      <schemaGroup name="PolicyPremiumTotals" />
      <schemaGroup name="PolicyPremiums" />
      <schemaGroup name="PolicyPurePremiums" />
      <schemaGroup name="PolicyTaxesAndSurcharges" />
      <schemaGroup name="PolicyPremiumsWithPolicyAdjustment" />
      <schemaGroup name="PolicySubtotals" />
      <schemaGroup name="LineSubTotals" />
      <schemaGroup name="LineTotalPremiums" />
      <schemaGroup name="LineTotalPurePremiums" />
      <schemaGroup name="LineTotalTaxesAndSurcharges" />
      <schemaGroup name="PolicyInput" />
      <schemaGroup name="Line" />
      <schemaGroup name="Risk" />
      <schemaGroup name="RiskInput" />
      <schemaGroup name="RiskOutput" />
      <schemaGroup name="RiskPremiumTotals" />
      <schemaGroup name="RiskPremiums" />
      <schemaGroup name="RiskPurePremiums" />
      <schemaGroup name="RiskTaxesAndSurcharges" />
      <schemaGroup name="RiskCoverages" />
      <schemaGroup name="AdditionalResidence" />
      <schemaGroup name="AdditionalResidenceInput" />
      <schemaGroup name="IncidentalOccupancy" />
      <schemaGroup name="IncidentalOccupancyInput" />
      <schemaGroup name="IncidentalOccupancyOutput" />
      <schemaGroup name="OwnerOccupied" />
      <schemaGroup name="OwnerOccupiedInput" />
      <schemaGroup name="OwnerOccupiedOutput" />
      <schemaGroup name="RentedToOthers" />
      <schemaGroup name="RentedToOthersInput" />
      <schemaGroup name="RentedToOthersOutput" />
      <schemaGroup name="CoverageADwelling" />
      <schemaGroup name="CoverageADwellingInput" />
      <schemaGroup name="CoverageADwellingOutput" />
      <schemaGroup name="CoverageBOtherStructures" />
      <schemaGroup name="CoverageBOtherStructuresInput" />
      <schemaGroup name="CoverageBOtherStructuresOutput" />
      <schemaGroup name="CoverageCPersonalPropertyHO3" />
      <schemaGroup name="CoverageCPersonalPropertyHO3Input" />
      <schemaGroup name="CoverageCPersonalPropertyHO3Output" />
      <schemaGroup name="CoverageCPersonalPropertyHO46" />
      <schemaGroup name="CoverageCPersonalPropertyHO46Input" />
      <schemaGroup name="CoverageCPersonalPropertyHO46Output" />
      <schemaGroup name="CoverageDLossOfUse" />
      <schemaGroup name="CoverageDLossOfUseInput" />
      <schemaGroup name="CoverageDLossOfUseOutput" />
      <schemaGroup name="CoverageELiability" />
      <schemaGroup name="CoverageELiabilityInput" />
      <schemaGroup name="CoverageELiabilityOutput" />
      <schemaGroup name="CoverageFMedical" />
      <schemaGroup name="CoverageFMedicalInput" />
      <schemaGroup name="CoverageFMedicalOutput" />
      <schemaGroup name="RiskCreditsAndSurcharges" />
      <schemaGroup name="ThreeAndFourFamilySurcharge" />
      <schemaGroup name="ThreeAndFourFamilySurchargeInput" />
      <schemaGroup name="ThreeAndFourFamilySurchargeOutput" />
      <schemaGroup name="TownhouseRowhouseSurcharge" />
      <schemaGroup name="TownhouseRowhouseSurchargeOutput" />
      <schemaGroup name="TownhouseRowhouseSurchargeInput" />
      <schemaGroup name="WoodStoveSurcharge" />
      <schemaGroup name="WoodStoveSurchargeOutput" />
      <schemaGroup name="WoodStoveSurchargeInput" />
      <schemaGroup name="FireResistiveDiscount" />
      <schemaGroup name="FireResistiveDiscountOutput" />
      <schemaGroup name="FireResistiveDiscountInput" />
      <schemaGroup name="LossSurcharge" />
      <schemaGroup name="LossSurchargeInput" />
      <schemaGroup name="LossSurchargeOutput" />
      <schemaGroup name="NewHomeDiscount" />
      <schemaGroup name="NewHomeDiscountOutput" />
      <schemaGroup name="NewHomeDiscountInput" />
      <schemaGroup name="NonSmokerDiscount" />
      <schemaGroup name="NonSmokerDiscountInput" />
      <schemaGroup name="NonSmokerDiscountOutput" />
      <schemaGroup name="ProtectiveDeviceDiscount" />
      <schemaGroup name="ProtectiveDeviceDiscountOutput" />
      <schemaGroup name="ProtectiveDeviceDiscountInput" />
      <schemaGroup name="AutoHomeDiscount" />
      <schemaGroup name="AutoHomeDiscountInput" />
      <schemaGroup name="AutoHomeDiscountOutput" />
      <schemaGroup name="SectionICoverages" />
      <schemaGroup name="Earthquake" />
      <schemaGroup name="EarthquakeInput" />
      <schemaGroup name="EarthquakeOutput" />
      <schemaGroup name="IdentityFraudExpenseCoverage" />
      <schemaGroup name="IdentityFraudExpenseCoverageInput" />
      <schemaGroup name="IdentityFraudExpenseCoverageOutput" />
      <schemaGroup name="InflationGuard" />
      <schemaGroup name="InflationGuardInput" />
      <schemaGroup name="InflationGuardOutput" />
      <schemaGroup name="LossAssessment" />
      <schemaGroup name="LossAssessmentInput" />
      <schemaGroup name="LossAssessmentOutput" />
      <schemaGroup name="OtherStructuresRentedToOthers" />
      <schemaGroup name="OtherStructuresRentedToOthersInput" />
      <schemaGroup name="OtherStructuresRentedToOthersOutput" />
      <schemaGroup name="PermittedIncidentalOccupancyOtherStructures" />
      <schemaGroup name="PermittedIncidentalOccupancyOtherStructuresInput" />
      <schemaGroup name="PermittedIncidentalOccupancyOtherStructuresOutput" />
      <schemaGroup name="PersonalPropertyOtherResidence" />
      <schemaGroup name="PersonalPropertyOtherResidenceInput" />
      <schemaGroup name="PersonalPropertyOtherResidenceOutput" />
      <schemaGroup name="RefrigeratedPersonalProperty" />
      <schemaGroup name="RefrigeratedPersonalPropertyInput" />
      <schemaGroup name="RefrigeratedPersonalPropertyOutput" />
      <schemaGroup name="ReplacementCostContents" />
      <schemaGroup name="ReplacementCostContentsInput" />
      <schemaGroup name="ReplacementCostContentsOutput" />
      <schemaGroup name="ReplacementCostDwelling" />
      <schemaGroup name="ReplacementCostDwellingInput" />
      <schemaGroup name="ReplacementCostDwellingOutput" />
      <schemaGroup name="SpecialComputerCoverage" />
      <schemaGroup name="SpecialComputerCoverageInput" />
      <schemaGroup name="SpecialComputerCoverageOutput" />
      <schemaGroup name="UnitsRegularlyRentedToOthers" />
      <schemaGroup name="UnitsRegularlyRentedToOthersInput" />
      <schemaGroup name="UnitsRegularlyRentedToOthersOutput" />
      <schemaGroup name="UnscheduledElectronicApparatus" />
      <schemaGroup name="UnscheduledElectronicApparatusInput" />
      <schemaGroup name="UnscheduledElectronicApparatusOutput" />
      <schemaGroup name="UnscheduledGuns" />
      <schemaGroup name="UnscheduledGunsInput" />
      <schemaGroup name="UnscheduledGunsOutput" />
      <schemaGroup name="UnscheduledJewelry" />
      <schemaGroup name="UnscheduledJewelryInput" />
      <schemaGroup name="UnscheduledJewelryOutput" />
      <schemaGroup name="UnscheduledMoney" />
      <schemaGroup name="UnscheduledMoneyInput" />
      <schemaGroup name="UnscheduledMoneyOutput" />
      <schemaGroup name="UnscheduledSecurities" />
      <schemaGroup name="UnscheduledSecuritiesInput" />
      <schemaGroup name="UnscheduledSecuritiesOutput" />
      <schemaGroup name="UnscheduledSilverware" />
      <schemaGroup name="UnscheduledSilverwareInput" />
      <schemaGroup name="UnscheduledSilverwareOutput" />
      <schemaGroup name="WaterBackupAndSumpOverflow" />
      <schemaGroup name="WaterBackupAndSumpOverflowInput" />
      <schemaGroup name="WaterBackupAndSumpOverflowOutput" />
      <schemaGroup name="WaterBackupOfSewersOrDrains" />
      <schemaGroup name="WaterBackupOfSewersOrDrainsInput" />
      <schemaGroup name="WaterBackupOfSewersOrDrainsOutput" />
      <schemaGroup name="WatercraftBlanketHullCoverage" />
      <schemaGroup name="WatercraftBlanketHullCoverageOutput" />
      <schemaGroup name="WatercraftBlanketHullCoverageInput" />
      <schemaGroup name="SpecialPersonalPropertyCoverage" />
      <schemaGroup name="SpecialPersonalPropertyCoverageOutput" />
      <schemaGroup name="SpecialPersonalPropertyCoverageInput" />
      <schemaGroup name="AdditionsAlterations" />
      <schemaGroup name="AdditionsAlterationsInput" />
      <schemaGroup name="AdditionsAlterationsOutput" />
      <schemaGroup name="BusinessProperty" />
      <schemaGroup name="BusinessPropertyInput" />
      <schemaGroup name="BusinessPropertyOutput" />
      <schemaGroup name="CreditCard" />
      <schemaGroup name="CreditCardInput" />
      <schemaGroup name="CreditCardOutput" />
      <schemaGroup name="SectionICoveragesInput" />
      <schemaGroup name="SectionICoveragesOutput" />
      <schemaGroup name="SectionIICoverages" />
      <schemaGroup name="AdditionalResidenceSummary" />
      <schemaGroup name="AdditionalResidenceSummaryOutput" />
      <schemaGroup name="AdditionalResidenceSummaryInput" />
      <schemaGroup name="BusinessPursuits" />
      <schemaGroup name="BusinessPursuitsInput" />
      <schemaGroup name="BusinessPursuitsOutput" />
      <schemaGroup name="PersonalInjury" />
      <schemaGroup name="PersonalInjuryInput" />
      <schemaGroup name="PersonalInjuryOutput" />
      <schemaGroup name="ResidenceEmployees" />
      <schemaGroup name="ResidenceEmployeesInput" />
      <schemaGroup name="ResidenceEmployeesOutput" />
      <schemaGroup name="IncidentalFarmingPersonalLiability" />
      <schemaGroup name="IncidentalFarmingPersonalLiabilityInput" />
      <schemaGroup name="IncidentalFarmingPersonalLiabilityOutput" />
      <schemaGroup name="SectionIICoveragesInput" />
      <schemaGroup name="SectionIICoveragesOutput" />
      <schemaGroup name="Dwelling" />
      <schemaGroup name="DwellingInput" />
      <schemaGroup name="DwellingOutput" />
      <schemaGroup name="LineCoverages" />
      <schemaGroup name="ManuScriptCoverage" />
      <schemaGroup name="ManuScriptCoverageOutput" />
      <schemaGroup name="ManuScriptCoverageInput" />
      <schemaGroup name="LineInput" />
      <schemaGroup name="UnderwritingQuestions" />
      <schemaGroup name="BusinessSubQuestions" />
      <schemaGroup name="OtherInsurancePolicies" />
      <schemaGroup name="UnderwritingQuestionsInput" />
      <schemaGroup name="LineOutput" />
      <schemaGroup name="LinePremiumTotals" />
      <schemaGroup name="LinePremiums" />
      <schemaGroup name="LinePurePremiums" />
      <schemaGroup name="LineTaxesAndSurcharges" />
      <schemaGroup name="LineSubtotals" />
      <schemaGroup name="RiskSubTotals" />
      <schemaGroup name="RiskTotalPremiums" />
      <schemaGroup name="RiskTotalPurePremiums" />
      <schemaGroup name="RiskTotalTaxesAndSurcharges" />
      <schemaGroup name="ManuScriptCoverageSubtotals" />
      <schemaGroup name="SPPSubtotals" />
      <schemaGroup name="WatercraftSubtotals" />
      <schemaGroup name="LineDiscountsAndSurcharges" />
      <schemaGroup name="Loss" />
      <schemaGroup name="LossInput" />
      <schemaGroup name="LossOutput" />
      <schemaGroup name="SPP" />
      <schemaGroup name="SPPInput" />
      <schemaGroup name="SPPOutput" />
      <schemaGroup name="SPPCoverage" />
      <schemaGroup name="SPPCoverageInput" />
      <schemaGroup name="SPPCoverageOutput" />
      <schemaGroup name="Watercraft" />
      <schemaGroup name="WatercraftInput" />
      <schemaGroup name="WatercraftCoverage" />
      <schemaGroup name="WatercraftCoverageOutput" />
      <schemaGroup name="WatercraftCoverageInput" />
      <schemaGroup name="WatercraftOutput" />
      <schemaGroup name="PriorInsurance" />
      <schemaGroup name="PolicyCoverages" />
      <schemaGroup name="PolicyAdjustment" />
      <schemaGroup name="PolicyAdjustmentInput" />
      <schemaGroup name="PolicyAdjustmentOutput" />
      <schemaGroup name="CreditsAndSurcharges" />
      <schemaGroup name="PolicyAdmin" />
      <schemaGroup name="Transaction" />
      <schemaGroup name="Producer" />
      <schemaGroup name="ProducerInput" />
      <schemaGroup name="Agency" />
      <schemaGroup name="AgencyInput" />
    </schemaGroups>
  </metaData>
  <modelCollections>
    <modelCollection name="MainInterview" abstract="1">
      <viewModel navigable="1" name="Account" caption="Applicant" showRef="AccountPage.Show" readOnlyRef="AccountPage.ReadOnly" override="1" calculate="1" usePartyMappings="1">
        <nameValues>
          <nameValue name="calculate" idref="True" />
          <nameValue name="usePartyMappings" value="1" />
        </nameValues>
        <group id="Account" vmHasRows="0" objectRef="Account" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.MainInterview.Account.UI_SectionCaption" value="Primary Insured" />
          <field id="AccountInput.FirstName" idref="AccountInput.FirstName" />
          <field id="AccountInput.MiddleName" idref="AccountInput.MiddleName" caption="MI" />
          <field id="AccountInput.LastName" idref="AccountInput.LastName" />
          <field id="AccountInput.Suffix" idref="AccountInput.Suffix" />
          <action name="Search_1" command="custom" showRef="AccountPage.ManualPartySearch_Show" caption="Search" />
          <action name="Search_2" command="custom" showRef="AccountPage.AutomaticPartySearch_Show" caption="Search" />
          <action name="Addcoapplicant_1" command="custom" caption="Add co-applicant" showRef="False">
            <request verb="ManuScript.addObjectRecordRq">
              <nameValues>
                <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                <nameValue value="Person" name="objectID" dataType="attribute" />
              </nameValues>
            </request>
          </action>
          <field id="PersonInput.BirthDate" idref="PersonInput.BirthDate" />
          <field id="PersonInput.SSN" idref="PersonInput.SSN" />
          <field id="PersonInput.MaritalStatus" idref="PersonInput.MaritalStatus" />
          <field id="PersonInput.Occupation" idref="PersonInput.Occupation" />
          <field id="AccountInput.PrimaryPhone" idref="AccountInput.PrimaryPhone" caption="Primary Phone" />
          <field id="AccountInput.PrimaryPhoneType" idref="AccountInput.PrimaryPhoneType" />
          <field id="PersonInput.WorkPhone" idref="PersonInput.WorkPhone" />
          <field id="AccountInput.Email" idref="AccountInput.Email" />
          <field id="AccountInput.EmailNotRequired" idref="AccountInput.EmailNotRequired" onBlur="1" />
          <constant name="UI_SectionCaption2" id="Constant.MainInterview.Account.UI_SectionCaption2" value="Property Address" />
          <field id="AccountInput.Address1" idref="AccountInput.Address1" onBlur="1" readOnlyRef="Geocode.AddressReadOnly" />
          <field id="AccountInput.Address2" idref="AccountInput.Address2" readOnlyRef="Geocode.AddressReadOnly" />
          <field id="AccountInput.City" idref="AccountInput.City" caption="City:" readOnlyRef="Geocode.AddressReadOnly" />
          <field id="AccountInput.State" idref="AccountInput.State" onBlur="1" readOnlyRef="Geocode.AddressReadOnly" />
          <field id="AccountInput.ZipCode" idref="AccountInput.ZipCode" onBlur="1" readOnlyRef="Geocode.AddressReadOnly" />
          <field id="AccountInput.County" idref="AccountInput.County" compute="1" />
          <eliminationGroup id="eliminate" name="eliminate" validRef="Geocode.IsVerified">
            <field id="Geocode.IsVerified" idref="Geocode.IsVerified" fldName="Geocode.IsVerified" />
            <field id="AccountPBBI.Latitude" idref="AccountPBBI.Latitude" />
            <field id="AccountPBBI.Longitude" idref="AccountPBBI.Longitude" />
            <field id="Geocode.Confidence" idref="Geocode.Confidence" />
          </eliminationGroup>
          <constant name="UI_SectionCaption3" id="Constant.MainInterview.Account.UI_SectionCaption3" value="Geocoding Status" />
          <eliminationGroup id="eliminate2" name="eliminate2" validRef="PitneyBowesOutput.GeocodingEnabled">
            <field id="PitneyBowesOutput.GeocodingEnabled" idref="PitneyBowesOutput.GeocodingEnabled" fldName="PitneyBowesOutput.GeocodingEnabled" />
            <field id="Geocode.GeocodeStatusDisplay" idref="Geocode.GeocodeStatusDisplay" compute="1" />
            <action name="Verify_1" command="custom" caption="Verify" showRef="Geocode.ShowPBBIVerifyAddress" pageRef="GeocodeResults" modelCollection="Geocode">
              <nameValues>
                <nameValue name="manuscript" idref="Geocode.ManuscriptID" />
                <nameValue name="preEventField" value="Geocode.GeocodeRq" />
              </nameValues>
            </action>
            <action name="Editverifiedaddress_1" command="custom" caption="Edit verified address" showRef="Geocode.ShowPBBIEditAddress" preCommand="Geocode.ClearLastVerified" postCommand="UserInterface.StorePolicy" />
            <action name="ViewMap_1" command="custom" caption="View Map" showRef="InteractiveMap.ShowPBBIInteractiveMapLink">
              <nameValues>
                <nameValue name="preEventField" value="InteractiveMap.ViewMapPreEvent" />
                <nameValue name="actionUrl" idref="InteractiveMap.JavaScript" />
              </nameValues>
            </action>
          </eliminationGroup>
          <field id="MailingAddressInfo.MailingAddressSame" idref="MailingAddressInfo.MailingAddressSame" onBlur="1" />
          <constant name="UI_SectionCaption4" id="Constant.MainInterview.Account.UI_SectionCaption4" value="Primary Insured Mailing Address" />
          <eliminationGroup id="eliminate3" name="eliminate3" validRef="PersonPrivate.ShowMailingAddress">
            <field id="PersonPrivate.ShowMailingAddress" idref="PersonPrivate.ShowMailingAddress" fldName="PersonPrivate.ShowMailingAddress" />
            <field id="MailingAddressInfo.MailingAddress1" idref="MailingAddressInfo.MailingAddress1" onBlur="1" />
            <field id="MailingAddressInfo.MailingAddress2" idref="MailingAddressInfo.MailingAddress2" onBlur="1" />
            <field id="MailingAddressInfo.MailingCity" idref="MailingAddressInfo.MailingCity" onBlur="1" />
            <field id="MailingAddressInfo.MailingState" idref="MailingAddressInfo.MailingState" onBlur="1" />
            <field id="MailingAddressInfo.MailingZipcode" idref="MailingAddressInfo.MailingZipcode" onBlur="1" />
          </eliminationGroup>
          <eliminationGroup id="eliminate4" name="eliminate4" validRef="AccountPrivate.CoApplicantExists">
            <field id="AccountPrivate.CoApplicantExists" idref="AccountPrivate.CoApplicantExists" fldName="AccountPrivate.CoApplicantExists" />
            <group id="Person" vmHasRows="1" objectRef="Person" iterMax="*" iterStep="1" restriction="AccountPrivate.NonPrimaryInsuredXPath">
              <constant name="UI_SectionCaption5" id="Constant.MainInterview.Account.UI_SectionCaption5" value="Co-Applicant" />
              <constant name="UI_SectionCaption6" id="Constant.MainInterview.Account.UI_SectionCaption6" value="Co-Applicant" />
              <field id="PersonInput.FirstName" idref="PersonInput.FirstName" />
              <field id="PersonInput.MiddleName" idref="PersonInput.MiddleName" caption="MI" />
              <field id="PersonInput.LastName" idref="PersonInput.LastName" />
              <field id="PersonInput.BirthDate2" idref="PersonInput.BirthDate" />
              <field id="PersonInput.SSN2" idref="PersonInput.SSN" />
              <field id="PersonInput.MaritalStatus2" idref="PersonInput.MaritalStatus" />
              <field id="PersonInput.Occupation2" idref="PersonInput.Occupation" />
              <field id="PersonInput.WorkPhone2" idref="PersonInput.WorkPhone" />
              <field id="PersonInput.EmailAddress" idref="PersonInput.EmailAddress" />
              <field id="PersonInput.RelationToApplicant" idref="PersonInput.RelationToApplicant" />
              <field id="MailingAddressInfo.MailingAddressSame2" idref="MailingAddressInfo.MailingAddressSame" onBlur="1" />
              <constant name="UI_SectionCaption7" id="Constant.MainInterview.Account.UI_SectionCaption7" value="Co-Applicant Mailing Address" />
              <eliminationGroup id="eliminate5" name="eliminate5" validRef="PersonPrivate.ShowMailingAddress">
                <field idref="PersonPrivate.ShowMailingAddress" fldName="PersonPrivate.ShowMailingAddress2" id="PersonPrivate.ShowMailingAddress2" />
                <field id="MailingAddressInfo.MailingAddress12" idref="MailingAddressInfo.MailingAddress1" />
                <field id="MailingAddressInfo.MailingAddress22" idref="MailingAddressInfo.MailingAddress2" />
                <field id="MailingAddressInfo.MailingCity2" idref="MailingAddressInfo.MailingCity" />
                <field id="MailingAddressInfo.MailingState2" idref="MailingAddressInfo.MailingState" />
                <field id="MailingAddressInfo.MailingZipcode2" idref="MailingAddressInfo.MailingZipcode" />
              </eliminationGroup>
              <action name="DeleteCoapplicant_1" command="delete" caption="Delete Co-applicant">
                <nameValues>
                  <nameValue name="isRowAction" value="1" />
                </nameValues>
              </action>
            </group>
          </eliminationGroup>
          <action name="Addcoapplicant_2" command="custom" caption="Add co-applicant" showRef="AccountPage.ShowAddCoApplicantButton">
            <request verb="ManuScript.addObjectRecordRq">
              <nameValues>
                <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                <nameValue value="Person" name="objectID" dataType="attribute" />
              </nameValues>
            </request>
          </action>
          <action name="GetCreditScore_1" command="custom" caption="Get Credit Score" showRef="CreditScore.UseCreditScore">
            <nameValues>
              <nameValue name="preEventField" value="CreditScore.GetCreditScore" />
            </nameValues>
          </action>
          <eliminationGroup id="eliminate6" name="eliminate6" validRef="CreditScore.Executed">
            <field id="CreditScore.Executed" idref="CreditScore.Executed" fldName="CreditScore.Executed" />
            <field id="Spacer" idref="Spacer" caption="Policy premium may have been adjusted based on receipt of credit score" />
          </eliminationGroup>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_MainInterview_Account_View" caption="Marketplace_PersonalHome_1_0_0_0_MainInterview_Account_View" default="0" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="PolicyDetail" prevPage="Account" caption="Policy Term" showRef="PolicyDetailPage.Show" readOnlyRef="PolicyDetailPage.ReadOnly" override="1">
        <group id="Policy" vmHasRows="0" objectRef="Policy" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.MainInterview.PolicyDetail.UI_SectionCaption" value="Fair Credit Reporting Act" />
          <field id="PolicyInput.FairCreditReportingActWording" idref="PolicyInput.FairCreditReportingActWording" caption=" " compute="1" readOnlyRef="True" />
          <field id="PolicyInput.FairCreditReportingAct" idref="PolicyInput.FairCreditReportingAct" caption=" " />
          <field id="PolicyInput.FairCreditReportingActPostWording" idref="PolicyInput.FairCreditReportingActPostWording" caption=" " compute="1" readOnlyRef="True" />
          <constant name="UI_SectionCaption2" id="Constant.MainInterview.PolicyDetail.UI_SectionCaption2" value="Policy Information" />
          <field id="PolicyInput.Description" idref="PolicyInput.Description" />
          <field id="PolicyInput.EffectiveDate" idref="PolicyInput.EffectiveDate" onBlur="1" />
          <eliminationGroup id="eliminate" name="eliminate" validRef="GetLatestRates.Show">
            <field id="GetLatestRates.Show" idref="GetLatestRates.Show" fldName="GetLatestRates.Show" />
            <field id="Spacer" idref="Spacer" caption="The current effective date does not match with the latest rates. Would you like to get the latest version?" />
            <action name="goto_1" command="goto" showRef="GetLatestRates.Show">
              <nameValues>
                <nameValue name="caption" idref="GetLatestRates.Caption" />
                <nameValue name="preEventField" value="GetLatestRates.Value" />
              </nameValues>
            </action>
          </eliminationGroup>
          <field id="PolicyInput.Term" idref="PolicyInput.Term" onBlur="1" />
          <field id="PolicyInput.ExpirationDate" idref="PolicyInput.ExpirationDate" compute="1" onBlur="1" />
          <constant name="UI_SectionCaption3" id="Constant.MainInterview.PolicyDetail.UI_SectionCaption3" value="Eligibility/Rating Questions" />
          <field id="PolicyInput.NumberOfLosses" idref="PolicyInput.NumberOfLosses" />
          <field id="PolicyInput.PropertyCurrentlyInsured" idref="PolicyInput.PropertyCurrentlyInsured" />
          <field id="PolicyInput.EquippedWithStandbyGenerator" idref="PolicyInput.EquippedWithStandbyGenerator" />
          <field id="PolicyInput.AgencyWriteAutoPolicy" idref="PolicyInput.AgencyWriteAutoPolicy" />
          <field id="PolicyInput.BookRollover" idref="PolicyInput.BookRollover" />
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_MainInterview_PolicyDetail_View" caption="Marketplace_PersonalHome_1_0_0_0_MainInterview_PolicyDetail_View" default="0" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="RiskSchedule" prevPage="PolicyDetail" caption="Dwelling Information" showRef="RiskSchedulePage.Show" readOnlyRef="RiskSchedulePage.ReadOnly" override="1">
        <group id="Risk" vmHasRows="0" objectRef="Risk" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.MainInterview.RiskSchedule.UI_SectionCaption" value="Dwelling Information" />
          <field id="LocationOutputNonShredded.AddressDisplay" idref="LocationOutputNonShredded.AddressDisplay" caption=" " compute="1" />
          <action name="Edit_1" command="custom" caption="Edit" preCommand="LocationPrivate.SetLocationEditMode" pageRef="LocationDetail" modelCollection="LocationDetail">
            <nameValues>
              <nameValue name="ignoreValidation" value="1" />
            </nameValues>
          </action>
          <field id="DwellingInput.Form" idref="DwellingInput.Form" onBlur="1" />
          <field id="DwellingInput.UseType" idref="DwellingInput.UseType" />
          <field id="DwellingInput.BuildingType" idref="DwellingInput.BuildingType" compute="1" />
          <field id="DwellingInput.YearBuilt" idref="DwellingInput.YearBuilt" compute="1" removeZero="True" />
          <field id="DwellingInput.Construction" idref="DwellingInput.Construction" />
          <field id="DwellingInput.RatedProtectionClass" idref="DwellingInput.RatedProtectionClass" onBlur="1" />
          <field id="DwellingInput.NumberOfFamilies" idref="DwellingInput.NumberOfFamilies" />
          <field id="DwellingInput.TerritoryCode" idref="DwellingInput.TerritoryCode" compute="1" readOnlyRef="True" />
          <field id="DwellingInput.FoundationType" idref="DwellingInput.FoundationType" />
          <field id="DwellingInput.SquareFeet" idref="DwellingInput.SquareFeet" />
          <field id="DwellingInput.PurchasePrice" idref="DwellingInput.PurchasePrice" />
          <field id="DwellingInput.PurchaseDate" idref="DwellingInput.PurchaseDate" />
          <field id="DwellingInput.CurrentMarketValue" idref="DwellingInput.CurrentMarketValue" />
          <constant name="UI_SectionCaption2" id="Constant.MainInterview.RiskSchedule.UI_SectionCaption2" value="Additional Information" />
          <field id="DwellingInput.PrimaryHeatType" idref="DwellingInput.PrimaryHeatType" />
          <field id="DwellingInput.SupplementalHeatType" idref="DwellingInput.SupplementalHeatType" />
          <field id="DwellingInput.UnderConstruction" idref="DwellingInput.UnderConstruction" />
          <field id="DwellingInput.BuildingCodeEffectivenessGrading" idref="DwellingInput.BuildingCodeEffectivenessGrading" />
          <field id="DwellingInput.ElectricalSystem" idref="DwellingInput.ElectricalSystem" />
          <field id="DwellingInput.OpeningProtection" idref="DwellingInput.OpeningProtection" />
          <field id="DwellingInput.BurglarAlarm" idref="DwellingInput.BurglarAlarm" />
          <field id="DwellingInput.FireAlarm" idref="DwellingInput.FireAlarm" />
          <field id="DwellingInput.Sprinkler" idref="DwellingInput.Sprinkler" />
          <field id="DwellingInput.BuildingCodeEffectivenessGradingCommunity" idref="DwellingInput.BuildingCodeEffectivenessGradingCommunity" />
          <field id="DwellingInput.Wiring" idref="DwellingInput.Wiring" />
          <field id="DwellingInput.RoofGeometry" idref="DwellingInput.RoofGeometry" />
          <action name="UpdatedServices_1" command="goto" caption="Updated Services" pageRef="UpdatedServices" modelCollection="UpdatedServices" />
          <constant name="UI_SectionCaption3" id="Constant.MainInterview.RiskSchedule.UI_SectionCaption3" value="Suburban Rating Information" />
          <eliminationGroup id="eliminate" name="eliminate" validRef="DwellingPrivate.QualifiesForSuburbanRating">
            <field id="DwellingPrivate.QualifiesForSuburbanRating" idref="DwellingPrivate.QualifiesForSuburbanRating" fldName="DwellingPrivate.QualifiesForSuburbanRating" />
            <field id="DwellingInput.DistanceToFireStation" idref="DwellingInput.DistanceToFireStation" />
            <field id="DwellingInput.DistanceToHydrant" idref="DwellingInput.DistanceToHydrant" />
            <field id="DwellingInput.DistanceToWaterSource" idref="DwellingInput.DistanceToWaterSource" />
            <field id="DwellingInput.DwellingAccessibleToFireEquipment" idref="DwellingInput.DwellingAccessibleToFireEquipment" />
            <field id="DwellingInput.RespondingFireDepartment" idref="DwellingInput.RespondingFireDepartment" />
            <field id="DwellingInput.DistanceToCoast" idref="DwellingInput.DistanceToCoast" />
            <field id="DwellingInput.DistanceToTidalWater" idref="DwellingInput.DistanceToTidalWater" />
            <field id="DwellingInput.DistanceToMajorWaterway" idref="DwellingInput.DistanceToMajorWaterway" />
          </eliminationGroup>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_MainInterview_RiskSchedule_View" caption="Marketplace_PersonalHome_1_0_0_0_MainInterview_RiskSchedule_View" default="0" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="DwellingCoverage" prevPage="RiskSchedule" caption="Dwelling Coverage" showRef="DwellingPage.Show" readOnlyRef="DwellingPage.ReadOnly">
        <group id="Risk" vmHasRows="0" objectRef="Risk" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.MainInterview.DwellingCoverage.UI_SectionCaption" value="Coverage Information" />
          <field id="Spacer" idref="Spacer" caption="Coverage" />
          <field id="BlankSpacer" idref="Spacer" caption="" hideRef="DwellingPrivate.FormIsDwellingNot" />
          <field id="Spacer2" idref="Spacer" caption="Limit" />
          <field id="Spacer3" idref="Spacer" caption="Included Limit" />
          <field id="Spacer4" idref="Spacer" caption="Deductible" />
          <field id="Spacer5" idref="Spacer" caption="Wind Deductible" />
          <field id="CoverageADwellingInput.Limit" idref="CoverageADwellingInput.Limit" caption="Dwelling Limit" compute="1" onBlur="1" hideRef="DwellingPrivate.FormIsCondoOrTenant" />
          <field id="CoverageCPersonalPropertyHO46Input.Limit" idref="CoverageCPersonalPropertyHO46Input.Limit" caption="Personal Property" compute="1" onBlur="1" hideRef="DwellingPrivate.FormIsDwelling" />
          <field id="DwellingInput.Deductible" idref="DwellingInput.Deductible" caption=" " />
          <field id="DwellingInput.WindDeductible" idref="DwellingInput.WindDeductible" caption="  ">
            <nameValues>
              <nameValue value="Wind Deductible" name="caption" />
            </nameValues>
          </field>
          <eliminationGroup id="eliminate" name="eliminate" validRef="DwellingPrivate.FormIsDwelling">
            <field id="DwellingPrivate.FormIsDwelling" idref="DwellingPrivate.FormIsDwelling" fldName="DwellingPrivate.FormIsDwelling" />
            <field id="CoverageBOtherStructuresInput.Limit" idref="CoverageBOtherStructuresInput.Limit" caption="Other Structures" compute="1" onBlur="1" />
            <field id="CoverageBOtherStructuresOutput.IncludedLimit" idref="CoverageBOtherStructuresOutput.IncludedLimit" caption=" " compute="1" />
          </eliminationGroup>
          <eliminationGroup id="eliminate2" name="eliminate2" validRef="DwellingPrivate.FormIsDwelling">
            <field idref="DwellingPrivate.FormIsDwelling" fldName="DwellingPrivate.FormIsDwelling2" id="DwellingPrivate.FormIsDwelling2" />
            <field id="CoverageCPersonalPropertyHO3Input.Limit" idref="CoverageCPersonalPropertyHO3Input.Limit" caption="Personal Property" compute="1" onBlur="1" />
            <field id="CoverageCPersonalPropertyHO3Output.IncludedLimit" idref="CoverageCPersonalPropertyHO3Output.IncludedLimit" caption=" " compute="1" />
          </eliminationGroup>
          <field id="CoverageDLossOfUseInput.Limit" idref="CoverageDLossOfUseInput.Limit" caption="Loss Of Use" compute="1" onBlur="1" />
          <field id="CoverageDLossOfUseOutput.IncludedLimit" idref="CoverageDLossOfUseOutput.IncludedLimit" caption=" " compute="1" />
          <field id="CoverageELiabilityInput.Limit" idref="CoverageELiabilityInput.Limit" caption="Personal Liability" onBlur="1" />
          <field id="CoverageFMedicalInput.Limit" idref="CoverageFMedicalInput.Limit" caption="Medical Payments" onBlur="1" />
          <constant name="UI_SectionCaption2" id="Constant.MainInterview.DwellingCoverage.UI_SectionCaption2" value="Common Coverages" />
          <field id="ReplacementCostContentsInput.Indicator" idref="ReplacementCostContentsInput.Indicator" compute="1" />
          <field id="ReplacementCostDwellingInput.Indicator" idref="ReplacementCostDwellingInput.Indicator" compute="1" onBlur="1" hideRef="DwellingPrivate.FormIsCondoOrTenant" />
          <field id="ReplacementCostDwellingInput.ReplacementCostValue" idref="ReplacementCostDwellingInput.ReplacementCostValue" compute="1" hideRef="ReplacementCostDwellingPrivate.HideReplacementCostValue" />
          <field id="CreditCardInput.Limit" idref="CreditCardInput.Limit" />
          <field id="RefrigeratedPersonalPropertyInput.Indicator" idref="RefrigeratedPersonalPropertyInput.Indicator" />
          <field id="WaterBackupOfSewersOrDrainsInput.Indicator" idref="WaterBackupOfSewersOrDrainsInput.Indicator" hideRef="DwellingPrivate.FormIsCondoOrTenant" />
          <action name="ImportReplacementCos_1" command="custom" caption="Import Replacement Cost" />
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_MainInterview_DwellingCoverage_View" caption="Marketplace_PersonalHome_1_0_0_0_MainInterview_DwellingCoverage_View" default="0" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="AdditionalCoverage" prevPage="DwellingCoverage" caption="Additional Coverage" showRef="AdditionalCoveragePage.Show" readOnlyRef="AdditionalCoveragePage.ReadOnly">
        <group id="Risk" vmHasRows="0" objectRef="Risk" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.MainInterview.AdditionalCoverage.UI_SectionCaption" value="Additional Coverage Information" />
          <constant name="UI_SectionCaption2" id="Constant.MainInterview.AdditionalCoverage.UI_SectionCaption2" value="Additional Property Coverages" />
          <field id="AdditionsAlterationsInput.Type" idref="AdditionsAlterationsInput.Type" />
          <field id="AdditionsAlterationsInput.Limit" idref="AdditionsAlterationsInput.Limit" />
          <field id="BusinessPropertyInput.Limit" idref="BusinessPropertyInput.Limit" />
          <field id="EarthquakeInput.Deductible" idref="EarthquakeInput.Deductible" />
          <field id="EarthquakeInput.LossAssessmentLimit" idref="EarthquakeInput.LossAssessmentLimit" removeZero="True" />
          <field id="IdentityFraudExpenseCoverageInput.Indicator" idref="IdentityFraudExpenseCoverageInput.Indicator" />
          <field id="InflationGuardInput.Limit" idref="InflationGuardInput.Limit" compute="1" />
          <field id="LossAssessmentInput.Limit" idref="LossAssessmentInput.Limit" />
          <field id="OtherStructuresRentedToOthersInput.Limit" idref="OtherStructuresRentedToOthersInput.Limit" compute="1" removeZero="DwellingPrivate.FormIsDwelling" />
          <field id="PermittedIncidentalOccupancyOtherStructuresInput.Limit" idref="PermittedIncidentalOccupancyOtherStructuresInput.Limit" removeZero="True" />
          <field id="PersonalPropertyOtherResidenceInput.Limit" idref="PersonalPropertyOtherResidenceInput.Limit" removeZero="True" />
          <field id="LimitedFungiBacteriaInput.Limit" idref="LimitedFungiBacteriaInput.Limit" />
          <field id="OrdinanceOrLawInput.Limit" idref="OrdinanceOrLawInput.Limit" />
          <field id="CarportsPoolCagesInput.Limit" idref="CarportsPoolCagesInput.Limit" compute="1" onBlur="1" />
          <field id="CarportsPoolCagesInput.Description" idref="CarportsPoolCagesInput.Description" hideRef="CarportsPoolCagesPrivate.HideDescription" />
          <field id="SpecialComputerCoverageInput.Indicator" idref="SpecialComputerCoverageInput.Indicator" />
          <field id="SpecialPersonalPropertyCoverageInput.Indicator" idref="SpecialPersonalPropertyCoverageInput.Indicator" />
          <field id="UnitsRegularlyRentedToOthersInput.Indicator" idref="UnitsRegularlyRentedToOthersInput.Indicator" />
          <field id="UnscheduledElectronicApparatusInput.Limit" idref="UnscheduledElectronicApparatusInput.Limit" />
          <field id="UnscheduledGunsInput.Limit" idref="UnscheduledGunsInput.Limit" />
          <field id="UnscheduledJewelryInput.Limit" idref="UnscheduledJewelryInput.Limit" />
          <field id="UnscheduledMoneyInput.Limit" idref="UnscheduledMoneyInput.Limit" />
          <field id="UnscheduledSecuritiesInput.Limit" idref="UnscheduledSecuritiesInput.Limit" />
          <field id="UnscheduledSilverwareInput.Limit" idref="UnscheduledSilverwareInput.Limit" />
          <field id="WaterBackupAndSumpOverflowInput.Indicator" idref="WaterBackupAndSumpOverflowInput.Indicator" />
          <field id="WatercraftBlanketHullCoverageInput.Limit" idref="WatercraftBlanketHullCoverageInput.Limit" />
          <constant name="UI_SectionCaption3" id="Constant.MainInterview.AdditionalCoverage.UI_SectionCaption3" value="Additional Liability Coverages" />
          <field id="IncidentalFarmingPersonalLiabilityInput.Type" idref="IncidentalFarmingPersonalLiabilityInput.Type" />
          <field id="PersonalInjuryInput.Indicator" idref="PersonalInjuryInput.Indicator" />
          <field id="ResidenceEmployeesInput.NumberOfEmployees" idref="ResidenceEmployeesInput.NumberOfEmployees" removeZero="True" />
          <action name="AddEditAdditionalRes_1" command="goto" caption="Add/Edit Additional Residence(s)" pageRef="AdditionalResidence" modelCollection="AdditionalResidence" />
          <action name="AddEditBusinessPursu_1" command="goto" caption="Add/Edit Business Pursuits" pageRef="BusinessPursuits" modelCollection="BusinessPursuits" />
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_MainInterview_AdditionalCoverage_View" caption="Marketplace_PersonalHome_1_0_0_0_MainInterview_AdditionalCoverage_View" default="0" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="Watercraft" prevPage="AdditionalCoverage" caption="Watercraft" readOnlyRef="AllPage.ReadOnly">
        <group id="Line" vmHasRows="0" objectRef="Line" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.MainInterview.Watercraft.UI_SectionCaption" value="Watercraft" />
          <group id="Watercraft" vmHasRows="1" objectRef="Watercraft" iterMax="*" iterStep="1">
            <field id="WatercraftInput.Type" idref="WatercraftInput.Type" onBlur="1" />
            <field id="WatercraftInput.Length" idref="WatercraftInput.Length" removeZero="True" />
            <field id="WatercraftInput.Horsepower" idref="WatercraftInput.Horsepower" removeZero="True" />
            <field id="WatercraftInput.MilesPerHour" idref="WatercraftInput.MilesPerHour" compute="1" removeZero="True" />
            <action name="Delete_1" command="delete" caption="Delete" showRef="LinePrivate.ShowDelete">
              <nameValues>
                <nameValue name="isRowAction" value="1" />
              </nameValues>
            </action>
            <action name="Delete_2" command="markForDelete" caption="Delete" showRef="LinePrivate.ShowDeleteMark">
              <nameValues>
                <nameValue name="isRowAction" value="1" />
              </nameValues>
            </action>
            <action name="AddWatercraft_1" command="add" caption="Add Watercraft" />
          </group>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_MainInterview_Watercraft_View" caption="Marketplace_PersonalHome_1_0_0_0_MainInterview_Watercraft_View" default="0" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="ScheduledPersonalProperty" prevPage="Watercraft" caption="SPP" readOnlyRef="AllPage.ReadOnly">
        <group id="Line" vmHasRows="0" objectRef="Line" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.MainInterview.ScheduledPersonalProperty.UI_SectionCaption" value="Scheduled Personal Property" />
          <group id="SPP" vmHasRows="1" objectRef="SPP" iterMax="*" iterStep="1">
            <field id="SPPInput.Type" idref="SPPInput.Type" onBlur="1" />
            <field id="SPPInput.Description" idref="SPPInput.Description" />
            <field id="SPPInput.Limit" idref="SPPInput.Limit" onBlur="1" removeZero="True" />
            <field id="SPPInput.Vaulted" idref="SPPInput.Vaulted" caption="Vltd" compute="1" />
            <field id="SPPInput.BreakageCoverage" idref="SPPInput.BreakageCoverage" caption="Bkg" compute="1" />
            <field id="SPPInput.Blanket" idref="SPPInput.Blanket" caption="Blkt" compute="1" />
            <action name="Del_1" command="delete" caption="Del" showRef="LinePrivate.ShowDelete">
              <nameValues>
                <nameValue name="isRowAction" value="1" />
              </nameValues>
            </action>
            <action name="Del_2" command="markForDelete" caption="Del" showRef="LinePrivate.ShowDeleteMark">
              <nameValues>
                <nameValue name="isRowAction" value="1" />
              </nameValues>
            </action>
            <action name="Appraisal_1" command="specificIter" caption="Appraisal" showRef="SPPPrivate.ShowApprisal" pageRef="AddAttachment" modelCollection="AddAttachment">
              <nameValues>
                <nameValue name="isRowAction" value="1" />
              </nameValues>
            </action>
            <action name="AddItem_1" command="add" caption="Add Item" />
          </group>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_MainInterview_ScheduledPersonalProperty_View" caption="Marketplace_PersonalHome_1_0_0_0_MainInterview_ScheduledPersonalProperty_View" default="0" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="Underwriting" prevPage="AdditionalOtherInterests" caption="Underwriting" showRef="UnderwritingPage.Show" readOnlyRef="UnderwritingPage.ReadOnly" override="1">
        <group id="UnderwritingQuestions" vmHasRows="0" objectRef="UnderwritingQuestions" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.MainInterview.Underwriting.UI_SectionCaption" value="Additional Information" />
          <constant name="UI_SectionCaption2" id="Constant.MainInterview.Underwriting.UI_SectionCaption2" value="Insured History" />
          <field id="UnderwritingQuestionsInput.AnyCoverageDeclinedCancelled" idref="UnderwritingQuestionsInput.AnyCoverageDeclinedCancelled" />
          <field id="UnderwritingQuestionsInput.IndictedOrConvicted" idref="UnderwritingQuestionsInput.IndictedOrConvicted" />
          <field id="UnderwritingQuestionsInput.ForeclosureBankruptcy" idref="UnderwritingQuestionsInput.ForeclosureBankruptcy" />
          <constant name="UI_SectionCaption3" id="Constant.MainInterview.Underwriting.UI_SectionCaption3" value="Dwelling History" />
          <field id="UnderwritingQuestionsInput.IsBuildingUndergoingRenovation" idref="UnderwritingQuestionsInput.IsBuildingUndergoingRenovation" />
          <field id="UnderwritingQuestionsInput.IsHouseForSale" idref="UnderwritingQuestionsInput.IsHouseForSale" />
          <field id="UnderwritingQuestionsInput.IsPropertyWithin300FtOfCommercialProp" idref="UnderwritingQuestionsInput.IsPropertyWithin300FtOfCommercialProp" />
          <field id="UnderwritingQuestionsInput.IsThereATrampolineOnPremises" idref="UnderwritingQuestionsInput.IsThereATrampolineOnPremises" onBlur="1" />
          <field id="UnderwritingQuestionsInput.IsHouseInGatedCommunity" idref="UnderwritingQuestionsInput.IsHouseInGatedCommunity" />
          <field id="UnderwritingQuestionsInput.IsolatedProperty" idref="UnderwritingQuestionsInput.IsolatedProperty" />
          <field id="UnderwritingQuestionsInput.AnyAnimalsOrExoticPets" idref="UnderwritingQuestionsInput.AnyAnimalsOrExoticPets" onBlur="1" />
          <eliminationGroup id="eliminate" name="eliminate" validRef="UnderwritingQuestionsInput.AnyAnimalsOrExoticPets">
            <field idref="UnderwritingQuestionsInput.AnyAnimalsOrExoticPets" fldName="UnderwritingQuestionsInput.AnyAnimalsOrExoticPets2" id="UnderwritingQuestionsInput.AnyAnimalsOrExoticPets2" />
            <field id="AnimalPetSubQuestions.ViciousAnimal" idref="AnimalPetSubQuestions.ViciousAnimal" />
            <field id="AnimalPetSubQuestions.Reptilesamphibians" idref="AnimalPetSubQuestions.Reptilesamphibians" />
            <field id="AnimalPetSubQuestions.LivestockSaddleAnimals" idref="AnimalPetSubQuestions.LivestockSaddleAnimals" />
            <field id="AnimalPetSubQuestions.IneligibleDogBreeds" idref="AnimalPetSubQuestions.IneligibleDogBreeds" />
          </eliminationGroup>
          <field id="UnderwritingQuestionsInput.SwimmingPool" idref="UnderwritingQuestionsInput.SwimmingPool" compute="0" onBlur="1" />
          <eliminationGroup id="eliminate2" name="eliminate2" validRef="UnderwritingQuestionsPrivate.IsAnySwimmingPool">
            <field id="UnderwritingQuestionsPrivate.IsAnySwimmingPool" idref="UnderwritingQuestionsPrivate.IsAnySwimmingPool" fldName="UnderwritingQuestionsPrivate.IsAnySwimmingPool" />
            <field id="SwimmingPoolSubQuestions.PoolType" idref="SwimmingPoolSubQuestions.PoolType" />
            <field id="SwimmingPoolSubQuestions.ApprovedFence" idref="SwimmingPoolSubQuestions.ApprovedFence" />
            <field id="SwimmingPoolSubQuestions.DivingBoard" idref="SwimmingPoolSubQuestions.DivingBoard" />
            <field id="SwimmingPoolSubQuestions.Slide" idref="SwimmingPoolSubQuestions.Slide" />
          </eliminationGroup>
          <field id="UnderwritingQuestionsInput.AnyOtherInsurance" idref="UnderwritingQuestionsInput.AnyOtherInsurance" onBlur="1" />
          <eliminationGroup id="eliminate3" name="eliminate3" validRef="UnderwritingQuestionsPrivate.IsAnyOtherInsurance">
            <field id="UnderwritingQuestionsPrivate.IsAnyOtherInsurance" idref="UnderwritingQuestionsPrivate.IsAnyOtherInsurance" fldName="UnderwritingQuestionsPrivate.IsAnyOtherInsurance" />
            <group id="OtherInsurancePolicies" vmHasRows="1" objectRef="OtherInsurancePolicies" iterMax="*" iterStep="1">
              <field id="OtherInsurancePolicies.PolicyNumber" idref="OtherInsurancePolicies.PolicyNumber" caption=" " />
              <action name="Delete_1" command="delete" caption="Delete">
                <nameValues>
                  <nameValue name="isRowAction" value="1" />
                </nameValues>
              </action>
              <action name="Addanotherpolicy_1" command="add" caption="Add another policy" />
            </group>
          </eliminationGroup>
          <field id="UnderwritingQuestionsInput.AnyBusinessConducted" idref="UnderwritingQuestionsInput.AnyBusinessConducted" onBlur="1" />
          <eliminationGroup id="eliminate4" name="eliminate4" validRef="UnderwritingQuestionsPrivate.IsAnyBusinessConducted">
            <field id="UnderwritingQuestionsPrivate.IsAnyBusinessConducted" idref="UnderwritingQuestionsPrivate.IsAnyBusinessConducted" fldName="UnderwritingQuestionsPrivate.IsAnyBusinessConducted" />
            <field id="BusinessSubQuestions.BusinessConductedTypeOfBusiness" idref="BusinessSubQuestions.BusinessConductedTypeOfBusiness" />
            <field id="BusinessSubQuestions.BusinessConductedOwnership" idref="BusinessSubQuestions.BusinessConductedOwnership" />
            <field id="BusinessSubQuestions.BusinessConductedLocation" idref="BusinessSubQuestions.BusinessConductedLocation" />
            <field id="BusinessSubQuestions.BusinessConductedCustomers" idref="BusinessSubQuestions.BusinessConductedCustomers" />
            <field id="BusinessSubQuestions.BusinessConductedNonResidentEmployees" idref="BusinessSubQuestions.BusinessConductedNonResidentEmployees" />
            <field id="BusinessSubQuestions.BusinessConductedCommercialCoverageInForce" idref="BusinessSubQuestions.BusinessConductedCommercialCoverageInForce" />
          </eliminationGroup>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_MainInterview_Underwriting_View" caption="Marketplace_PersonalHome_1_0_0_0_MainInterview_Underwriting_View" default="0" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="InsuranceHistory" prevPage="Underwriting" caption="Insurance History" showRef="InsuranceHistoryPage.Show" readOnlyRef="InsuranceHistoryPage.ReadOnly" override="1">
        <group id="Policy" vmHasRows="0" objectRef="Policy" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.MainInterview.InsuranceHistory.UI_SectionCaption" value="Insurance History" />
          <field id="Spacer" idref="Spacer" caption="Please list prior insurance" />
          <group id="PriorInsurance" vmHasRows="1" objectRef="PriorInsurance" iterMax="*" iterStep="1">
            <field id="PriorInsurance.CarrierName" idref="PriorInsurance.CarrierName" />
            <field id="PriorInsurance.EffectiveDate" idref="PriorInsurance.EffectiveDate" />
            <field id="PriorInsurance.ExpirationDate" idref="PriorInsurance.ExpirationDate" />
            <field id="PriorInsurance.Limit" idref="PriorInsurance.Limit" />
            <field id="PriorInsurance.Deductible" idref="PriorInsurance.Deductible" />
            <action name="Detail_1" command="specificIter" caption="Detail" pageRef="PriorInsuranceDetail" modelCollection="PriorInsuranceDetail">
              <nameValues>
                <nameValue name="isRowAction" value="1" />
              </nameValues>
            </action>
            <action name="Delete_1" command="delete" caption="Delete">
              <nameValues>
                <nameValue name="isRowAction" value="1" />
              </nameValues>
            </action>
            <action name="AddCarrier_1" command="add" caption="Add Carrier" showRef="LockPolicy.False" pageRef="PriorInsuranceDetail" modelCollection="PriorInsuranceDetail" />
          </group>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_MainInterview_InsuranceHistory_View" caption="Marketplace_PersonalHome_1_0_0_0_MainInterview_InsuranceHistory_View" default="0" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="Coverage" prevPage="ClaimsHistory" caption="Pricing &amp; Coverage" showRef="CoveragePage.Show" calculate="2" idref="ExecutePremiums.Value" worksheet="PricingPage.IncludeWorksheetData" readOnlyRef="CoveragePage.ReadOnly" override="1">
        <group id="Policy" vmHasRows="0" objectRef="Policy" iterMax="*" iterStep="1">
          <field id="PolicyPremiums.Premium" idref="PolicyPremiums.Premium" />
          <field id="PolicyPremiums.PremiumChange" idref="PolicyPremiums.PremiumChange" caption="Premium Change" />
          <field id="PolicyPremiums.PremiumPrior" idref="PolicyPremiums.PremiumPrior" />
          <field id="PolicyPremiums.PremiumWritten" idref="PolicyPremiums.PremiumWritten" caption="Premium Written" />
          <field idref="LineInput.CoveragePackage" id="LineInput.CoveragePackage" onBlur="1" />
          <field idref="data.TotalPremiumChange" id="data.TotalPremiumChange" />
          <field idref="ExecutePremiums.Value" id="ExecutePremiums.Value" />
          <constant name="UI_SectionCaption" id="Constant.MainInterview.Coverage.UI_SectionCaption" value="Coverage Calculator" />
          <eliminationGroup id="eliminate" name="eliminate" validRef="DwellingPrivate.FormIsDwelling">
            <field id="DwellingPrivate.FormIsDwelling" idref="DwellingPrivate.FormIsDwelling" fldName="DwellingPrivate.FormIsDwelling" />
            <field id="CoverageADwellingInput.Limit" idref="CoverageADwellingInput.Limit" compute="1" onBlur="1" hideRef="DwellingPrivate.FormIsCondoOrTenant" />
            <field id="CoverageADwellingInput.Limit2" idref="CoverageADwellingInput.Limit" compute="1" onBlur="1" hideRef="DwellingPrivate.FormIsCondoOrTenant">
              <nameValues>
                <nameValue value="Dwelling Limit (A)" name="caption" />
              </nameValues>
            </field>
            <field id="DwellingOutput.AdjustedBasePremium" idref="DwellingOutput.AdjustedBasePremium" caption="$" />
            <field id="Spacer" idref="Spacer" caption="All-Peril Deductible" />
            <constant name="UI_SectionCaption2" id="Constant.MainInterview.Coverage.UI_SectionCaption2" value=" " />
            <field id="CoverageBOtherStructuresInput.Limit" idref="CoverageBOtherStructuresInput.Limit" onBlur="1" />
            <field id="CoverageBOtherStructuresInput.Limit2" idref="CoverageBOtherStructuresInput.Limit" onBlur="1" />
            <field id="CoverageBOtherStructuresOutput.Premium" idref="CoverageBOtherStructuresOutput.Premium" caption="$" />
            <field id="CoverageCPersonalPropertyHO3Input.Limit" idref="CoverageCPersonalPropertyHO3Input.Limit" onBlur="1" />
            <field id="CoverageCPersonalPropertyHO3Input.Limit2" idref="CoverageCPersonalPropertyHO3Input.Limit" onBlur="1">
              <nameValues>
                <nameValue value="Personal Property Limit (C)" name="caption" />
              </nameValues>
            </field>
            <field id="CoverageCPersonalPropertyHO3OutputNonShredded.IncludedInCovAText" idref="CoverageCPersonalPropertyHO3OutputNonShredded.IncludedInCovAText" compute="1" />
            <field id="CoverageDLossOfUseInput.Limit" idref="CoverageDLossOfUseInput.Limit" />
            <field id="CoverageDLossOfUseInput.Limit2" idref="CoverageDLossOfUseInput.Limit" onBlur="1" />
            <field id="CoverageDLossOfUseOutput.Premium" idref="CoverageDLossOfUseOutput.Premium" caption="$" />
            <field id="Spacer2" idref="Spacer" caption="Personal Liability Limit (E)" />
            <field id="CoverageELiabilityOutput.Premium" idref="CoverageELiabilityOutput.Premium" caption="$">
              <nameValues>
                <nameValue value="Personal Liability (E) Premium" name="caption" />
              </nameValues>
            </field>
            <field id="Spacer3" idref="Spacer" caption="Medical Payments Limit (F)" />
            <field id="CoverageFMedicalOutput.Premium" idref="CoverageFMedicalOutput.Premium" caption="$">
              <nameValues>
                <nameValue value="Medical Payments (F) Premium" name="caption" />
              </nameValues>
            </field>
            <field id="Spacer4" idref="Spacer" caption="Optional Property Coverage" />
            <field id="SectionICoveragesOutput.SectionIPremium" idref="SectionICoveragesOutput.SectionIPremium" caption="$" compute="1">
              <nameValues>
                <nameValue value="Section I Premium" name="caption" />
              </nameValues>
            </field>
            <field id="Spacer5" idref="Spacer" caption="Optional Liability Coverage" />
            <field id="SectionIICoveragesOutput.SectionIIPremium" idref="SectionIICoveragesOutput.SectionIIPremium" caption="$" compute="1">
              <nameValues>
                <nameValue value="Section II Premium" name="caption" />
              </nameValues>
            </field>
            <field id="Spacer6" idref="Spacer" caption="Scheduled Personal Property" />
            <field id="SPPSubtotals.SPPTotalPremium" idref="SPPSubtotals.SPPTotalPremium" caption="$">
              <nameValues>
                <nameValue value="Scheduled Personal Property Total Premium" name="caption" />
              </nameValues>
            </field>
            <field id="Spacer7" idref="Spacer" caption="Watercraft" />
            <field id="WatercraftSubtotals.WatercraftTotalPremium" idref="WatercraftSubtotals.WatercraftTotalPremium" caption="$">
              <nameValues>
                <nameValue value="Watercraft Total Premium" name="caption" />
              </nameValues>
            </field>
            <constant name="OptionalPropertyCoverage" value="Optional Property Coverage" id="Constant.MainInterview.Coverage.OptionalPropertyCoverage" showRef="DwellingPrivate.FormIsCondoOrTenant" />
            <constant name="OptionalLiabilityCoverage" value="Optional Liability Coverage" id="Constant.MainInterview.Coverage.OptionalLiabilityCoverage" showRef="DwellingPrivate.FormIsCondoOrTenant" />
            <constant name="ScheduledPersonalProperty" value="Scheduled Personal Property" id="Constant.MainInterview.Coverage.ScheduledPersonalProperty" showRef="DwellingPrivate.FormIsCondoOrTenant" />
            <constant name="Watercraft" value="Watercraft" id="Constant.MainInterview.Coverage.Watercraft" showRef="DwellingPrivate.FormIsCondoOrTenant" />
          </eliminationGroup>
          <constant name="UI_SectionCaption3" id="Constant.MainInterview.Coverage.UI_SectionCaption3" value="Coverage Calculator" />
          <eliminationGroup id="eliminate2" name="eliminate2" validRef="DwellingPrivate.FormIsCondoOrTenant">
            <field id="DwellingPrivate.FormIsCondoOrTenant" idref="DwellingPrivate.FormIsCondoOrTenant" fldName="DwellingPrivate.FormIsCondoOrTenant" />
            <field id="CoverageCPersonalPropertyHO46Input.Limit" idref="CoverageCPersonalPropertyHO46Input.Limit" compute="1" onBlur="1" hideRef="DwellingPrivate.FormIsDwelling" />
            <field id="CoverageDLossOfUseInput.Limit3" idref="CoverageDLossOfUseInput.Limit" compute="1" onBlur="1" />
            <field id="CoverageELiabilityInput.Limit" idref="CoverageELiabilityInput.Limit" compute="1" onBlur="1">
              <nameValues>
                <nameValue value="Personal Liability Limit (E)" name="caption" />
              </nameValues>
            </field>
            <field id="CoverageFMedicalInput.Limit" idref="CoverageFMedicalInput.Limit" compute="1" onBlur="1" />
            <field id="Spacer8" idref="Spacer" caption="Optional Property Coverage" />
            <field id="Spacer9" idref="Spacer" caption="Optional Liability Coverage" />
            <field id="Spacer10" idref="Spacer" caption="Scheduled Personal Property" />
            <field id="Spacer11" idref="Spacer" caption="Watercraft" />
            <field id="CoverageCPersonalPropertyHO46Output.Premium" idref="CoverageCPersonalPropertyHO46Output.Premium" caption="$" compute="1" hideRef="DwellingPrivate.FormIsDwelling" />
            <field id="CoverageDLossOfUseOutput.Premium2" idref="CoverageDLossOfUseOutput.Premium" caption="$" compute="1" />
            <field id="CoverageELiabilityOutput.Premium2" idref="CoverageELiabilityOutput.Premium" caption="$" compute="1" />
            <field id="CoverageFMedicalOutput.Premium2" idref="CoverageFMedicalOutput.Premium" caption="$" compute="1" />
            <field id="SectionICoveragesOutput.SectionIPremium2" idref="SectionICoveragesOutput.SectionIPremium" caption="$" compute="1">
              <nameValues>
                <nameValue value="Section I Premium" name="caption" />
              </nameValues>
            </field>
            <field id="SectionIICoveragesOutput.SectionIIPremium2" idref="SectionIICoveragesOutput.SectionIIPremium" caption="$" compute="1">
              <nameValues>
                <nameValue value="Section II Premium" name="caption" />
              </nameValues>
            </field>
            <field id="SPPSubtotals.SPPTotalPremium2" idref="SPPSubtotals.SPPTotalPremium" caption="$">
              <nameValues>
                <nameValue value="Scheduled Personal Property Total Premium" name="caption" />
              </nameValues>
            </field>
            <field id="WatercraftSubtotals.WatercraftTotalPremium2" idref="WatercraftSubtotals.WatercraftTotalPremium" caption="$">
              <nameValues>
                <nameValue value="Watercraft Total Premium" name="caption" />
              </nameValues>
            </field>
          </eliminationGroup>
          <field id="AutoHomeDiscountInput.Selected" idref="AutoHomeDiscountInput.Selected" onBlur="1" />
          <eliminationGroup id="eliminate3" name="eliminate3" validRef="AutoHomeDiscountOutput.Indicator">
            <field id="AutoHomeDiscountOutput.Indicator" idref="AutoHomeDiscountOutput.Indicator" fldName="AutoHomeDiscountOutput.Indicator" />
            <field id="AutoHomeDiscountOutput.Premium" idref="AutoHomeDiscountOutput.Premium" caption="Home And Auto Discount" />
          </eliminationGroup>
          <field id="PolicyAdmin.UseDCTFormsAndMessages" idref="PolicyAdmin.UseDCTFormsAndMessages" onBlur="1" />
          <action name="ViewForms_1" command="custom" caption="View Forms" showRef="PolicyAdmin.UseDCTFormsAndMessages">
            <nameValues>
              <nameValue value="goToSystemPage" name="postAction" />
              <nameValue idref="FormsPreviewPage.ManuscriptId" name="ManuScriptId" type="param" />
              <nameValue idref="FormsPreviewPage.ModelCollection" name="ModelCollectionId" type="param" />
              <nameValue idref="FormsPreviewPage.ViewModel" name="ViewModelId" type="param" />
              <nameValue value="PricingPage.ViewFormsPreEvent" name="preEventField" />
            </nameValues>
          </action>
          <action name="PremiumDetail_1" command="goto" caption="Premium Detail" pageRef="RatingSummary" modelCollection="RatingSummary" />
          <action name="RatingDetail_1" command="custom" caption="Rating Detail" showRef="CoveragePage.ShowRatingDetailButton" pageRef="RatingWorksheet" modelCollection="RatingWorksheet" />
          <action name="RatingWorksheet_1" command="custom" caption="Rating Worksheet" showRef="PricingPage.ShowWorksheetButton">
            <nameValues>
              <nameValue name="PDFPage" value="printjob:Worksheet" />
              <nameValue name="suppressRefresh" idref="True" />
            </nameValues>
          </action>
          <action name="QuoteLetter_1" command="custom" caption="Quote Letter" showRef="PolicyPrivate.IsQuote">
            <nameValues>
              <nameValue name="PDFPage" value="printjob:Quote" />
              <nameValue name="suppressRefresh" idref="True" />
            </nameValues>
          </action>
          <action name="Application_1" command="custom" caption="Application" showRef="PolicyPrivate.IsApplication">
            <nameValues>
              <nameValue name="PDFPage" value="printjob:Application" />
              <nameValue name="suppressRefresh" idref="True" />
            </nameValues>
          </action>
          <action name="SidebySideComparisio_1" command="goto" caption="Side-by-Side Comparision" pageRef="Shopping" modelCollection="Shopping">
            <nameValues>
              <nameValue name="preEventField" value="GenerateShopping.Value" />
            </nameValues>
          </action>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_MainInterview_Coverage_View" caption="Marketplace_PersonalHome_1_0_0_0_MainInterview_Coverage_View" default="0" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="Pricing" prevPage="Coverage" caption="Pricing" calculate="1" idref="ExecutePremiums.Value" worksheet="PricingPage.IncludeWorksheetData" readOnlyRef="PricingPage.ReadOnly" override="1" showRef="PricingPage.Show">
        <nameValues override="1">
          <nameValue name="calculate" idref="True" override="1" />
        </nameValues>
        <group id="Policy" vmHasRows="0" objectRef="Policy" iterMax="*" iterStep="1" override="1">
          <constant name="UI_SectionCaption" id="Constant.MainInterview.Pricing.UI_SectionCaption" value="Pricing" override="1" />
          <action name="RatingWorksheet_1" command="custom" caption="Rating Worksheet" showRef="PricingPage.ShowWorksheetButton" override="1">
            <nameValues>
              <nameValue name="PDFPage" value="printjob:Worksheet" />
              <nameValue name="suppressRefresh" idref="True" />
            </nameValues>
          </action>
          <action name="QuoteLetter_1" command="custom" caption="Quote Letter" showRef="PolicyPrivate.IsQuote" override="1">
            <nameValues>
              <nameValue name="PDFPage" value="printjob:Quote" />
              <nameValue name="suppressRefresh" idref="True" />
            </nameValues>
          </action>
          <action name="Application_1" command="custom" caption="Application" showRef="PolicyPrivate.IsApplication" override="1">
            <nameValues>
              <nameValue name="PDFPage" value="printjob:Application" />
              <nameValue name="suppressRefresh" idref="True" />
            </nameValues>
          </action>
          <field id="PolicyAdmin.UseDCTFormsAndMessages" idref="PolicyAdmin.UseDCTFormsAndMessages" onBlur="1" override="1" />
          <action name="ViewForms_1" command="custom" caption="View Forms" showRef="PolicyAdmin.UseDCTFormsAndMessages" override="1">
            <nameValues>
              <nameValue name="printJob" idref="PrintingAndForms.PrintJobNames" />
              <nameValue name="printJobManuScript" idref="PolicyAdmin.PolicyManuScriptID" />
              <nameValue name="FormName" type="param" query="true" />
              <nameValue name="PolicyId" type="param" query="true" />
              <nameValue name="Product" type="param" query="true" />
              <nameValue name="HistoryId" type="param" query="true" />
            </nameValues>
          </action>
          <field id="PolicyPremiums.Premium" idref="PolicyPremiums.Premium" caption="Premium" override="1" />
          <field id="PolicyPremiums.PremiumChange" idref="PolicyPremiums.PremiumChange" caption="Premium Change" override="1" />
          <field id="PolicyPremiums.PremiumPrior" idref="PolicyPremiums.PremiumPrior" compute="0" override="1" />
          <field id="PolicyPremiums.PremiumWritten" idref="PolicyPremiums.PremiumWritten" caption="Premium Written" override="1" />
        </group>
        <views override="1">
          <view id="Marketplace_PersonalHome_1_0_0_0_MainInterview_Pricing_View" caption="Marketplace_PersonalHome_1_0_0_0_MainInterview_Pricing_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="AdditionalResidence">
      <viewModel navigable="1" name="AdditionalResidence" caption="Additional Residence" readOnlyRef="AllPage.ReadOnly">
        <group id="Risk" vmHasRows="0" objectRef="Risk" iterMax="*" iterStep="1">
          <group id="AdditionalResidence" vmHasRows="1" objectRef="AdditionalResidence" iterMax="*" iterStep="1">
            <field id="AdditionalResidenceInput.OccupantType" idref="AdditionalResidenceInput.OccupantType">
            </field>
            <field id="AdditionalResidenceInput.NumberOfFamilies" idref="AdditionalResidenceInput.NumberOfFamilies">
            </field>
            <field id="IncidentalOccupancyInput.Indicator" idref="IncidentalOccupancyInput.Indicator">
            </field>
            <action name="Delete_1" command="delete" caption="Delete" showRef="LinePrivate.ShowDelete">
              <nameValues>
                <nameValue name="isRowAction" value="1" />
              </nameValues>
            </action>
            <action name="Delete_2" command="markForDelete" caption="Delete" showRef="LinePrivate.ShowDeleteMark">
              <nameValues>
                <nameValue name="isRowAction" value="1" />
              </nameValues>
            </action>
            <action name="AddAdditionalResiden_1" command="add" caption="Add Additional Residence" showRef="AllPage.NotReadOnly" />
            <action name="OK_1" command="goto" caption="OK" pageRef="AdditionalCoverage" modelCollection="MainInterview" />
          </group>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_AdditionalResidence_AdditionalResidence_View" caption="Marketplace_PersonalHome_1_0_0_0_AdditionalResidence_AdditionalResidence_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="BusinessPursuits">
      <viewModel navigable="1" name="BusinessPursuits" caption="Business Pursuits" readOnlyRef="AllPage.ReadOnly">
        <group id="Risk" vmHasRows="0" objectRef="Risk" iterMax="*" iterStep="1">
          <field id="BusinessPursuitsOutputNonShredded.PageColumnHeading" idref="BusinessPursuitsOutputNonShredded.PageColumnHeading" compute="1">
          </field>
          <field id="BusinessPursuitsInput.NumberOfClerical" idref="BusinessPursuitsInput.NumberOfClerical">
          </field>
          <field id="BusinessPursuitsInput.NumberOfSalesNoService" idref="BusinessPursuitsInput.NumberOfSalesNoService">
          </field>
          <field id="BusinessPursuitsInput.NumberOfSalesWithService" idref="BusinessPursuitsInput.NumberOfSalesWithService">
          </field>
          <field id="BusinessPursuitsInput.NumberOfTeachersAthletic" idref="BusinessPursuitsInput.NumberOfTeachersAthletic">
          </field>
          <field id="BusinessPursuitsInput.NumberOfTeachersAthleticCorporalPunishment" idref="BusinessPursuitsInput.NumberOfTeachersAthleticCorporalPunishment">
          </field>
          <field id="BusinessPursuitsInput.NumberOfTeachersNOC" idref="BusinessPursuitsInput.NumberOfTeachersNOC">
          </field>
          <field id="BusinessPursuitsInput.NumberOfTeachersNOCCorporalPunishment" idref="BusinessPursuitsInput.NumberOfTeachersNOCCorporalPunishment">
          </field>
          <action name="OK_1" command="goto" caption="OK" pageRef="AdditionalCoverage" modelCollection="MainInterview" />
          <action name="Cancel_1" command="goto" caption="Cancel" pageRef="AdditionalCoverage" modelCollection="MainInterview">
            <nameValues>
              <nameValue name="cancelChanges" value="1" />
            </nameValues>
          </action>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_BusinessPursuits_BusinessPursuits_View" caption="Marketplace_PersonalHome_1_0_0_0_BusinessPursuits_BusinessPursuits_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="RatingSummary">
      <viewModel navigable="1" name="RatingSummary" caption="Rating Summary" readOnlyRef="AllPage.ReadOnly">
        <group id="Line" vmHasRows="0" objectRef="Line" iterMax="*" iterStep="1">
          <group id="Risk" vmHasRows="0" objectRef="Risk" iterMax="*" iterStep="1">
            <constant name="UI_SectionCaption" id="Constant.RatingSummary.RatingSummary.UI_SectionCaption" value="Basic Premiums" />
            <eliminationGroup id="eliminate" name="eliminate" validRef="DwellingPrivate.FormIsDwelling">
              <field id="DwellingPrivate.FormIsDwelling" idref="DwellingPrivate.FormIsDwelling" fldName="DwellingPrivate.FormIsDwelling">
              </field>
              <field id="DwellingOutput.AdjustedBasePremium" idref="DwellingOutput.AdjustedBasePremium" caption="Dwelling (A) Premium">
              </field>
              <field id="CoverageBOtherStructuresOutput.Premium" idref="CoverageBOtherStructuresOutput.Premium">
              </field>
              <field id="CoverageCPersonalPropertyHO3Output.Amount" idref="CoverageCPersonalPropertyHO3Output.Amount">
              </field>
              <field id="CoverageDLossOfUseOutput.Premium" idref="CoverageDLossOfUseOutput.Premium">
              </field>
              <field id="CoverageELiabilityOutput.Premium" idref="CoverageELiabilityOutput.Premium">
              </field>
              <field id="CoverageFMedicalOutput.Premium" idref="CoverageFMedicalOutput.Premium">
              </field>
              <field id="AutoHomeDiscountOutput.Premium" idref="AutoHomeDiscountOutput.Premium">
              </field>
            </eliminationGroup>
            <constant name="UI_SectionCaption2" id="Constant.RatingSummary.RatingSummary.UI_SectionCaption2" value="Basic Premiums" />
            <eliminationGroup id="eliminate2" name="eliminate2" validRef="DwellingPrivate.FormIsCondoOrTenant">
              <field id="DwellingPrivate.FormIsCondoOrTenant" idref="DwellingPrivate.FormIsCondoOrTenant" fldName="DwellingPrivate.FormIsCondoOrTenant">
              </field>
              <field id="DwellingOutput.AdjustedBasePremium2" idref="DwellingOutput.AdjustedBasePremium" caption="Personal Property (C) Premium" />
              <field id="CoverageDLossOfUseOutput.Premium2" idref="CoverageDLossOfUseOutput.Premium" />
              <field id="CoverageELiabilityOutput.Premium2" idref="CoverageELiabilityOutput.Premium" />
              <field id="CoverageFMedicalOutput.Premium2" idref="CoverageFMedicalOutput.Premium" />
              <field id="AutoHomeDiscountOutput.Premium2" idref="AutoHomeDiscountOutput.Premium" />
            </eliminationGroup>
            <constant name="UI_SectionCaption3" id="Constant.RatingSummary.RatingSummary.UI_SectionCaption3" value="Policy Coverages" />
            <field id="AdditionsAlterationsOutput.Premium" idref="AdditionsAlterationsOutput.Premium">
            </field>
            <field id="BusinessPropertyOutput.Premium" idref="BusinessPropertyOutput.Premium">
            </field>
            <field id="CreditCardOutput.Premium" idref="CreditCardOutput.Premium">
            </field>
            <field id="EarthquakeOutput.Premium" idref="EarthquakeOutput.Premium">
            </field>
            <field id="IdentityFraudExpenseCoverageOutput.Premium" idref="IdentityFraudExpenseCoverageOutput.Premium">
            </field>
            <field id="InflationGuardOutput.Amount" idref="InflationGuardOutput.Amount" caption="Inflation Guard (Included In Base)">
            </field>
            <field id="LossAssessmentOutput.Premium" idref="LossAssessmentOutput.Premium">
            </field>
            <field id="OtherStructuresRentedToOthersOutput.Premium" idref="OtherStructuresRentedToOthersOutput.Premium">
            </field>
            <field id="PermittedIncidentalOccupancyOtherStructuresOutput.Premium" idref="PermittedIncidentalOccupancyOtherStructuresOutput.Premium">
            </field>
            <field id="PersonalPropertyOtherResidenceOutput.Premium" idref="PersonalPropertyOtherResidenceOutput.Premium">
            </field>
            <field id="RefrigeratedPersonalPropertyOutput.Premium" idref="RefrigeratedPersonalPropertyOutput.Premium">
            </field>
            <field id="ReplacementCostContentsOutput.Amount" idref="ReplacementCostContentsOutput.Amount" caption="Replacement Cost Contents (Included in Base)">
            </field>
            <field id="ReplacementCostDwellingOutput.Premium" idref="ReplacementCostDwellingOutput.Premium">
            </field>
            <field id="SpecialComputerCoverageOutput.Premium" idref="SpecialComputerCoverageOutput.Premium">
            </field>
            <field id="SpecialPersonalPropertyCoverageOutput.Amount" idref="SpecialPersonalPropertyCoverageOutput.Amount" caption="Special Pers Prop / Unit Owners Cov C Special (Included in Base)">
            </field>
            <field id="UnitsRegularlyRentedToOthersOutput.Premium" idref="UnitsRegularlyRentedToOthersOutput.Premium">
            </field>
            <field id="UnscheduledElectronicApparatusOutput.Premium" idref="UnscheduledElectronicApparatusOutput.Premium">
            </field>
            <field id="UnscheduledJewelryOutput.Premium" idref="UnscheduledJewelryOutput.Premium">
            </field>
            <field id="UnscheduledMoneyOutput.Premium" idref="UnscheduledMoneyOutput.Premium">
            </field>
            <field id="UnscheduledSecuritiesOutput.Premium" idref="UnscheduledSecuritiesOutput.Premium">
            </field>
            <field id="UnscheduledSilverwareOutput.Premium" idref="UnscheduledSilverwareOutput.Premium">
            </field>
            <field id="WaterBackupAndSumpOverflowOutput.Premium" idref="WaterBackupAndSumpOverflowOutput.Premium">
            </field>
            <field id="WaterBackupOfSewersOrDrainsOutput.Premium" idref="WaterBackupOfSewersOrDrainsOutput.Premium">
            </field>
            <field id="WatercraftBlanketHullCoverageOutput.Premium" idref="WatercraftBlanketHullCoverageOutput.Premium">
            </field>
            <field id="CarportsPoolCagesOutput.Premium" idref="CarportsPoolCagesOutput.Premium">
            </field>
            <field id="OrdinanceOrLawOutput.Premium" idref="OrdinanceOrLawOutput.Premium">
            </field>
            <field id="LimitedFungiBacteriaOutput.Premium" idref="LimitedFungiBacteriaOutput.Premium">
            </field>
            <constant name="UI_SectionCaption4" id="Constant.RatingSummary.RatingSummary.UI_SectionCaption4" value="Liability Coverages" />
            <field id="AdditionalResidenceSummaryOutput.IncidentalOccupancyAccumulatedTotal" idref="AdditionalResidenceSummaryOutput.IncidentalOccupancyAccumulatedTotal">
            </field>
            <field id="AdditionalResidenceSummaryOutput.OwnerOccupiedAccumulatedTotal" idref="AdditionalResidenceSummaryOutput.OwnerOccupiedAccumulatedTotal">
            </field>
            <field id="AdditionalResidenceSummaryOutput.RentedToOthersAccumulatedTotal" idref="AdditionalResidenceSummaryOutput.RentedToOthersAccumulatedTotal">
            </field>
            <field id="BusinessPursuitsOutput.Premium" idref="BusinessPursuitsOutput.Premium">
            </field>
            <field id="IncidentalFarmingPersonalLiabilityOutput.Premium" idref="IncidentalFarmingPersonalLiabilityOutput.Premium">
            </field>
            <field id="PersonalInjuryOutput.Premium" idref="PersonalInjuryOutput.Premium">
            </field>
            <field id="ResidenceEmployeesOutput.Premium" idref="ResidenceEmployeesOutput.Premium">
            </field>
          </group>
          <constant name="UI_SectionCaption5" id="Constant.RatingSummary.RatingSummary.UI_SectionCaption5" value="Scheduled Personal Property" />
          <eliminationGroup id="eliminate3" name="eliminate3" validRef="LinePrivate.ShowSPPSummary">
            <field id="LinePrivate.ShowSPPSummary" idref="LinePrivate.ShowSPPSummary" fldName="LinePrivate.ShowSPPSummary">
            </field>
            <group id="SPP" vmHasRows="1" objectRef="SPP" iterMax="*" iterStep="1">
              <field id="SPPOutput.SummaryDescription" idref="SPPOutput.SummaryDescription" compute="1">
              </field>
              <field id="SPPCoverageOutput.Premium" idref="SPPCoverageOutput.Premium">
              </field>
            </group>
          </eliminationGroup>
          <constant name="UI_SectionCaption6" id="Constant.RatingSummary.RatingSummary.UI_SectionCaption6" value="Watercraft" />
          <eliminationGroup id="eliminate4" name="eliminate4" validRef="LinePrivate.ShowWatercraftSummary">
            <field id="LinePrivate.ShowWatercraftSummary" idref="LinePrivate.ShowWatercraftSummary" fldName="LinePrivate.ShowWatercraftSummary">
            </field>
            <group id="Watercraft" vmHasRows="1" objectRef="Watercraft" iterMax="*" iterStep="1">
              <field id="WatercraftOutput.SummaryDescription" idref="WatercraftOutput.SummaryDescription" compute="1">
              </field>
              <field id="WatercraftCoverageOutput.Premium" idref="WatercraftCoverageOutput.Premium">
              </field>
            </group>
          </eliminationGroup>
          <action name="OK_1" command="goto" caption="OK" pageRef="Coverage" modelCollection="MainInterview" />
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_RatingSummary_RatingSummary_View" caption="Marketplace_PersonalHome_1_0_0_0_RatingSummary_RatingSummary_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="ChangeSummary" abstract="1">
      <viewModel navigable="1" name="ChangeSummary" caption="Change Summary" override="1" prevPage="">
        <group id="data" vmHasRows="0" objectRef="data" iterMax="*" iterStep="1">
          <field id="AccountInput.City" idref="AccountInput.City">
          </field>
          <field id="AccountInput.State" idref="AccountInput.State">
          </field>
          <field id="AccountInput.County" idref="AccountInput.County">
          </field>
          <field id="LineInput.Tier" idref="LineInput.Tier">
          </field>
          <field id="LocationInput.City" idref="LocationInput.City">
          </field>
          <field id="LocationInput.State" idref="LocationInput.State">
          </field>
          <field id="LocationInput.County" idref="LocationInput.County">
          </field>
          <field id="LocationInput.ZipCode" idref="LocationInput.ZipCode">
          </field>
          <field id="LinePremiums.PremiumWritten" idref="LinePremiums.PremiumWritten">
          </field>
          <field id="RiskTotalPremiums.PremiumWritten" idref="RiskTotalPremiums.PremiumWritten">
          </field>
          <field id="SPPSubtotals.SPPTotalPremiumWritten" idref="SPPSubtotals.SPPTotalPremiumWritten">
          </field>
          <field id="WatercraftSubtotals.WatercraftTotalPremiumWritten" idref="WatercraftSubtotals.WatercraftTotalPremiumWritten">
          </field>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_ChangeSummary_ChangeSummary_View" caption="Marketplace_PersonalHome_1_0_0_0_ChangeSummary_ChangeSummary_View" default="0" />
        </views>
      </viewModel>
      <viewModel name="_Master" caption="Master" master="1" navigable="0">
        <group id="data" objectRef="data" iterMax="*" iterStep="1">
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_ChangeSummary__Master_View" caption="Marketplace_PersonalHome_1_0_0_0_ChangeSummary__Master_View" default="1" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="RiskChanges" caption="Risk Changes">
        <group id="Risk" vmHasRows="0" objectRef="Risk" iterMax="*" iterStep="1">
          <field id="DwellingInput.BuildingType" idref="DwellingInput.BuildingType">
          </field>
          <field id="DwellingInput.BurglarAlarm" idref="DwellingInput.BurglarAlarm">
          </field>
          <field id="DwellingInput.Construction" idref="DwellingInput.Construction">
          </field>
          <field id="DwellingInput.Deductible" idref="DwellingInput.Deductible">
          </field>
          <field id="DwellingInput.FireAlarm" idref="DwellingInput.FireAlarm">
          </field>
          <field id="DwellingInput.Form" idref="DwellingInput.Form">
          </field>
          <field id="DwellingInput.NumberOfFamilies" idref="DwellingInput.NumberOfFamilies">
          </field>
          <field id="DwellingInput.NumberOfUnits" idref="DwellingInput.NumberOfUnits">
          </field>
          <field id="DwellingInput.OccupancyType" idref="DwellingInput.OccupancyType">
          </field>
          <field id="DwellingInput.RatedProtectionClass" idref="DwellingInput.RatedProtectionClass">
          </field>
          <field id="DwellingInput.RoofingMaterial" idref="DwellingInput.RoofingMaterial">
          </field>
          <field id="DwellingInput.Sprinkler" idref="DwellingInput.Sprinkler">
          </field>
          <field id="DwellingInput.SupplementalHeatType" idref="DwellingInput.SupplementalHeatType">
          </field>
          <field id="DwellingInput.UnderConstruction" idref="DwellingInput.UnderConstruction">
          </field>
          <field id="DwellingInput.UseType" idref="DwellingInput.UseType">
          </field>
          <field id="DwellingInput.YearBuilt" idref="DwellingInput.YearBuilt">
          </field>
          <field id="AdditionalResidenceInput.NumberOfFamilies" idref="AdditionalResidenceInput.NumberOfFamilies">
          </field>
          <field id="AdditionalResidenceInput.OccupantType" idref="AdditionalResidenceInput.OccupantType">
          </field>
          <field id="AutoHomeDiscountInput.Selected" idref="AutoHomeDiscountInput.Selected">
          </field>
          <field id="CoverageADwellingInput.Limit" idref="CoverageADwellingInput.Limit">
          </field>
          <field id="CoverageADwellingOutput.PremiumWritten" idref="CoverageADwellingOutput.PremiumWritten">
          </field>
          <field id="CoverageBOtherStructuresInput.Limit" idref="CoverageBOtherStructuresInput.Limit">
          </field>
          <field id="CoverageBOtherStructuresOutput.PremiumWritten" idref="CoverageBOtherStructuresOutput.PremiumWritten">
          </field>
          <field id="CoverageCPersonalPropertyHO3Input.Limit" idref="CoverageCPersonalPropertyHO3Input.Limit">
          </field>
          <field id="CoverageCPersonalPropertyHO3Output.PremiumWritten" idref="CoverageCPersonalPropertyHO3Output.PremiumWritten">
          </field>
          <field id="CoverageCPersonalPropertyHO46Input.Limit" idref="CoverageCPersonalPropertyHO46Input.Limit">
          </field>
          <field id="CoverageCPersonalPropertyHO46Output.PremiumWritten" idref="CoverageCPersonalPropertyHO46Output.PremiumWritten">
          </field>
          <field id="CoverageDLossOfUseInput.Limit" idref="CoverageDLossOfUseInput.Limit">
          </field>
          <field id="CoverageDLossOfUseOutput.PremiumWritten" idref="CoverageDLossOfUseOutput.PremiumWritten">
          </field>
          <field id="CoverageELiabilityInput.Limit" idref="CoverageELiabilityInput.Limit">
          </field>
          <field id="CoverageELiabilityOutput.PremiumWritten" idref="CoverageELiabilityOutput.PremiumWritten">
          </field>
          <field id="CoverageFMedicalInput.Limit" idref="CoverageFMedicalInput.Limit">
          </field>
          <field id="CoverageFMedicalOutput.PremiumWritten" idref="CoverageFMedicalOutput.PremiumWritten">
          </field>
          <field id="SectionICoveragesOutput.SectionIPremiumWritten" idref="SectionICoveragesOutput.SectionIPremiumWritten">
          </field>
          <field id="SectionIICoveragesOutput.SectionIIPremiumWritten" idref="SectionIICoveragesOutput.SectionIIPremiumWritten">
          </field>
          <field id="FireResistiveDiscountInput.Indicator" idref="FireResistiveDiscountInput.Indicator">
          </field>
          <field id="LossSurchargeInput.Indicator" idref="LossSurchargeInput.Indicator">
          </field>
          <field id="AdditionsAlterationsInput.Type" idref="AdditionsAlterationsInput.Type">
          </field>
          <field id="AdditionsAlterationsInput.Limit" idref="AdditionsAlterationsInput.Limit">
          </field>
          <field id="BusinessPropertyInput.Limit" idref="BusinessPropertyInput.Limit">
          </field>
          <field id="CreditCardInput.Limit" idref="CreditCardInput.Limit">
          </field>
          <field id="EarthquakeInput.Deductible" idref="EarthquakeInput.Deductible">
          </field>
          <field id="EarthquakeInput.LossAssessmentLimit" idref="EarthquakeInput.LossAssessmentLimit">
          </field>
          <field id="IdentityFraudExpenseCoverageInput.Limit" idref="IdentityFraudExpenseCoverageInput.Limit">
          </field>
          <field id="InflationGuardInput.Indicator" idref="InflationGuardInput.Indicator">
          </field>
          <field id="LossAssessmentInput.Limit" idref="LossAssessmentInput.Limit">
          </field>
          <field id="OtherStructuresRentedToOthersInput.Limit" idref="OtherStructuresRentedToOthersInput.Limit">
          </field>
          <field id="PermittedIncidentalOccupancyOtherStructuresInput.Limit" idref="PermittedIncidentalOccupancyOtherStructuresInput.Limit">
          </field>
          <field id="PersonalPropertyOtherResidenceInput.Limit" idref="PersonalPropertyOtherResidenceInput.Limit">
          </field>
          <field id="RefrigeratedPersonalPropertyInput.Limit" idref="RefrigeratedPersonalPropertyInput.Limit">
          </field>
          <field id="ReplacementCostContentsInput.Indicator" idref="ReplacementCostContentsInput.Indicator">
          </field>
          <field id="ReplacementCostDwellingInput.Indicator" idref="ReplacementCostDwellingInput.Indicator">
          </field>
          <field id="ReplacementCostDwellingInput.ReplacementCostValue" idref="ReplacementCostDwellingInput.ReplacementCostValue">
          </field>
          <field id="SpecialComputerCoverageInput.Indicator" idref="SpecialComputerCoverageInput.Indicator">
          </field>
          <field id="UnitsRegularlyRentedToOthersInput.Indicator" idref="UnitsRegularlyRentedToOthersInput.Indicator">
          </field>
          <field id="UnscheduledElectronicApparatusInput.Limit" idref="UnscheduledElectronicApparatusInput.Limit">
          </field>
          <field id="UnscheduledGunsInput.Limit" idref="UnscheduledGunsInput.Limit">
          </field>
          <field id="UnscheduledJewelryInput.Limit" idref="UnscheduledJewelryInput.Limit">
          </field>
          <field id="UnscheduledMoneyInput.Limit" idref="UnscheduledMoneyInput.Limit">
          </field>
          <field id="UnscheduledSecuritiesInput.Limit" idref="UnscheduledSecuritiesInput.Limit">
          </field>
          <field id="UnscheduledSilverwareInput.Limit" idref="UnscheduledSilverwareInput.Limit">
          </field>
          <field id="WaterBackupAndSumpOverflowInput.Limit" idref="WaterBackupAndSumpOverflowInput.Limit">
          </field>
          <field id="WaterBackupOfSewersOrDrainsInput.Limit" idref="WaterBackupOfSewersOrDrainsInput.Limit">
          </field>
          <field id="WatercraftBlanketHullCoverageInput.Limit" idref="WatercraftBlanketHullCoverageInput.Limit">
          </field>
          <field id="BusinessPursuitsInput.NumberOfClerical" idref="BusinessPursuitsInput.NumberOfClerical">
          </field>
          <field id="BusinessPursuitsInput.NumberOfSalesNoService" idref="BusinessPursuitsInput.NumberOfSalesNoService">
          </field>
          <field id="BusinessPursuitsInput.NumberOfSalesWithService" idref="BusinessPursuitsInput.NumberOfSalesWithService">
          </field>
          <field id="BusinessPursuitsInput.NumberOfTeachersAthletic" idref="BusinessPursuitsInput.NumberOfTeachersAthletic">
          </field>
          <field id="BusinessPursuitsInput.NumberOfTeachersAthleticCorporalPunishment" idref="BusinessPursuitsInput.NumberOfTeachersAthleticCorporalPunishment">
          </field>
          <field id="BusinessPursuitsInput.NumberOfTeachersNOC" idref="BusinessPursuitsInput.NumberOfTeachersNOC">
          </field>
          <field id="BusinessPursuitsInput.NumberOfTeachersNOCCorporalPunishment" idref="BusinessPursuitsInput.NumberOfTeachersNOCCorporalPunishment">
          </field>
          <field id="IncidentalFarmingPersonalLiabilityInput.Limit" idref="IncidentalFarmingPersonalLiabilityInput.Limit">
          </field>
          <field id="IncidentalFarmingPersonalLiabilityInput.Type" idref="IncidentalFarmingPersonalLiabilityInput.Type">
          </field>
          <field id="PersonalInjuryInput.Limit" idref="PersonalInjuryInput.Limit">
          </field>
          <field id="ResidenceEmployeesInput.NumberOfEmployees" idref="ResidenceEmployeesInput.NumberOfEmployees">
          </field>
          <field id="SpecialPersonalPropertyCoverageInput.Indicator" idref="SpecialPersonalPropertyCoverageInput.Indicator">
          </field>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_ChangeSummary_RiskChanges_View" caption="Marketplace_PersonalHome_1_0_0_0_ChangeSummary_RiskChanges_View" default="0" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="SPPChanges" caption="S P P Changes">
        <group id="SPP" vmHasRows="1" objectRef="SPP" iterMax="*" iterStep="1">
          <field id="SPPInput.Type" idref="SPPInput.Type">
          </field>
          <field id="SPPInput.Limit" idref="SPPInput.Limit">
          </field>
          <field id="SPPInput.Vaulted" idref="SPPInput.Vaulted">
          </field>
          <field id="SPPInput.Blanket" idref="SPPInput.Blanket">
          </field>
          <field id="SPPInput.BreakageCoverage" idref="SPPInput.BreakageCoverage">
          </field>
          <field id="SPPCoverageOutput.PremiumWritten" idref="SPPCoverageOutput.PremiumWritten">
          </field>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_ChangeSummary_SPPChanges_View" caption="Marketplace_PersonalHome_1_0_0_0_ChangeSummary_SPPChanges_View" default="0" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="WatercraftChanges" caption="Watercraft Changes">
        <group id="Watercraft" vmHasRows="1" objectRef="Watercraft" iterMax="*" iterStep="1">
          <field id="WatercraftInput.Type" idref="WatercraftInput.Type">
          </field>
          <field id="WatercraftInput.Horsepower" idref="WatercraftInput.Horsepower">
          </field>
          <field id="WatercraftInput.Length" idref="WatercraftInput.Length">
          </field>
          <field id="WatercraftInput.MilesPerHour" idref="WatercraftInput.MilesPerHour">
          </field>
          <field id="WatercraftCoverageOutput.PremiumWritten" idref="WatercraftCoverageOutput.PremiumWritten">
          </field>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_ChangeSummary_WatercraftChanges_View" caption="Marketplace_PersonalHome_1_0_0_0_ChangeSummary_WatercraftChanges_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="RatingWorksheet">
      <viewModel navigable="1" name="RatingWorksheet" caption="Rating Detail" calculate="2" idref="ExecutePremiums.Value" worksheet="PricingPage.IncludeWorksheetData">
        <group id="Line" vmHasRows="0" objectRef="Line" iterMax="*" iterStep="1">
          <field id="LinePurePremiums.Premium" idref="LinePurePremiums.Premium" caption="Total Premium">
          </field>
          <group id="Risk" vmHasRows="0" objectRef="Risk" iterMax="*" iterStep="1">
            <group id="CoverageADwelling" vmHasRows="0" objectRef="CoverageADwelling" iterMax="*" iterStep="1">
              <constant name="UI_SectionCaption" id="Constant.RatingWorksheet.RatingWorksheet.UI_SectionCaption" value="Dwelling (A) Premium" />
              <field id="CoverageADwellingOutput.Premium" idref="CoverageADwellingOutput.Premium">
              </field>
            </group>
            <group id="CoverageBOtherStructures" vmHasRows="0" objectRef="CoverageBOtherStructures" iterMax="*" iterStep="1" showRef="CoverageBOtherStructuresInput.Indicator">
              <constant name="UI_SectionCaption2" id="Constant.RatingWorksheet.RatingWorksheet.UI_SectionCaption2" value="Other Structures (B) Premium" />
              <eliminationGroup id="eliminate" name="eliminate" validRef="CoverageBOtherStructuresInput.Indicator">
                <field id="CoverageBOtherStructuresInput.Indicator" idref="CoverageBOtherStructuresInput.Indicator" fldName="CoverageBOtherStructuresInput.Indicator">
                </field>
                <field id="CoverageBOtherStructuresOutput.Premium" idref="CoverageBOtherStructuresOutput.Premium">
                </field>
              </eliminationGroup>
            </group>
            <group id="CoverageCPersonalPropertyHO46" vmHasRows="0" objectRef="CoverageCPersonalPropertyHO46" iterMax="*" iterStep="1" showRef="CoverageCPersonalPropertyHO46Input.Indicator">
              <constant name="UI_SectionCaption3" id="Constant.RatingWorksheet.RatingWorksheet.UI_SectionCaption3" value="Personal Property (C) Premium" />
              <eliminationGroup id="eliminate2" name="eliminate2" validRef="CoverageCPersonalPropertyHO46Input.Indicator">
                <field id="CoverageCPersonalPropertyHO46Input.Indicator" idref="CoverageCPersonalPropertyHO46Input.Indicator" fldName="CoverageCPersonalPropertyHO46Input.Indicator">
                </field>
                <field id="CoverageCPersonalPropertyHO46Output.Premium" idref="CoverageCPersonalPropertyHO46Output.Premium">
                </field>
              </eliminationGroup>
            </group>
            <group id="CoverageDLossOfUse" vmHasRows="0" objectRef="CoverageDLossOfUse" iterMax="*" iterStep="1" showRef="CoverageDLossOfUseInput.Indicator">
              <constant name="UI_SectionCaption4" id="Constant.RatingWorksheet.RatingWorksheet.UI_SectionCaption4" value="Loss of Use (D) Premium" />
              <eliminationGroup id="eliminate3" name="eliminate3" validRef="CoverageDLossOfUseInput.Indicator">
                <field id="CoverageDLossOfUseInput.Indicator" idref="CoverageDLossOfUseInput.Indicator" fldName="CoverageDLossOfUseInput.Indicator">
                </field>
                <field id="CoverageDLossOfUseOutput.Premium" idref="CoverageDLossOfUseOutput.Premium">
                </field>
              </eliminationGroup>
            </group>
            <group id="CoverageELiability" vmHasRows="0" objectRef="CoverageELiability" iterMax="*" iterStep="1">
              <constant name="UI_SectionCaption5" id="Constant.RatingWorksheet.RatingWorksheet.UI_SectionCaption5" value="Personal Liability (E) Premium" />
              <field id="CoverageELiabilityOutput.Premium" idref="CoverageELiabilityOutput.Premium">
              </field>
            </group>
            <group id="CoverageFMedical" vmHasRows="0" objectRef="CoverageFMedical" iterMax="*" iterStep="1">
              <constant name="UI_SectionCaption6" id="Constant.RatingWorksheet.RatingWorksheet.UI_SectionCaption6" value="Medical Payments (F) Premium" />
              <field id="CoverageFMedicalOutput.Premium" idref="CoverageFMedicalOutput.Premium">
              </field>
            </group>
            <group id="SectionICoverages" vmHasRows="0" objectRef="SectionICoverages" iterMax="*" iterStep="1">
              <constant name="UI_SectionCaption7" id="Constant.RatingWorksheet.RatingWorksheet.UI_SectionCaption7" value="Section I Premium" />
              <field id="SectionICoveragesOutput.SectionIPremium" idref="SectionICoveragesOutput.SectionIPremium">
              </field>
            </group>
            <group id="SectionIICoverages" vmHasRows="0" objectRef="SectionIICoverages" iterMax="*" iterStep="1">
              <constant name="UI_SectionCaption8" id="Constant.RatingWorksheet.RatingWorksheet.UI_SectionCaption8" value="Section II Premium" />
              <field id="SectionIICoveragesOutput.SectionIIPremium" idref="SectionIICoveragesOutput.SectionIIPremium">
              </field>
            </group>
            <group id="AutoHomeDiscount" vmHasRows="0" objectRef="AutoHomeDiscount" iterMax="*" iterStep="1" showRef="AutoHomeDiscountOutput.Indicator">
              <constant name="UI_SectionCaption9" id="Constant.RatingWorksheet.RatingWorksheet.UI_SectionCaption9" value="Auto Home Discount" />
              <eliminationGroup id="eliminate4" name="eliminate4" validRef="AutoHomeDiscountOutput.Indicator">
                <field id="AutoHomeDiscountOutput.Indicator" idref="AutoHomeDiscountOutput.Indicator" fldName="AutoHomeDiscountOutput.Indicator">
                </field>
                <field id="AutoHomeDiscountOutput.Premium" idref="AutoHomeDiscountOutput.Premium">
                </field>
              </eliminationGroup>
            </group>
          </group>
          <constant name="UI_SectionCaption10" id="Constant.RatingWorksheet.RatingWorksheet.UI_SectionCaption10" value="Watercraft Premium" />
          <eliminationGroup id="eliminate5" name="eliminate5" validRef="LinePrivate.ShowWatercraftSummary">
            <field id="LinePrivate.ShowWatercraftSummary" idref="LinePrivate.ShowWatercraftSummary" fldName="LinePrivate.ShowWatercraftSummary">
            </field>
            <field id="WatercraftSubtotals.WatercraftTotalPremium" idref="WatercraftSubtotals.WatercraftTotalPremium">
            </field>
          </eliminationGroup>
          <constant name="UI_SectionCaption11" id="Constant.RatingWorksheet.RatingWorksheet.UI_SectionCaption11" value="SPP Premium" />
          <eliminationGroup id="eliminate6" name="eliminate6" validRef="LinePrivate.ShowSPPSummary">
            <field id="LinePrivate.ShowSPPSummary" idref="LinePrivate.ShowSPPSummary" fldName="LinePrivate.ShowSPPSummary">
            </field>
            <field id="SPPSubtotals.SPPTotalPremium" idref="SPPSubtotals.SPPTotalPremium">
            </field>
          </eliminationGroup>
          <action name="Return_1" command="goto" caption="Return" pageRef="Coverage" modelCollection="MainInterview" />
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_RatingWorksheet_RatingWorksheet_View" caption="Marketplace_PersonalHome_1_0_0_0_RatingWorksheet_RatingWorksheet_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="AdditionalOtherInterestDetail" abstract="1">
      <viewModel navigable="1" name="AdditionalOtherInterestDetail" caption="Additional Other Interest Detail" readOnlyRef="AdditionalOtherInterestsPage.ReadOnly" override="1" prevPage="">
        <group id="AdditionalOtherInterest" vmHasRows="1" objectRef="AdditionalOtherInterest" iterMax="*" iterStep="1">
          <field id="AdditionalOtherInterestInput.InterestType" idref="AdditionalOtherInterestInput.InterestType" onBlur="1">
          </field>
          <eliminationGroup id="eliminate" name="eliminate" validRef="AdditionalOtherInterestPrivate.IsTypeOrganization">
            <field id="AdditionalOtherInterestPrivate.IsTypeOrganization" idref="AdditionalOtherInterestPrivate.IsTypeOrganization" fldName="AdditionalOtherInterestPrivate.IsTypeOrganization">
            </field>
            <field id="AdditionalOtherInterestInput.Type" idref="AdditionalOtherInterestInput.Type">
            </field>
            <field id="AdditionalOtherInterestInput.Name" idref="AdditionalOtherInterestInput.Name">
            </field>
            <field id="AdditionalOtherInterestInput.Address1" idref="AdditionalOtherInterestInput.Address1">
            </field>
            <field id="AdditionalOtherInterestInput.Address2" idref="AdditionalOtherInterestInput.Address2">
            </field>
            <field id="AdditionalOtherInterestInput.City" idref="AdditionalOtherInterestInput.City">
            </field>
            <field id="AdditionalOtherInterestInput.State" idref="AdditionalOtherInterestInput.State">
            </field>
            <field id="AdditionalOtherInterestInput.ZipCode" idref="AdditionalOtherInterestInput.ZipCode">
            </field>
            <field id="AdditionalOtherInterestInput.PrimaryPhone" idref="AdditionalOtherInterestInput.PrimaryPhone">
            </field>
            <field id="AdditionalOtherInterestInput.LoanNumber" idref="AdditionalOtherInterestInput.LoanNumber">
            </field>
            <field id="AdditionalOtherInterestInput.CertificateOfInsurance" idref="AdditionalOtherInterestInput.CertificateOfInsurance">
            </field>
          </eliminationGroup>
          <eliminationGroup id="eliminate2" name="eliminate2" validRef="AdditionalOtherInterestPrivate.IsTypeIndividual">
            <field id="AdditionalOtherInterestPrivate.IsTypeIndividual" idref="AdditionalOtherInterestPrivate.IsTypeIndividual" fldName="AdditionalOtherInterestPrivate.IsTypeIndividual">
            </field>
            <field id="AdditionalOtherInterestInput.FirstName" idref="AdditionalOtherInterestInput.FirstName">
            </field>
            <field id="AdditionalOtherInterestInput.MiddleName" idref="AdditionalOtherInterestInput.MiddleName">
            </field>
            <field id="AdditionalOtherInterestInput.LastName" idref="AdditionalOtherInterestInput.LastName" onBlur="1">
            </field>
            <field id="AdditionalOtherInterestInput.City2" idref="AdditionalOtherInterestInput.City" />
            <field id="AdditionalOtherInterestInput.State2" idref="AdditionalOtherInterestInput.State" />
            <field id="AdditionalOtherInterestInput.ZipCode2" idref="AdditionalOtherInterestInput.ZipCode" />
            <field id="AdditionalOtherInterestInput.PrimaryPhone2" idref="AdditionalOtherInterestInput.PrimaryPhone" />
          </eliminationGroup>
          <action name="OK_1" command="custom" caption="OK" pageRef="AdditionalOtherInterests" modelCollection="MainInterview">
            <nameValues>
              <nameValue name="isRowAction" value="1" />
            </nameValues>
            <request verb="Session.commitTransactionRq" />
          </action>
          <action name="Cancel_1" command="custom" caption="Cancel" pageRef="AdditionalOtherInterests" modelCollection="MainInterview">
            <nameValues>
              <nameValue name="ignoreValidation" value="1" />
              <nameValue name="isRowAction" value="1" />
            </nameValues>
            <request verb="Session.rollbackTransactionRq" />
          </action>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_AdditionalOtherInterestDetail_AdditionalOtherInterestDetail_View" caption="Marketplace_PersonalHome_1_0_0_0_AdditionalOtherInterestDetail_AdditionalOtherInterestDetail_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="UpdatedServices">
      <viewModel navigable="1" name="UpdatedServices" caption="Updated Services">
        <group id="Dwelling" vmHasRows="0" objectRef="Dwelling" iterMax="*" iterStep="1">
          <action name="Return_1" command="custom" caption="Return" modelCollection="MainInterview" pageRef="RiskSchedule">
            <nameValues>
              <nameValue name="manuscript" idref="PolicyAdmin.PolicyManuScriptID" />
            </nameValues>
          </action>
          <field idref="UpdatedServicesInfo.ElectricSystemUpdateType" id="UpdatedServicesInfo.ElectricSystemUpdateType" />
          <field idref="UpdatedServicesInfo.ElectricSystemUpdateYear" id="UpdatedServicesInfo.ElectricSystemUpdateYear" />
          <field idref="UpdatedServicesInfo.HeatingUpdateType" id="UpdatedServicesInfo.HeatingUpdateType" />
          <field idref="UpdatedServicesInfo.HeatingUpdateYear" id="UpdatedServicesInfo.HeatingUpdateYear" />
          <field idref="UpdatedServicesInfo.PlumbingUpdateType" id="UpdatedServicesInfo.PlumbingUpdateType" />
          <field idref="UpdatedServicesInfo.PlumbingUpdateYear" id="UpdatedServicesInfo.PlumbingUpdateYear" />
          <field idref="UpdatedServicesInfo.RoofUpdateYear" id="UpdatedServicesInfo.RoofUpdateYear" />
          <field idref="UpdatedServicesInfo.RoofUpdateType" id="UpdatedServicesInfo.RoofUpdateType" />
          <field idref="UpdatedServicesInfo.UpdatedServices" id="UpdatedServicesInfo.UpdatedServices" />
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_UpdatedServices_UpdatedServices_View" caption="Marketplace_PersonalHome_1_0_0_0_UpdatedServices_UpdatedServices_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="LossHistoryDetail">
      <viewModel navigable="1" name="LossHistoryDetail" caption="Loss History Detail">
        <group id="Loss" vmHasRows="1" objectRef="Loss" iterMax="*" iterStep="1">
          <field id="LossInput.LossType" idref="LossInput.LossType">
          </field>
          <field id="LossInput.CategoryCode" idref="LossInput.CategoryCode">
          </field>
          <field id="LossInput.DateOfLoss" idref="LossInput.DateOfLoss">
          </field>
          <field id="LossInput.AmountPaid" idref="LossInput.AmountPaid">
          </field>
          <field id="LossInput.InDispute" idref="LossInput.InDispute">
          </field>
          <field id="LossInput.Description" idref="LossInput.Description">
          </field>
          <action name="OK_1" command="custom" caption="OK" pageRef="ClaimsHistory" modelCollection="MainInterview">
            <nameValues>
              <nameValue name="isRowAction" value="1" />
            </nameValues>
          </action>
          <action name="Cancel_1" command="custom" caption="Cancel" pageRef="ClaimsHistory" modelCollection="MainInterview">
            <nameValues>
              <nameValue name="ignoreValidation" value="1" />
              <nameValue name="cancelChanges" value="1" />
              <nameValue name="isRowAction" value="1" />
            </nameValues>
          </action>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_LossHistoryDetail_LossHistoryDetail_View" caption="Marketplace_PersonalHome_1_0_0_0_LossHistoryDetail_LossHistoryDetail_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="PriorInsuranceDetail">
      <viewModel navigable="1" name="PriorInsuranceDetail" caption="Prior Coverage Detail">
        <group id="PriorInsurance" vmHasRows="1" objectRef="PriorInsurance" iterMax="*" iterStep="1">
          <field id="PriorInsurance.CarrierName" idref="PriorInsurance.CarrierName">
          </field>
          <field id="PriorInsurance.EffectiveDate" idref="PriorInsurance.EffectiveDate">
          </field>
          <field id="PriorInsurance.ExpirationDate" idref="PriorInsurance.ExpirationDate">
          </field>
          <field id="PriorInsurance.Limit" idref="PriorInsurance.Limit">
          </field>
          <field id="PriorInsurance.Deductible" idref="PriorInsurance.Deductible">
          </field>
          <field id="PriorInsurance.InterestName" idref="PriorInsurance.InterestName">
          </field>
          <field id="PriorInsurance.NewBusinessPayor" idref="PriorInsurance.NewBusinessPayor">
          </field>
          <field id="PriorInsurance.PriorPolicyNumber" idref="PriorInsurance.PriorPolicyNumber">
          </field>
          <field id="PriorInsurance.Rank" idref="PriorInsurance.Rank">
          </field>
          <field id="PriorInsurance.ReferenceLoanNumber" idref="PriorInsurance.ReferenceLoanNumber">
          </field>
          <action name="OK_1" command="custom" caption="OK" pageRef="InsuranceHistory" modelCollection="MainInterview">
            <nameValues>
              <nameValue name="isRowAction" value="1" />
            </nameValues>
          </action>
          <action name="Cancel_1" command="custom" caption="Cancel" pageRef="InsuranceHistory" modelCollection="MainInterview">
            <nameValues>
              <nameValue name="cancelChanges" value="1" />
              <nameValue name="isRowAction" value="1" />
            </nameValues>
          </action>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_PriorInsuranceDetail_PriorInsuranceDetail_View" caption="Marketplace_PersonalHome_1_0_0_0_PriorInsuranceDetail_PriorInsuranceDetail_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="AddAttachment">
      <viewModel navigable="1" name="AddAttachment" caption="Add Attachment">
        <group id="SPP" vmHasRows="1" objectRef="SPP" iterMax="*" iterStep="1">
          <field id="SPPInputNonShredded.AttachmentFilePath" idref="SPPInputNonShredded.AttachmentFilePath" compute="0" computeRef="True" onBlur="1" hideRef="SPPPrivate.IsAppraisalAttached">
          </field>
          <field id="SPPOutput.AppraisalAttachedMessage" idref="SPPOutput.AppraisalAttachedMessage" compute="1" hideRef="SPPPrivate.IsNotAppraisalAttached">
          </field>
          <action name="AddAttachment_1" command="custom" caption="Add Attachment" showRef="SPPPrivate.IsNotAppraisalAttached" postCommand="SPPPrivate.UploadButtonPostActions">
            <nameValues>
              <nameValue name="isRowAction" value="1" />
            </nameValues>
          </action>
          <action name="Return_1" command="custom" caption="Return" pageRef="ScheduledPersonalProperty" modelCollection="MainInterview">
            <nameValues>
              <nameValue name="isRowAction" value="1" />
            </nameValues>
          </action>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_AddAttachment_AddAttachment_View" caption="Marketplace_PersonalHome_1_0_0_0_AddAttachment_AddAttachment_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="Shopping">
      <viewModel navigable="1" name="Shopping" caption="Quote Options">
        <group id="Risk" vmHasRows="0" objectRef="Risk" iterMax="*" iterStep="1">
          <field id="RiskOutput.SPPMessage" idref="RiskOutput.SPPMessage" caption="Note:  All SPP items are not included in the residence calculations and will be reported on the Pricing page.">
          </field>
        </group>
        <group id="Shopping" vmHasRows="1" objectRef="Shopping" iterMax="*" iterStep="1">
          <field id="Shopping.OptionName" idref="Shopping.OptionName">
          </field>
          <field id="Shopping.Total" idref="Shopping.Total" compute="1">
          </field>
          <action name="Select_1" command="custom" caption="Select" pageRef="Coverage" modelCollection="MainInterview">
            <nameValues>
              <nameValue name="isRowAction" value="1" />
            </nameValues>
            <request verb="ManuScript.getValueRq">
              <nameValues>
                <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                <nameValue idref="Shopping.ContextPath" name="context" dataType="attribute" />
                <nameValue value="Shopping.Select" name="field" dataType="attribute" />
              </nameValues>
            </request>
          </action>
          <group id="ShoppingRisk" vmHasRows="1" objectRef="ShoppingRisk" iterMax="*" iterStep="1">
            <field id="ShoppingRisk.Description" idref="ShoppingRisk.Description">
            </field>
            <field id="ShoppingRisk.DwellingLimit" idref="ShoppingRisk.DwellingLimit">
            </field>
            <field id="ShoppingRisk.AllPerilDeductible" idref="ShoppingRisk.AllPerilDeductible" onBlur="1">
            </field>
            <field id="ShoppingRisk.LiabilityLimit" idref="ShoppingRisk.LiabilityLimit" onBlur="1">
            </field>
            <field id="ShoppingRisk.MedicalLimit" idref="ShoppingRisk.MedicalLimit" onBlur="1">
            </field>
            <field id="ShoppingRisk.Total" idref="ShoppingRisk.Total" compute="1">
            </field>
          </group>
          <action name="ReturntoPricing_1" command="goto" caption="Return to Pricing" pageRef="Coverage" modelCollection="MainInterview" />
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_Shopping_Shopping_View" caption="Marketplace_PersonalHome_1_0_0_0_Shopping_Shopping_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="PrefillReview">
      <viewModel navigable="1" name="PrefillReview" caption="Prefill Review">
        <group id="PrefillData" vmHasRows="1" objectRef="PrefillData" iterMax="*" iterStep="1">
          <eliminationGroup id="eliminate" name="eliminate" validRef="PrefillData.DwellingsWereReturned">
            <field id="PrefillData.DwellingsWereReturned" idref="PrefillData.DwellingsWereReturned" fldName="PrefillData.DwellingsWereReturned">
            </field>
            <field id="PrefillAccount.FirstName" idref="PrefillAccount.FirstName" caption=" ">
            </field>
            <field id="PrefillAccount.LastName" idref="PrefillAccount.LastName" caption=" ">
            </field>
            <constant name="UI_SectionCaption" id="Constant.PrefillReview.PrefillReview.UI_SectionCaption" value="Dwelling Information " />
            <field id="PrefillAccount.Address1" idref="PrefillAccount.Address1">
            </field>
            <field id="PrefillAccount.Address2" idref="PrefillAccount.Address2">
            </field>
            <field id="PrefillDwelling.SquareFeet" idref="PrefillDwelling.SquareFeet">
            </field>
            <field id="PrefillDwelling.Construction" idref="PrefillDwelling.Construction">
            </field>
            <field id="PrefillDwelling.YearBuilt" idref="PrefillDwelling.YearBuilt">
            </field>
            <field id="PrefillDwelling.Territory" idref="PrefillDwelling.Territory">
            </field>
            <action name="ContinuetoQuickQuote_1" command="goto" caption="Continue to Quick Quote" showRef="PrefillData.DwellingsWereReturned" pageRef="QuickQuote" modelCollection="QuickQuote">
              <nameValues>
                <nameValue name="isRowAction" value="1" />
              </nameValues>
            </action>
          </eliminationGroup>
          <eliminationGroup id="eliminate2" name="eliminate2" validRef="PrefillData.DwellingsWereNotReturned">
            <field id="PrefillData.DwellingsWereNotReturned" idref="PrefillData.DwellingsWereNotReturned" fldName="PrefillData.DwellingsWereNotReturned">
            </field>
            <field id="Spacer" idref="Spacer" caption="No Information Found">
            </field>
            <action name="ContinuetoQuickQuote_2" command="goto" caption="Continue to Quick Quote" showRef="PrefillData.DwellingsWereNotReturned" preCommand="Prefill.CopyPrefillInformation" pageRef="QuickQuote" modelCollection="QuickQuote">
              <nameValues>
                <nameValue name="isRowAction" value="1" />
              </nameValues>
            </action>
          </eliminationGroup>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_PrefillReview_PrefillReview_View" caption="Marketplace_PersonalHome_1_0_0_0_PrefillReview_PrefillReview_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="Consumer" abstract="1">
      <viewModel navigable="1" name="Household" caption="Your Information" showRef="AccountPage.Show" readOnlyRef="AccountPage.ReadOnly" override="1" prevPage="">
        <group id="Account" vmHasRows="0" objectRef="Account" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.Consumer.Household.UI_SectionCaption" value="Please tell us about yourself" />
          <constant name="UI_SectionCaption2" id="Constant.Consumer.Household.UI_SectionCaption2" value="Member" />
          <field id="Spacer" idref="Spacer" caption="To get the most accurate quote, we'll need to gather some information first.">
          </field>
          <field id="AccountInput.FirstName" idref="AccountInput.FirstName" caption="First Name:">
          </field>
          <field id="AccountInput.MiddleName" idref="AccountInput.MiddleName" caption="Middle">
          </field>
          <field id="AccountInput.LastName" idref="AccountInput.LastName" caption="Last Name:" onBlur="1">
          </field>
          <field id="AccountInput.Address1" idref="AccountInput.Address1" caption="Mailing Address:">
          </field>
          <field id="AccountInput.Address2" idref="AccountInput.Address2" caption="Apt #:">
          </field>
          <field id="AccountInput.City" idref="AccountInput.City" caption="City:">
          </field>
          <field id="AccountInput.State" idref="AccountInput.State" caption="State:">
          </field>
          <field id="AccountInput.ZipCode" idref="AccountInput.ZipCode" caption="Zip Code:">
          </field>
          <field id="AccountInput.Email" idref="AccountInput.Email" caption="Email Address:">
          </field>
          <field id="AccountInput.PrimaryPhone" idref="AccountInput.PrimaryPhone" caption="Phone Number:">
          </field>
          <constant name="UI_SectionCaption3" id="Constant.Consumer.Household.UI_SectionCaption3" value="When would you like your coverage to start?" />
          <field id="PolicyInput.EffectiveDate" idref="PolicyInput.EffectiveDate" caption="Date:">
          </field>
          <constant name="UI_SectionCaption4" id="Constant.Consumer.Household.UI_SectionCaption4" value="Fair Credit Reporting Act" />
          <field id="PolicyInput.FairCreditReportingActWording" idref="PolicyInput.FairCreditReportingActWording" caption=" " compute="1" readOnlyRef="True">
          </field>
          <field id="PolicyInput.FairCreditReportingAct" idref="PolicyInput.FairCreditReportingAct" caption=" ">
          </field>
          <field id="PolicyInput.FairCreditReportingActPostWording" idref="PolicyInput.FairCreditReportingActPostWording" caption=" " compute="1" readOnlyRef="True">
          </field>
          <eliminationGroup id="eliminate" name="eliminate" validRef="AccountPrivate.CoApplicantExists">
            <field id="AccountPrivate.CoApplicantExists" idref="AccountPrivate.CoApplicantExists" fldName="AccountPrivate.CoApplicantExists">
            </field>
            <group id="Person" vmHasRows="1" objectRef="Person" iterMax="*" iterStep="1" restriction="AccountPrivate.NonPrimaryInsuredXPath">
              <constant name="UI_SectionCaption5" id="Constant.Consumer.Household.UI_SectionCaption5" value="Co-Applicant" />
              <field id="PersonInput.FirstName" idref="PersonInput.FirstName" caption="First Name:">
              </field>
              <field id="PersonInput.MiddleName" idref="PersonInput.MiddleName" caption="Middle">
              </field>
              <field id="PersonInput.LastName" idref="PersonInput.LastName" caption="Last Name:" onBlur="1">
              </field>
              <field id="PersonInput.Address1" idref="PersonInput.Address1" caption="Mailing Address:">
              </field>
              <field id="PersonInput.Address2" idref="PersonInput.Address2" caption="Apt #:">
              </field>
              <field id="PersonInput.City" idref="PersonInput.City" caption="City:">
              </field>
              <field id="PersonInput.State" idref="PersonInput.State" caption="State:">
              </field>
              <field id="PersonInput.ZipCode" idref="PersonInput.ZipCode" caption="Zip Code:">
              </field>
              <field id="PersonInput.EmailAddress" idref="PersonInput.EmailAddress" caption="Email Address:">
              </field>
              <action name="DeleteCoapplicant_1" command="delete" caption="Delete Co-applicant">
                <nameValues>
                  <nameValue name="isRowAction" value="1" />
                </nameValues>
              </action>
            </group>
          </eliminationGroup>
          <action name="Addcoapplicant_1" command="custom" caption="Add co-applicant" showRef="AccountPage.ShowAddCoApplicantButton">
            <request verb="ManuScript.addObjectRecordRq">
              <nameValues>
                <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                <nameValue value="Person" name="objectID" dataType="attribute" />
              </nameValues>
            </request>
          </action>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_Consumer_Household_View" caption="Marketplace_PersonalHome_1_0_0_0_Consumer_Household_View" default="0" />
        </views>
      </viewModel>
      <viewModel name="_Master" caption="Master" master="1" navigable="0">
        <group id="data" objectRef="data" iterMax="*" iterStep="1">
        </group>
        <externalView name="TransactionWorkflowFooter" manuscriptIdRef="TransactionWorkflowFooter.ManuscriptID" modelCollectionIdRef="TransactionWorkflowFooter.ModelCollection" viewModelIdRef="TransactionWorkflowFooter.ViewModel" />
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_Consumer__Master_View" caption="Marketplace_PersonalHome_1_0_0_0_Consumer__Master_View" default="1" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="Dwelling" caption="Dwelling Information" prevPage="Household" showRef="RiskSchedulePage.Show" readOnlyRef="RiskSchedulePage.ReadOnly">
        <group id="Risk" vmHasRows="0" objectRef="Risk" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.Consumer.Dwelling.UI_SectionCaption" value="Tell us some about your dwelling" />
          <field id="Spacer" idref="Spacer" caption="Help us give you the most accurate quote by providing the following special details about your dwelling.">
          </field>
          <field id="DwellingInput.Form" idref="DwellingInput.Form" onBlur="1">
          </field>
          <field id="DwellingInput.UseType" idref="DwellingInput.UseType">
          </field>
          <field id="DwellingInput.BuildingType" idref="DwellingInput.BuildingType" compute="1">
          </field>
          <field id="DwellingInput.NumberOfFamilies" idref="DwellingInput.NumberOfFamilies">
          </field>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_Consumer_Dwelling_View" caption="Marketplace_PersonalHome_1_0_0_0_Consumer_Dwelling_View" default="0" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="Structure" caption="Structure" prevPage="Dwelling" showRef="RiskSchedulePage.Show" readOnlyRef="RiskSchedulePage.ReadOnly">
        <group id="Risk" vmHasRows="0" objectRef="Risk" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.Consumer.Structure.UI_SectionCaption" value="Tell us some about your structure" />
          <field id="Spacer" idref="Spacer" caption="Help us give you the most accurate quote by providing the following special details about your structure.">
          </field>
          <field id="DwellingInput.YearBuilt" idref="DwellingInput.YearBuilt" compute="1" removeZero="True">
          </field>
          <field id="DwellingInput.Construction" idref="DwellingInput.Construction">
          </field>
          <field id="DwellingInput.FoundationType" idref="DwellingInput.FoundationType">
          </field>
          <field id="DwellingInput.SquareFeet" idref="DwellingInput.SquareFeet">
          </field>
          <field id="DwellingInput.UnderConstruction" idref="DwellingInput.UnderConstruction">
          </field>
          <field id="DwellingInput.RoofGeometry" idref="DwellingInput.RoofGeometry">
          </field>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_Consumer_Structure_View" caption="Marketplace_PersonalHome_1_0_0_0_Consumer_Structure_View" default="0" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="Utilities" caption="Utilities &amp; Safety" prevPage="Structure" showRef="RiskSchedulePage.Show" readOnlyRef="RiskSchedulePage.ReadOnly">
        <group id="Risk" vmHasRows="0" objectRef="Risk" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.Consumer.Utilities.UI_SectionCaption" value="Tell us some about your utilties and protection devices" />
          <field id="Spacer" idref="Spacer" caption="Help us give you the most accurate quote by providing the following special details about your utilties and protection devices.">
          </field>
          <field id="DwellingInput.RatedProtectionClass" idref="DwellingInput.RatedProtectionClass" onBlur="1">
          </field>
          <field id="DwellingInput.PrimaryHeatType" idref="DwellingInput.PrimaryHeatType">
          </field>
          <field id="DwellingInput.BurglarAlarm" idref="DwellingInput.BurglarAlarm">
          </field>
          <field id="DwellingInput.FireAlarm" idref="DwellingInput.FireAlarm">
          </field>
          <field id="DwellingInput.Sprinkler" idref="DwellingInput.Sprinkler">
          </field>
          <field id="DwellingInput.OpeningProtection" idref="DwellingInput.OpeningProtection">
          </field>
          <field id="True" idref="True" fldName="True">
          </field>
          <constant name="UI_SectionCaption2" id="Constant.Consumer.Utilities.UI_SectionCaption2" value="Suburban Rating Information" />
          <eliminationGroup id="eliminate" name="eliminate" validRef="DwellingPrivate.QualifiesForSuburbanRating">
            <field id="DwellingPrivate.QualifiesForSuburbanRating" idref="DwellingPrivate.QualifiesForSuburbanRating" fldName="DwellingPrivate.QualifiesForSuburbanRating">
            </field>
            <field id="DwellingInput.DistanceToFireStation" idref="DwellingInput.DistanceToFireStation">
            </field>
            <field id="DwellingInput.DistanceToHydrant" idref="DwellingInput.DistanceToHydrant">
            </field>
            <field id="DwellingInput.DistanceToWaterSource" idref="DwellingInput.DistanceToWaterSource">
            </field>
            <field id="DwellingInput.DwellingAccessibleToFireEquipment" idref="DwellingInput.DwellingAccessibleToFireEquipment">
            </field>
            <field id="DwellingInput.RespondingFireDepartment" idref="DwellingInput.RespondingFireDepartment">
            </field>
            <field id="DwellingInput.DistanceToCoast" idref="DwellingInput.DistanceToCoast">
            </field>
            <field id="DwellingInput.DistanceToTidalWater" idref="DwellingInput.DistanceToTidalWater">
            </field>
            <field id="DwellingInput.DistanceToMajorWaterway" idref="DwellingInput.DistanceToMajorWaterway">
            </field>
          </eliminationGroup>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_Consumer_Utilities_View" caption="Marketplace_PersonalHome_1_0_0_0_Consumer_Utilities_View" default="0" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="Coverage" caption="Coverage" prevPage="Utilities" showRef="DwellingPage.Show" readOnlyRef="DwellingPage.ReadOnly">
        <group id="Risk" vmHasRows="0" objectRef="Risk" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.Consumer.Coverage.UI_SectionCaption" value="Enter your desired coverage limits" />
          <field id="CoverageADwellingInput.Limit" idref="CoverageADwellingInput.Limit" caption="Dwelling" compute="1" onBlur="1" hideRef="DwellingPrivate.FormIsCondoOrTenant">
          </field>
          <field id="CoverageCPersonalPropertyHO46Input.Limit" idref="CoverageCPersonalPropertyHO46Input.Limit" caption="Personal Property" compute="1" onBlur="1" hideRef="DwellingPrivate.FormIsDwelling">
          </field>
          <eliminationGroup id="eliminate" name="eliminate" validRef="DwellingPrivate.FormIsDwelling">
            <field id="DwellingPrivate.FormIsDwelling" idref="DwellingPrivate.FormIsDwelling" fldName="DwellingPrivate.FormIsDwelling">
            </field>
            <field id="CoverageBOtherStructuresInput.Limit" idref="CoverageBOtherStructuresInput.Limit" caption="Other Structures" compute="1" onBlur="1">
            </field>
            <field id="CoverageBOtherStructuresOutput.IncludedLimit" idref="CoverageBOtherStructuresOutput.IncludedLimit" caption="Other Structures Included Limit" compute="1">
            </field>
          </eliminationGroup>
          <eliminationGroup id="eliminate2" name="eliminate2" validRef="DwellingPrivate.FormIsDwelling">
            <field idref="DwellingPrivate.FormIsDwelling" fldName="DwellingPrivate.FormIsDwelling2" id="DwellingPrivate.FormIsDwelling2" />
            <field id="CoverageCPersonalPropertyHO3Input.Limit" idref="CoverageCPersonalPropertyHO3Input.Limit" caption="Personal Property" compute="1" onBlur="1">
            </field>
            <field id="CoverageCPersonalPropertyHO3Output.IncludedLimit" idref="CoverageCPersonalPropertyHO3Output.IncludedLimit" caption="Personal Property Included Limit" compute="1">
            </field>
          </eliminationGroup>
          <field id="CoverageDLossOfUseInput.Limit" idref="CoverageDLossOfUseInput.Limit" caption="Loss Of Use" compute="1" onBlur="1">
          </field>
          <field id="CoverageDLossOfUseOutput.IncludedLimit" idref="CoverageDLossOfUseOutput.IncludedLimit" caption="Loss Of Use Included Limit" compute="1">
          </field>
          <field id="CoverageELiabilityInput.Limit" idref="CoverageELiabilityInput.Limit" caption="Personal Liability" onBlur="1">
          </field>
          <field id="CoverageFMedicalInput.Limit" idref="CoverageFMedicalInput.Limit" caption="Medical Payments" onBlur="1">
          </field>
          <field id="DwellingInput.Deductible" idref="DwellingInput.Deductible">
          </field>
          <field id="DwellingInput.WindDeductible" idref="DwellingInput.WindDeductible">
          </field>
          <field id="True" idref="True" fldName="True">
          </field>
          <constant name="UI_SectionCaption2" id="Constant.Consumer.Coverage.UI_SectionCaption2" value="Common Additional Coverages" />
          <field id="CreditCardInput.Limit" idref="CreditCardInput.Limit">
          </field>
          <field id="RefrigeratedPersonalPropertyInput.Indicator" idref="RefrigeratedPersonalPropertyInput.Indicator">
          </field>
          <field id="WaterBackupOfSewersOrDrainsInput.Indicator" idref="WaterBackupOfSewersOrDrainsInput.Indicator" hideRef="DwellingPrivate.FormIsCondoOrTenant">
          </field>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_Consumer_Coverage_View" caption="Marketplace_PersonalHome_1_0_0_0_Consumer_Coverage_View" default="0" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="Watercraft" caption="Watercraft" prevPage="AdditionalCoverage" readOnlyRef="AllPage.ReadOnly">
        <group id="Line" vmHasRows="0" objectRef="Line" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.Consumer.Watercraft.UI_SectionCaption" value="Tell us about any watercraft you own" />
          <action name="Addwatercraft_1" command="custom" caption="Add watercraft">
            <request verb="ManuScript.addObjectRecordRq">
              <nameValues>
                <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                <nameValue value="Watercraft" name="objectID" dataType="attribute" />
              </nameValues>
            </request>
          </action>
          <eliminationGroup id="eliminate" name="eliminate" validRef="LinePrivate.MultipleWatercraft">
            <field id="LinePrivate.MultipleWatercraft" idref="LinePrivate.MultipleWatercraft" fldName="LinePrivate.MultipleWatercraft">
            </field>
            <group id="Watercraft" vmHasRows="1" objectRef="Watercraft" iterMax="*" iterStep="1">
              <field id="WatercraftPrivate.TypeCaption" idref="WatercraftPrivate.TypeCaption" fldName="WatercraftPrivate.TypeCaption">
              </field>
              <field idref="WatercraftPrivate.TypeCaption" fldName="WatercraftPrivate.TypeCaption2" id="WatercraftPrivate.TypeCaption2" />
              <field id="WatercraftInput.Length" idref="WatercraftInput.Length">
              </field>
              <field id="WatercraftInput.Horsepower" idref="WatercraftInput.Horsepower">
              </field>
            </group>
          </eliminationGroup>
          <eliminationGroup id="eliminate2" name="eliminate2" validRef="LinePrivate.SingleWatercraft">
            <field id="LinePrivate.SingleWatercraft" idref="LinePrivate.SingleWatercraft" fldName="LinePrivate.SingleWatercraft">
            </field>
            <group id="Watercraft2" vmHasRows="1" objectRef="Watercraft" iterMax="*" iterStep="1">
              <field id="WatercraftInput.Type" idref="WatercraftInput.Type" onBlur="1">
              </field>
              <field id="WatercraftInput.Length2" idref="WatercraftInput.Length" removeZero="True" />
              <field id="WatercraftInput.Horsepower2" idref="WatercraftInput.Horsepower" removeZero="True" />
              <field id="WatercraftInput.MilesPerHour" idref="WatercraftInput.MilesPerHour" compute="1" removeZero="True">
              </field>
              <action name="Remove_1" command="markForDelete" caption="Remove">
                <nameValues>
                  <nameValue name="isRowAction" value="1" />
                </nameValues>
              </action>
            </group>
          </eliminationGroup>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_Consumer_Watercraft_View" caption="Marketplace_PersonalHome_1_0_0_0_Consumer_Watercraft_View" default="0" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="SPP" caption="SPP" prevPage="Watercraft" readOnlyRef="AllPage.ReadOnly">
        <group id="Line" vmHasRows="0" objectRef="Line" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.Consumer.SPP.UI_SectionCaption" value="Tell us about any personal property you wish to schedule" />
          <action name="AddItem_1" command="custom" caption="Add Item">
            <request verb="ManuScript.addObjectRecordRq">
              <nameValues>
                <nameValue idref="PolicyAdmin.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                <nameValue value="SPP" name="objectID" dataType="attribute" />
              </nameValues>
            </request>
          </action>
          <eliminationGroup id="eliminate" name="eliminate" validRef="LinePrivate.MultipleSPP">
            <field id="LinePrivate.MultipleSPP" idref="LinePrivate.MultipleSPP" fldName="LinePrivate.MultipleSPP">
            </field>
            <group id="SPP" vmHasRows="1" objectRef="SPP" iterMax="*" iterStep="1">
              <field id="SPPPrivate.TypeCaption" idref="SPPPrivate.TypeCaption" fldName="SPPPrivate.TypeCaption">
              </field>
              <field idref="SPPPrivate.TypeCaption" fldName="SPPPrivate.TypeCaption2" id="SPPPrivate.TypeCaption2" />
              <field id="SPPInput.Description" idref="SPPInput.Description">
              </field>
              <action name="Edit_1" command="specificIter" caption="Edit" pageRef="SPPDetail" modelCollection="SPPDetail">
                <nameValues>
                  <nameValue name="isRowAction" value="1" />
                </nameValues>
              </action>
              <action name="Remove_1" command="markForDelete" caption="Remove">
                <nameValues>
                  <nameValue name="isRowAction" value="1" />
                </nameValues>
              </action>
            </group>
          </eliminationGroup>
          <eliminationGroup id="eliminate2" name="eliminate2" validRef="LinePrivate.SingleSPP">
            <field id="LinePrivate.SingleSPP" idref="LinePrivate.SingleSPP" fldName="LinePrivate.SingleSPP">
            </field>
            <group id="SPP2" vmHasRows="1" objectRef="SPP" iterMax="*" iterStep="1">
              <field id="SPPInput.Type" idref="SPPInput.Type" onBlur="1">
              </field>
              <field id="SPPInput.Description2" idref="SPPInput.Description" />
              <field id="SPPInput.Limit" idref="SPPInput.Limit" onBlur="1" removeZero="True">
              </field>
              <field id="SPPInput.Vaulted" idref="SPPInput.Vaulted" compute="1">
              </field>
              <field id="SPPInput.BreakageCoverage" idref="SPPInput.BreakageCoverage" compute="1">
              </field>
              <field id="SPPInput.Blanket" idref="SPPInput.Blanket" compute="1">
              </field>
              <action name="Remove_2" command="markForDelete" caption="Remove">
                <nameValues>
                  <nameValue name="isRowAction" value="1" />
                </nameValues>
              </action>
              <action name="Appraisal_1" command="specificIter" caption="Appraisal" showRef="SPPPrivate.ShowApprisal" pageRef="AddAttachment" modelCollection="AddAttachment" />
            </group>
          </eliminationGroup>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_Consumer_SPP_View" caption="Marketplace_PersonalHome_1_0_0_0_Consumer_SPP_View" default="0" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="AdditionalCoverage" caption="Additional Coverage" prevPage="Coverage" showRef="AdditionalCoveragePage.Show" readOnlyRef="AdditionalCoveragePage.ReadOnly">
        <group id="Risk" vmHasRows="0" objectRef="Risk" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.Consumer.AdditionalCoverage.UI_SectionCaption" value="Enter your desired coverage limits" />
          <field id="True" idref="True" fldName="True">
          </field>
          <constant name="UI_SectionCaption2" id="Constant.Consumer.AdditionalCoverage.UI_SectionCaption2" value="Additional Property Coverages" />
          <field id="AdditionsAlterationsInput.Type" idref="AdditionsAlterationsInput.Type">
          </field>
          <field id="AdditionsAlterationsInput.Limit" idref="AdditionsAlterationsInput.Limit">
          </field>
          <field id="BusinessPropertyInput.Limit" idref="BusinessPropertyInput.Limit">
          </field>
          <field id="EarthquakeInput.Deductible" idref="EarthquakeInput.Deductible">
          </field>
          <field id="EarthquakeInput.LossAssessmentLimit" idref="EarthquakeInput.LossAssessmentLimit" removeZero="True">
          </field>
          <field id="IdentityFraudExpenseCoverageInput.Indicator" idref="IdentityFraudExpenseCoverageInput.Indicator">
          </field>
          <field id="InflationGuardInput.Limit" idref="InflationGuardInput.Limit" compute="1">
          </field>
          <field id="LossAssessmentInput.Limit" idref="LossAssessmentInput.Limit">
          </field>
          <field id="OtherStructuresRentedToOthersInput.Limit" idref="OtherStructuresRentedToOthersInput.Limit" compute="1" removeZero="DwellingPrivate.FormIsDwelling">
          </field>
          <field id="PermittedIncidentalOccupancyOtherStructuresInput.Limit" idref="PermittedIncidentalOccupancyOtherStructuresInput.Limit" removeZero="True">
          </field>
          <field id="PersonalPropertyOtherResidenceInput.Limit" idref="PersonalPropertyOtherResidenceInput.Limit" compute="1" removeZero="True">
          </field>
          <field id="LimitedFungiBacteriaInput.Limit" idref="LimitedFungiBacteriaInput.Limit">
          </field>
          <field id="OrdinanceOrLawInput.Limit" idref="OrdinanceOrLawInput.Limit">
          </field>
          <field id="CarportsPoolCagesInput.Limit" idref="CarportsPoolCagesInput.Limit" compute="1" onBlur="1">
          </field>
          <field id="CarportsPoolCagesInput.Description" idref="CarportsPoolCagesInput.Description" hideRef="CarportsPoolCagesPrivate.HideDescription">
          </field>
          <field id="SpecialComputerCoverageInput.Indicator" idref="SpecialComputerCoverageInput.Indicator">
          </field>
          <field id="SpecialPersonalPropertyCoverageInput.Indicator" idref="SpecialPersonalPropertyCoverageInput.Indicator">
          </field>
          <field id="UnitsRegularlyRentedToOthersInput.Indicator" idref="UnitsRegularlyRentedToOthersInput.Indicator">
          </field>
          <field id="UnscheduledElectronicApparatusInput.Limit" idref="UnscheduledElectronicApparatusInput.Limit">
          </field>
          <field id="UnscheduledGunsInput.Limit" idref="UnscheduledGunsInput.Limit">
          </field>
          <field id="UnscheduledJewelryInput.Limit" idref="UnscheduledJewelryInput.Limit">
          </field>
          <field id="UnscheduledMoneyInput.Limit" idref="UnscheduledMoneyInput.Limit">
          </field>
          <field id="UnscheduledSecuritiesInput.Limit" idref="UnscheduledSecuritiesInput.Limit">
          </field>
          <field id="UnscheduledSilverwareInput.Limit" idref="UnscheduledSilverwareInput.Limit">
          </field>
          <field id="WaterBackupAndSumpOverflowInput.Indicator" idref="WaterBackupAndSumpOverflowInput.Indicator">
          </field>
          <field id="WatercraftBlanketHullCoverageInput.Limit" idref="WatercraftBlanketHullCoverageInput.Limit">
          </field>
          <field idref="True" fldName="True2" id="True2" />
          <constant name="UI_SectionCaption3" id="Constant.Consumer.AdditionalCoverage.UI_SectionCaption3" value="Additional Liability Coverages" />
          <field id="IncidentalFarmingPersonalLiabilityInput.Type" idref="IncidentalFarmingPersonalLiabilityInput.Type">
          </field>
          <field id="PersonalInjuryInput.Indicator" idref="PersonalInjuryInput.Indicator">
          </field>
          <field id="ResidenceEmployeesInput.NumberOfEmployees" idref="ResidenceEmployeesInput.NumberOfEmployees" removeZero="True">
          </field>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_Consumer_AdditionalCoverage_View" caption="Marketplace_PersonalHome_1_0_0_0_Consumer_AdditionalCoverage_View" default="0" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="Summary" caption="Quote" showRef="SummaryPage.Show" calculate="2" idref="ExecutePremiums.Value" readOnlyRef="AllPage.ReadOnly">
        <group id="data" vmHasRows="0" objectRef="data" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.Consumer.Summary.UI_SectionCaption" value="Your Quote is Ready!" />
          <field id="Spacer" idref="Spacer" caption="Please review your quote below.  Use our tools to customize your coverage to meet you needs.">
          </field>
          <group id="Policy" vmHasRows="0" objectRef="Policy" iterMax="*" iterStep="1">
            <group id="Line" vmHasRows="0" objectRef="Line" iterMax="*" iterStep="1">
              <constant name="UI_SectionCaption2" id="Constant.Consumer.Summary.UI_SectionCaption2" value="Choose your coverage package" />
              <action name="Buythispolicy_1" command="custom" caption="Buy this policy" showRef="PolicyWorkflowDataInput.IsEligible" preCommand="PolicyPrivate.SetConsumerPurchaseAvailableTrue" pageRef="Purchase">
                <nameValues>
                  <nameValue name="ignoreValidation" value="0" />
                </nameValues>
              </action>
              <constant name="UI_SectionCaption3" id="Constant.Consumer.Summary.UI_SectionCaption3" value="COVERAGES" />
              <field id="CoverageADwellingInput.Limit" idref="CoverageADwellingInput.Limit" caption="Dwelling" compute="1" onBlur="1" hideRef="DwellingPrivate.FormIsCondoOrTenant">
              </field>
              <field id="CoverageCPersonalPropertyHO46Input.Limit" idref="CoverageCPersonalPropertyHO46Input.Limit" caption="Personal Property" compute="1" onBlur="1" hideRef="DwellingPrivate.FormIsDwelling">
              </field>
              <field id="DwellingInput.Deductible" idref="DwellingInput.Deductible" onBlur="1">
              </field>
              <eliminationGroup id="eliminate" name="eliminate" validRef="DwellingPrivate.FormIsDwelling">
                <field id="DwellingPrivate.FormIsDwelling" idref="DwellingPrivate.FormIsDwelling" fldName="DwellingPrivate.FormIsDwelling">
                </field>
                <field id="CoverageBOtherStructuresInput.Limit" idref="CoverageBOtherStructuresInput.Limit" caption="Other Structures" onBlur="1">
                </field>
                <field id="CoverageCPersonalPropertyHO3Input.Limit" idref="CoverageCPersonalPropertyHO3Input.Limit" caption="Personal Property" onBlur="1">
                </field>
              </eliminationGroup>
              <field id="CoverageDLossOfUseInput.Limit" idref="CoverageDLossOfUseInput.Limit" caption="Loss of Use" onBlur="1">
              </field>
              <field id="CoverageELiabilityInput.Limit" idref="CoverageELiabilityInput.Limit" caption="Personal Liability" onBlur="1">
              </field>
              <field id="CoverageFMedicalInput.Limit" idref="CoverageFMedicalInput.Limit" caption="Medical Payments" onBlur="1">
              </field>
              <field id="PolicyPremiums.Premium" idref="PolicyPremiums.Premium" caption=" Premium">
              </field>
            </group>
          </group>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_Consumer_Summary_View" caption="Marketplace_PersonalHome_1_0_0_0_Consumer_Summary_View" default="0" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="Purchase" caption="Purchase" showRef="PurchaseInformationPage.Show" readOnlyRef="AllPage.ReadOnly">
        <nameValues>
          <nameValue name="calculate" idref="True" />
        </nameValues>
        <group id="Policy" vmHasRows="0" objectRef="Policy" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.Consumer.Purchase.UI_SectionCaption" value="Now that you've decided to purchase this policy, we need some information to complete the process.  Thank you for doing business with us!" />
          <group id="Line" vmHasRows="0" objectRef="Line" iterMax="*" iterStep="1">
            <constant name="UI_SectionCaption2" id="Constant.Consumer.Purchase.UI_SectionCaption2" value="Additional Information" />
            <field id="UnderwritingQuestionsInput.IsThereATrampolineOnPremises" idref="UnderwritingQuestionsInput.IsThereATrampolineOnPremises" onBlur="1">
            </field>
            <constant name="UI_SectionCaption3" id="Constant.Consumer.Purchase.UI_SectionCaption3" value="Animals/Exotic Pets" />
            <field id="UnderwritingQuestionsInput.AnyAnimalsOrExoticPets" idref="UnderwritingQuestionsInput.AnyAnimalsOrExoticPets" onBlur="1">
            </field>
            <eliminationGroup id="eliminate" name="eliminate" validRef="UnderwritingQuestionsInput.AnyAnimalsOrExoticPets">
              <field idref="UnderwritingQuestionsInput.AnyAnimalsOrExoticPets" fldName="UnderwritingQuestionsInput.AnyAnimalsOrExoticPets2" id="UnderwritingQuestionsInput.AnyAnimalsOrExoticPets2" />
              <field id="AnimalPetSubQuestions.AnimalWeight" idref="AnimalPetSubQuestions.AnimalWeight" onBlur="1">
              </field>
              <field id="AnimalPetSubQuestions.AnimalDescription" idref="AnimalPetSubQuestions.AnimalDescription">
              </field>
              <field id="AnimalPetSubQuestions.ViciousAnimal" idref="AnimalPetSubQuestions.ViciousAnimal">
              </field>
              <field id="AnimalPetSubQuestions.Reptilesamphibians" idref="AnimalPetSubQuestions.Reptilesamphibians">
              </field>
              <field id="AnimalPetSubQuestions.LivestockSaddleAnimals" idref="AnimalPetSubQuestions.LivestockSaddleAnimals">
              </field>
              <field id="AnimalPetSubQuestions.IneligibleDogBreeds" idref="AnimalPetSubQuestions.IneligibleDogBreeds">
              </field>
            </eliminationGroup>
            <constant name="UI_SectionCaption4" id="Constant.Consumer.Purchase.UI_SectionCaption4" value="Swimming Pool" />
            <field id="UnderwritingQuestionsInput.SwimmingPool" idref="UnderwritingQuestionsInput.SwimmingPool" onBlur="1">
            </field>
            <eliminationGroup id="eliminate2" name="eliminate2" validRef="UnderwritingQuestionsInput.SwimmingPool">
              <field idref="UnderwritingQuestionsInput.SwimmingPool" fldName="UnderwritingQuestionsInput.SwimmingPool2" id="UnderwritingQuestionsInput.SwimmingPool2" />
              <field id="SwimmingPoolSubQuestions.PoolType" idref="SwimmingPoolSubQuestions.PoolType">
              </field>
              <field id="SwimmingPoolSubQuestions.ApprovedFence" idref="SwimmingPoolSubQuestions.ApprovedFence">
              </field>
              <field id="SwimmingPoolSubQuestions.DivingBoard" idref="SwimmingPoolSubQuestions.DivingBoard">
              </field>
              <field id="SwimmingPoolSubQuestions.Slide" idref="SwimmingPoolSubQuestions.Slide">
              </field>
            </eliminationGroup>
            <constant name="UI_SectionCaption5" id="Constant.Consumer.Purchase.UI_SectionCaption5" value="Home-based Business" />
            <field id="UnderwritingQuestionsInput.AnyBusinessConducted" idref="UnderwritingQuestionsInput.AnyBusinessConducted" onBlur="1">
            </field>
            <eliminationGroup id="eliminate3" name="eliminate3" validRef="UnderwritingQuestionsInput.AnyBusinessConducted">
              <field idref="UnderwritingQuestionsInput.AnyBusinessConducted" fldName="UnderwritingQuestionsInput.AnyBusinessConducted2" id="UnderwritingQuestionsInput.AnyBusinessConducted2" />
              <field id="BusinessSubQuestions.BusinessConductedTypeOfBusiness" idref="BusinessSubQuestions.BusinessConductedTypeOfBusiness">
              </field>
              <field id="BusinessSubQuestions.BusinessConductedOwnership" idref="BusinessSubQuestions.BusinessConductedOwnership">
              </field>
              <field id="BusinessSubQuestions.BusinessConductedLocation" idref="BusinessSubQuestions.BusinessConductedLocation">
              </field>
              <field id="BusinessSubQuestions.BusinessConductedCustomers" idref="BusinessSubQuestions.BusinessConductedCustomers">
              </field>
              <field id="BusinessSubQuestions.BusinessConductedNonResidentEmployees" idref="BusinessSubQuestions.BusinessConductedNonResidentEmployees">
              </field>
              <field id="BusinessSubQuestions.BusinessConductedCommercialCoverageInForce" idref="BusinessSubQuestions.BusinessConductedCommercialCoverageInForce">
              </field>
            </eliminationGroup>
          </group>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_Consumer_Purchase_View" caption="Marketplace_PersonalHome_1_0_0_0_Consumer_Purchase_View" default="0" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="PaymentDetails" caption="Payment Details" showRef="PurchaseInformationPage.PaymentPageShow" manuscriptIdRef="PolicyAdmin.BillingWorkflowManuScriptID" modelCollectionIdRef="PaymentDetails.BillingSetup" viewModelIdRef="PaymentDetails.PaymentDetails" subnavigation="0" />
    </modelCollection>
    <modelCollection name="WatercraftDetail">
      <viewModel navigable="1" name="WatercraftDetail" caption="Watercraft Detail">
        <group id="Watercraft" vmHasRows="1" objectRef="Watercraft" iterMax="*" iterStep="1">
          <field id="WatercraftInput.Type" idref="WatercraftInput.Type" compute="0" onBlur="1">
          </field>
          <field id="WatercraftInput.Length" idref="WatercraftInput.Length" removeZero="True">
          </field>
          <field id="WatercraftInput.Horsepower" idref="WatercraftInput.Horsepower" removeZero="True">
          </field>
          <field id="WatercraftInput.MilesPerHour" idref="WatercraftInput.MilesPerHour" compute="1" removeZero="True">
          </field>
          <action name="OK_1" command="custom" caption="OK" pageRef="Watercraft" modelCollection="Consumer">
            <nameValues>
              <nameValue name="isRowAction" value="1" />
            </nameValues>
          </action>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_WatercraftDetail_WatercraftDetail_View" caption="Marketplace_PersonalHome_1_0_0_0_WatercraftDetail_WatercraftDetail_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="SPPDetail">
      <viewModel navigable="1" name="SPPDetail" caption="SPP Detail">
        <group id="SPP" vmHasRows="1" objectRef="SPP" iterMax="*" iterStep="1">
          <field id="SPPInput.Type" idref="SPPInput.Type" onBlur="1">
          </field>
          <field id="SPPInput.Description" idref="SPPInput.Description">
          </field>
          <field id="SPPInput.Limit" idref="SPPInput.Limit" onBlur="1" removeZero="True">
          </field>
          <field id="SPPInput.Vaulted" idref="SPPInput.Vaulted" compute="1">
          </field>
          <field id="SPPInput.BreakageCoverage" idref="SPPInput.BreakageCoverage" compute="1">
          </field>
          <field id="SPPInput.Blanket" idref="SPPInput.Blanket" compute="1">
          </field>
          <action name="OK_1" command="custom" caption="OK" pageRef="SPP" modelCollection="Consumer">
            <nameValues>
              <nameValue name="isRowAction" value="1" />
            </nameValues>
          </action>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_SPPDetail_SPPDetail_View" caption="Marketplace_PersonalHome_1_0_0_0_SPPDetail_SPPDetail_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="HomePackageCoverage">
      <viewModel navigable="1" name="HomePackageCoverage" caption="Homeowners Pricing" readOnlyRef="CoveragePage.ReadOnly">
        <group id="Policy" vmHasRows="0" objectRef="Policy" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.HomePackageCoverage.HomePackageCoverage.UI_SectionCaption" value="Coverage Calculator" />
          <eliminationGroup id="eliminate" name="eliminate" validRef="DwellingPrivate.FormIsDwelling">
            <field id="DwellingPrivate.FormIsDwelling" idref="DwellingPrivate.FormIsDwelling" fldName="DwellingPrivate.FormIsDwelling">
            </field>
            <field id="CoverageADwellingInput.Limit" idref="CoverageADwellingInput.Limit" compute="1" onBlur="1" hideRef="DwellingPrivate.FormIsCondoOrTenant">
            </field>
            <field id="CoverageADwellingInput.Limit2" idref="CoverageADwellingInput.Limit" compute="1" onBlur="1" hideRef="DwellingPrivate.FormIsCondoOrTenant" />
            <field id="DwellingOutput.AdjustedBasePremium" idref="DwellingOutput.AdjustedBasePremium" caption="$">
            </field>
            <field id="Spacer" idref="Spacer" caption="All-Peril Deductible">
            </field>
            <constant name="UI_SectionCaption2" id="Constant.HomePackageCoverage.HomePackageCoverage.UI_SectionCaption2" value=" " />
            <field id="CoverageBOtherStructuresInput.Limit" idref="CoverageBOtherStructuresInput.Limit">
            </field>
            <field id="CoverageBOtherStructuresInput.Limit2" idref="CoverageBOtherStructuresInput.Limit" onBlur="1" />
            <field id="CoverageBOtherStructuresOutput.Premium" idref="CoverageBOtherStructuresOutput.Premium" caption="$">
            </field>
            <field id="CoverageCPersonalPropertyHO3Input.Limit" idref="CoverageCPersonalPropertyHO3Input.Limit" onBlur="1">
            </field>
            <field id="CoverageCPersonalPropertyHO3Input.Limit2" idref="CoverageCPersonalPropertyHO3Input.Limit" onBlur="1" />
            <field id="CoverageCPersonalPropertyHO3OutputNonShredded.IncludedInCovAText" idref="CoverageCPersonalPropertyHO3OutputNonShredded.IncludedInCovAText" compute="1">
            </field>
            <field id="CoverageDLossOfUseInput.Limit" idref="CoverageDLossOfUseInput.Limit">
            </field>
            <field id="CoverageDLossOfUseInput.Limit2" idref="CoverageDLossOfUseInput.Limit" onBlur="1" />
            <field id="CoverageDLossOfUseOutput.Premium" idref="CoverageDLossOfUseOutput.Premium" caption="$">
            </field>
            <field id="Spacer2" idref="Spacer" caption="Personal Liability Limit (E)" />
            <field id="CoverageELiabilityOutput.Premium" idref="CoverageELiabilityOutput.Premium" caption="$">
            </field>
            <field id="Spacer3" idref="Spacer" caption="Medical Payments Limit (F)" />
            <field id="CoverageFMedicalOutput.Premium" idref="CoverageFMedicalOutput.Premium" caption="$">
            </field>
            <field id="Spacer4" idref="Spacer" caption="Optional Property Coverage" />
            <field id="SectionICoveragesOutput.SectionIPremium" idref="SectionICoveragesOutput.SectionIPremium" caption="$" compute="1">
            </field>
            <field id="Spacer5" idref="Spacer" caption="Optional Liability Coverage" />
            <field id="SectionIICoveragesOutput.SectionIIPremium" idref="SectionIICoveragesOutput.SectionIIPremium" caption="$" compute="1">
            </field>
            <field id="Spacer6" idref="Spacer" caption="Scheduled Personal Property" />
            <field id="SPPSubtotals.SPPTotalPremium" idref="SPPSubtotals.SPPTotalPremium" caption="$">
            </field>
            <field id="Spacer7" idref="Spacer" caption="Watercraft" />
            <field id="WatercraftSubtotals.WatercraftTotalPremium" idref="WatercraftSubtotals.WatercraftTotalPremium" caption="$">
            </field>
          </eliminationGroup>
          <constant name="UI_SectionCaption3" id="Constant.HomePackageCoverage.HomePackageCoverage.UI_SectionCaption3" value="Coverage Calculator" />
          <eliminationGroup id="eliminate2" name="eliminate2" validRef="DwellingPrivate.FormIsCondoOrTenant">
            <field id="DwellingPrivate.FormIsCondoOrTenant" idref="DwellingPrivate.FormIsCondoOrTenant" fldName="DwellingPrivate.FormIsCondoOrTenant">
            </field>
            <field id="CoverageCPersonalPropertyHO46Input.Limit" idref="CoverageCPersonalPropertyHO46Input.Limit" compute="1" onBlur="1" hideRef="DwellingPrivate.FormIsDwelling">
            </field>
            <field id="CoverageDLossOfUseInput.Limit3" idref="CoverageDLossOfUseInput.Limit" compute="1" onBlur="1" />
            <field id="CoverageELiabilityInput.Limit" idref="CoverageELiabilityInput.Limit" compute="1" onBlur="1">
            </field>
            <field id="CoverageFMedicalInput.Limit" idref="CoverageFMedicalInput.Limit" compute="1" onBlur="1">
            </field>
            <field id="Spacer8" idref="Spacer" caption="Optional Property Coverage" />
            <field id="Spacer9" idref="Spacer" caption="Optional Liability Coverage" />
            <field id="Spacer10" idref="Spacer" caption="Scheduled Personal Property" />
            <field id="Spacer11" idref="Spacer" caption="Watercraft" />
            <field id="CoverageCPersonalPropertyHO46Output.Premium" idref="CoverageCPersonalPropertyHO46Output.Premium" caption="$" compute="1" hideRef="DwellingPrivate.FormIsDwelling">
            </field>
            <field id="CoverageDLossOfUseOutput.Premium2" idref="CoverageDLossOfUseOutput.Premium" caption="$" compute="1" />
            <field id="CoverageELiabilityOutput.Premium2" idref="CoverageELiabilityOutput.Premium" caption="$" compute="1" />
            <field id="CoverageFMedicalOutput.Premium2" idref="CoverageFMedicalOutput.Premium" caption="$" compute="1" />
            <field id="SectionICoveragesOutput.SectionIPremium2" idref="SectionICoveragesOutput.SectionIPremium" caption="$" compute="1" />
            <field id="SectionIICoveragesOutput.SectionIIPremium2" idref="SectionIICoveragesOutput.SectionIIPremium" caption="$" compute="1" />
            <field id="SPPSubtotals.SPPTotalPremium2" idref="SPPSubtotals.SPPTotalPremium" caption="$" />
            <field id="WatercraftSubtotals.WatercraftTotalPremium2" idref="WatercraftSubtotals.WatercraftTotalPremium" caption="$" />
          </eliminationGroup>
          <field id="AutoHomeDiscountInput.Selected" idref="AutoHomeDiscountInput.Selected" onBlur="1">
          </field>
          <eliminationGroup id="eliminate3" name="eliminate3" validRef="AutoHomeDiscountOutput.Indicator">
            <field id="AutoHomeDiscountOutput.Indicator" idref="AutoHomeDiscountOutput.Indicator" fldName="AutoHomeDiscountOutput.Indicator">
            </field>
            <field id="AutoHomeDiscountOutput.Premium" idref="AutoHomeDiscountOutput.Premium" caption="$">
            </field>
          </eliminationGroup>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_HomePackageCoverage_HomePackageCoverage_View" caption="Marketplace_PersonalHome_1_0_0_0_HomePackageCoverage_HomePackageCoverage_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="ChangeWatercraft_MAP">
      <viewModel navigable="1" name="Select" caption="Add/Remove Watercraft">
        <group id="Line" vmHasRows="0" objectRef="Line" iterMax="*" iterStep="1">
          <group id="Watercraft" vmHasRows="1" objectRef="Watercraft" iterMax="*" iterStep="1">
            <constant name="UI_SectionCaption" id="Constant.ChangeWatercraft_MAP.Select.UI_SectionCaption" value="Do you want to remove a watercraft from the policy?" />
            <action name="markForDelete_1" command="markForDelete" pageRef="Summary">
              <nameValues>
                <nameValue name="caption" idref="WatercraftPrivate.RemoveLabel" />
                <nameValue name="isRowAction" value="1" />
              </nameValues>
            </action>
          </group>
          <constant name="UI_SectionCaption2" id="Constant.ChangeWatercraft_MAP.Select.UI_SectionCaption2" value="Do you want to add a watercraft to the policy?" />
          <group id="Watercraft2" vmHasRows="1" objectRef="Watercraft" iterMax="*" iterStep="1">
            <action name="AddNewWatercraft_1" command="add" caption="Add New Watercraft" pageRef="NewWatercraft" modelCollection="ChangeWatercraft_Add" />
          </group>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_ChangeWatercraft_MAP_Select_View" caption="Marketplace_PersonalHome_1_0_0_0_ChangeWatercraft_MAP_Select_View" default="0" />
        </views>
      </viewModel>
      <viewModel name="_Master" caption="Master" master="1" navigable="0">
        <group id="data" objectRef="data" iterMax="*" iterStep="1">
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_ChangeWatercraft_MAP__Master_View" caption="Marketplace_PersonalHome_1_0_0_0_ChangeWatercraft_MAP__Master_View" default="1" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="Summary" caption="Summary" nextButton="" prevButton="">
        <group id="Line" vmHasRows="0" objectRef="Line" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.ChangeWatercraft_MAP.Summary.UI_SectionCaption" value="Summary of Changes" />
          <field id="data.SubmissionExecute" idref="data.SubmissionExecute">
          </field>
          <field id="data.TotalPremium" idref="data.TotalPremium" caption="The full-term total is now">
          </field>
          <field id="data.TotalPremiumWritten" idref="data.TotalPremiumWritten" caption="The prorated total is">
          </field>
          <field id="data.TotalPremiumChange" idref="data.TotalPremiumChange" caption="The cost of the change">
          </field>
          <group id="Watercraft" vmHasRows="1" objectRef="Watercraft" iterMax="*" iterStep="1">
            <constant name="UI_SectionCaption2" id="Constant.ChangeWatercraft_MAP.Summary.UI_SectionCaption2" value="Watercraft on Policy" />
            <field id="WatercraftOutput.SummaryDescription" idref="WatercraftOutput.SummaryDescription" caption="Watercraft" compute="1">
            </field>
            <field id="WatercraftCoverageOutput.Premium" idref="WatercraftCoverageOutput.Premium" caption="Full-Term Premium">
            </field>
            <field id="WatercraftCoverageOutput.PremiumWritten" idref="WatercraftCoverageOutput.PremiumWritten" caption="Pro-Rated Premium">
            </field>
          </group>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_ChangeWatercraft_MAP_Summary_View" caption="Marketplace_PersonalHome_1_0_0_0_ChangeWatercraft_MAP_Summary_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="ChangeWatercraft_Add">
      <viewModel navigable="1" name="NewWatercraft" caption="New Watercraft" nextButton="" prevButton="">
        <group id="Watercraft" vmHasRows="1" objectRef="Watercraft" iterMax="*" iterStep="1">
          <field id="WatercraftInput.Type" idref="WatercraftInput.Type" compute="0" onBlur="1">
          </field>
          <field id="WatercraftInput.Length" idref="WatercraftInput.Length" removeZero="True">
          </field>
          <field id="WatercraftInput.Horsepower" idref="WatercraftInput.Horsepower" removeZero="True">
          </field>
          <field id="WatercraftInput.MilesPerHour" idref="WatercraftInput.MilesPerHour" compute="1" removeZero="True">
          </field>
          <action name="OK_1" command="goto" caption="OK" pageRef="Summary" modelCollection="ChangeWatercraft_MAP">
            <nameValues>
              <nameValue name="isRowAction" value="1" />
            </nameValues>
          </action>
          <action name="Cancel_1" command="delete" caption="Cancel" pageRef="Select" modelCollection="ChangeWatercraft_MAP">
            <nameValues>
              <nameValue name="ignoreValidation" idref="True" />
              <nameValue name="isRowAction" value="1" />
            </nameValues>
          </action>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_ChangeWatercraft_Add_NewWatercraft_View" caption="Marketplace_PersonalHome_1_0_0_0_ChangeWatercraft_Add_NewWatercraft_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="ChangeSPP_MAP">
      <viewModel navigable="1" name="Select" caption="Add/Remove SPP">
        <group id="Line" vmHasRows="0" objectRef="Line" iterMax="*" iterStep="1">
          <group id="SPP" vmHasRows="1" objectRef="SPP" iterMax="*" iterStep="1">
            <constant name="UI_SectionCaption" id="Constant.ChangeSPP_MAP.Select.UI_SectionCaption" value="Do you want to remove a SPP item from the policy?" />
            <action name="markForDelete_1" command="markForDelete" pageRef="Summary">
              <nameValues>
                <nameValue name="caption" idref="SPPPrivate.RemoveLabel" />
                <nameValue name="isRowAction" value="1" />
              </nameValues>
            </action>
          </group>
          <constant name="UI_SectionCaption2" id="Constant.ChangeSPP_MAP.Select.UI_SectionCaption2" value="Do you want to add a SPP item to the policy?" />
          <group id="SPP2" vmHasRows="1" objectRef="SPP" iterMax="*" iterStep="1">
            <action name="AddNewSPPItem_1" command="add" caption="Add New SPP Item" pageRef="NewSPP" modelCollection="ChangeSPP_Add" />
          </group>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_ChangeSPP_MAP_Select_View" caption="Marketplace_PersonalHome_1_0_0_0_ChangeSPP_MAP_Select_View" default="0" />
        </views>
      </viewModel>
      <viewModel name="_Master" caption="Master" master="1" navigable="0">
        <group id="data" objectRef="data" iterMax="*" iterStep="1">
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_ChangeSPP_MAP__Master_View" caption="Marketplace_PersonalHome_1_0_0_0_ChangeSPP_MAP__Master_View" default="1" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="Summary" caption="Summary" nextButton="" prevButton="">
        <group id="Line" vmHasRows="0" objectRef="Line" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.ChangeSPP_MAP.Summary.UI_SectionCaption" value="Summary of Changes" />
          <field id="data.SubmissionExecute" idref="data.SubmissionExecute">
          </field>
          <field id="data.TotalPremium" idref="data.TotalPremium" caption="The full-term total is now">
          </field>
          <field id="data.TotalPremiumWritten" idref="data.TotalPremiumWritten" caption="The prorated total is">
          </field>
          <field id="data.TotalPremiumChange" idref="data.TotalPremiumChange" caption="The cost of the change">
          </field>
          <group id="SPP" vmHasRows="1" objectRef="SPP" iterMax="*" iterStep="1">
            <constant name="UI_SectionCaption2" id="Constant.ChangeSPP_MAP.Summary.UI_SectionCaption2" value="Scheduled Personal Property on Policy" />
            <field id="SPPOutput.SummaryDescription" idref="SPPOutput.SummaryDescription" caption="Scheduled Personal Property" compute="1">
            </field>
            <field id="SPPCoverageOutput.Premium" idref="SPPCoverageOutput.Premium" caption="Full-Term Premium">
            </field>
            <field id="SPPCoverageOutput.PremiumWritten" idref="SPPCoverageOutput.PremiumWritten" caption="Pro-Rated Premium">
            </field>
          </group>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_ChangeSPP_MAP_Summary_View" caption="Marketplace_PersonalHome_1_0_0_0_ChangeSPP_MAP_Summary_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="ChangeSPP_Add">
      <viewModel navigable="1" name="NewSPP" caption="New SPP Item" nextButton="" prevButton="">
        <group id="SPP" vmHasRows="1" objectRef="SPP" iterMax="*" iterStep="1">
          <field id="SPPInput.Type" idref="SPPInput.Type" onBlur="1">
          </field>
          <field id="SPPInput.Description" idref="SPPInput.Description">
          </field>
          <field id="SPPInput.Limit" idref="SPPInput.Limit" onBlur="1" removeZero="True">
          </field>
          <field id="SPPInput.Vaulted" idref="SPPInput.Vaulted" compute="1">
          </field>
          <field id="SPPInput.BreakageCoverage" idref="SPPInput.BreakageCoverage" compute="1">
          </field>
          <field id="SPPInput.Blanket" idref="SPPInput.Blanket" compute="1">
          </field>
          <action name="OK_1" command="goto" caption="OK" pageRef="Summary" modelCollection="ChangeSPP_MAP">
            <nameValues>
              <nameValue name="isRowAction" value="1" />
            </nameValues>
          </action>
          <action name="Cancel_1" command="delete" caption="Cancel" pageRef="Select" modelCollection="ChangeSPP_MAP">
            <nameValues>
              <nameValue name="ignoreValidation" idref="True" />
              <nameValue name="isRowAction" value="1" />
            </nameValues>
          </action>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_ChangeSPP_Add_NewSPP_View" caption="Marketplace_PersonalHome_1_0_0_0_ChangeSPP_Add_NewSPP_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="ChangeCoverage_MAP">
      <viewModel navigable="1" name="Coverage" caption="Coverage" modelCollectionIdRef="Coverage.Consumer" viewModelIdRef="Coverage.Coverage" subnavigation="0" />
      <viewModel name="_Master" caption="Master" master="1" navigable="0">
        <group id="data" objectRef="data" iterMax="*" iterStep="1">
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_ChangeCoverage_MAP__Master_View" caption="Marketplace_PersonalHome_1_0_0_0_ChangeCoverage_MAP__Master_View" default="1" />
        </views>
      </viewModel>
      <viewModel navigable="1" name="AdditionalCoverage" caption="Additional Coverage" modelCollectionIdRef="AdditionalCoverage.Consumer" viewModelIdRef="AdditionalCoverage.AdditionalCoverage" subnavigation="0" />
      <viewModel navigable="1" name="Summary" caption="Summary" nextButton="" prevButton="">
        <group id="Line" vmHasRows="0" objectRef="Line" iterMax="*" iterStep="1">
          <constant name="UI_SectionCaption" id="Constant.ChangeCoverage_MAP.Summary.UI_SectionCaption" value="Summary of Changes" />
          <field id="data.SubmissionExecute" idref="data.SubmissionExecute">
          </field>
          <field id="data.TotalPremium" idref="data.TotalPremium" caption="The full-term total is now">
          </field>
          <field id="data.TotalPremiumWritten" idref="data.TotalPremiumWritten" caption="The prorated total is">
          </field>
          <field id="data.TotalPremiumChange" idref="data.TotalPremiumChange" caption="The cost of the change">
          </field>
          <group id="Risk" vmHasRows="0" objectRef="Risk" iterMax="*" iterStep="1">
            <constant name="UI_SectionCaption2" id="Constant.ChangeCoverage_MAP.Summary.UI_SectionCaption2" value="Coverages" />
            <field id="DwellingOutput.AdjustedBasePremium" idref="DwellingOutput.AdjustedBasePremium">
            </field>
            <field id="CoverageBOtherStructuresOutput.Premium" idref="CoverageBOtherStructuresOutput.Premium" caption="Other Structures (B)" hideRef="DwellingPrivate.FormIsCondoOrTenant">
            </field>
            <field id="CoverageCPersonalPropertyHO3Output.Premium" idref="CoverageCPersonalPropertyHO3Output.Premium" caption="Personal Property (C)" hideRef="DwellingPrivate.FormIsCondoOrTenant">
            </field>
            <field id="CoverageDLossOfUseOutput.Premium" idref="CoverageDLossOfUseOutput.Premium" caption="Loss of Use (D)">
            </field>
            <field id="CoverageELiabilityOutput.Premium" idref="CoverageELiabilityOutput.Premium" caption="Personal Liability (E)">
            </field>
            <field id="CoverageFMedicalOutput.Premium" idref="CoverageFMedicalOutput.Premium" caption="Medical Payments (F)">
            </field>
            <field id="SectionICoveragesOutput.SectionIPremium" idref="SectionICoveragesOutput.SectionIPremium" caption="Optional Property Coverages">
            </field>
            <field id="SectionIICoveragesOutput.SectionIIPremium" idref="SectionIICoveragesOutput.SectionIIPremium" caption="Optional Liability Coverages">
            </field>
          </group>
        </group>
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_ChangeCoverage_MAP_Summary_View" caption="Marketplace_PersonalHome_1_0_0_0_ChangeCoverage_MAP_Summary_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="QuickQuote" abstract="1">
      <viewModel navigable="1" name="QuickQuote" caption="Quick Quote" calculate="1" idref="QuickQuotePage.Calculate" override="1" prevPage="" usePartyMappings="1">
        <nameValues>
          <nameValue name="calculate" idref="True" />
          <nameValue name="usePartyMappings" value="1" />
        </nameValues>
        <group id="data" vmHasRows="0" objectRef="data" iterMax="*" iterStep="1">
          <group id="Account" vmHasRows="0" objectRef="Account" iterMax="*" iterStep="1">
            <constant name="UI_SectionCaption" id="Constant.QuickQuote.QuickQuote.UI_SectionCaption" value="Member" />
            <constant name="UI_SectionCaption2" id="Constant.QuickQuote.QuickQuote.UI_SectionCaption2" value="Applicant Information" />
            <field id="AccountInput.FirstName" idref="AccountInput.FirstName">
            </field>
            <action name="Search_1" command="custom" caption="Search" />
            <field id="AccountInput.LastName" idref="AccountInput.LastName" compute="1">
            </field>
            <field id="AccountInput.ZipCode" idref="AccountInput.ZipCode">
            </field>
            <field id="AccountInput.PrimaryPhone" idref="AccountInput.PrimaryPhone">
            </field>
            <field id="AccountInput.Email" idref="AccountInput.Email">
            </field>
            <field id="AccountInput.EmailNotRequired" idref="AccountInput.EmailNotRequired" onBlur="1">
            </field>
          </group>
          <group id="Policy" vmHasRows="0" objectRef="Policy" iterMax="*" iterStep="1">
            <group id="Line" vmHasRows="0" objectRef="Line" iterMax="*" iterStep="1">
              <group id="Risk" vmHasRows="0" objectRef="Risk" iterMax="*" iterStep="1">
                <constant name="UI_SectionCaption3" id="Constant.QuickQuote.QuickQuote.UI_SectionCaption3" value="Dwelling" />
                <field id="DwellingInput.Form" idref="DwellingInput.Form" onBlur="1">
                </field>
                <field id="CoverageADwellingInput.Limit" idref="CoverageADwellingInput.Limit" caption="Dwelling Limit" compute="1" onBlur="1" removeZero="True" hideRef="DwellingPrivate.FormIsCondoOrTenant">
                </field>
                <field id="CoverageCPersonalPropertyHO46Input.Limit" idref="CoverageCPersonalPropertyHO46Input.Limit" caption="Personal Property Limit" compute="1" onBlur="1" removeZero="True" hideRef="DwellingPrivate.HideCoverageCLimit">
                </field>
                <field id="DwellingInput.UseType" idref="DwellingInput.UseType">
                </field>
                <field id="DwellingInput.Construction" idref="DwellingInput.Construction" onBlur="1">
                </field>
                <field id="DwellingInput.YearBuilt" idref="DwellingInput.YearBuilt" onBlur="1" removeZero="True" hideRef="DwellingPrivate.FormIsCondoOrTenant">
                </field>
                <field id="DwellingInput.NumberOfFamilies" idref="DwellingInput.NumberOfFamilies" caption="Number of Families" onBlur="1">
                </field>
                <constant name="UI_SectionCaption4" id="Constant.QuickQuote.QuickQuote.UI_SectionCaption4" value="Coverage" />
                <field id="LineInput.CoveragePackage" idref="LineInput.CoveragePackage" compute="1" onBlur="1">
                </field>
                <field id="CoverageELiabilityInput.Limit" idref="CoverageELiabilityInput.Limit" caption="Liability Limit">
                </field>
                <field id="CoverageFMedicalInput.Limit" idref="CoverageFMedicalInput.Limit" caption="Medical Limit">
                </field>
                <field id="DwellingInput.Deductible" idref="DwellingInput.Deductible">
                </field>
                <field id="CreditCardInput.Limit" idref="CreditCardInput.Limit" caption="Credit Card">
                </field>
                <field id="RefrigeratedPersonalPropertyInput.Indicator" idref="RefrigeratedPersonalPropertyInput.Indicator" caption="Refrigerated Property Coverage">
                </field>
                <field id="ReplacementCostContentsInput.Indicator" idref="ReplacementCostContentsInput.Indicator" caption="Rep. Cost - Contents" hideRef="True">
                </field>
                <field id="ReplacementCostDwellingInput.Indicator" idref="ReplacementCostDwellingInput.Indicator" caption="Repl. Cost - Dwelling" hideRef="True">
                </field>
                <constant name="UI_SectionCaption5" id="Constant.QuickQuote.QuickQuote.UI_SectionCaption5" value="Discounts" />
                <field id="AutoHomeDiscountInput.Selected" idref="AutoHomeDiscountInput.Selected" onBlur="1">
                </field>
              </group>
            </group>
          </group>
          <constant name="UI_SectionCaption6" id="Constant.QuickQuote.QuickQuote.UI_SectionCaption6" value="Quote" />
          <field id="data.TotalPremium" idref="data.TotalPremium" caption="Your premium could be as low as:">
          </field>
        </group>
        <externalView name="TransactionWorkflowFooter" manuscriptIdRef="TransactionWorkflowFooter.ManuscriptID" modelCollectionIdRef="TransactionWorkflowFooter.ModelCollection" viewModelIdRef="TransactionWorkflowFooter.ViewModel" />
        <views>
          <view id="Marketplace_PersonalHome_1_0_0_0_QuickQuote_QuickQuote_View" caption="Marketplace_PersonalHome_1_0_0_0_QuickQuote_QuickQuote_View" default="0" />
        </views>
      </viewModel>
    </modelCollection>
    <modelCollection name="LocationDetail" abstract="1">
    </modelCollection>
  </modelCollections>
</ManuScript>